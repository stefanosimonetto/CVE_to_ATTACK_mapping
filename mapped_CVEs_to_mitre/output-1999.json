[
    {
        "CVE ID": "CVE-1999-0001",
        "Description": "ip_input.c in BSD-derived TCP/IP implementations allows remote attackers to cause a denial of service (crash or hang) via crafted packets.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0002",
        "Description": "Buffer overflow in NFS mountd gives root access to remote attackers, mostly in Linux systems.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0003",
        "Description": "Execute commands as root via buffer overflow in Tooltalk database server (rpc.ttdbserverd).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0004",
        "Description": "MIME buffer overflow in email clients, e.g. Solaris mailtool and Outlook.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0005",
        "Description": "Arbitrary command execution via IMAP buffer overflow in authenticate command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0006",
        "Description": "Buffer overflow in POP servers based on BSD/Qualcomm's qpopper allows remote attackers to gain root access using a long PASS command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0007",
        "Description": "Information from SSL-encrypted sessions via PKCS #1.",
        "CWE": [
            {
                "CWE": "CWE-327",
                "CWE Description": "The product uses a broken or risky cryptographic algorithm or protocol.",
                "CWE Techniques": [
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0008",
        "Description": "Buffer overflow in NIS+, in Sun's rpc.nisd program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0009",
        "Description": "Inverse query buffer overflow in BIND 4.9 and BIND 8 Releases.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0010",
        "Description": "Denial of Service vulnerability in BIND 8 Releases via maliciously formatted DNS messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0011",
        "Description": "Denial of Service vulnerabilities in BIND 4.9 and BIND 8 Releases via CNAME record and zone transfer.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0012",
        "Description": "Some web servers under Microsoft Windows allow remote attackers to bypass access restrictions for files with long file names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0013",
        "Description": "Stolen credentials from SSH clients via ssh-agent program, allowing other local users to access remote accounts belonging to the ssh-agent user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0014",
        "Description": "Unauthorized privileged access or denial of service via dtappgather program in CDE.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0015",
        "Description": "Teardrop IP denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0016",
        "Description": "Land IP denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0017",
        "Description": "FTP servers can allow an attacker to connect to arbitrary ports on machines other than the FTP client, aka FTP bounce.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0018",
        "Description": "Buffer overflow in statd allows root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0019",
        "Description": "Delete or create a file via rpc.statd, due to invalid information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0021",
        "Description": "Arbitrary command execution via buffer overflow in Count.cgi (wwwcount) cgi-bin program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0022",
        "Description": "Local user gains root privileges via buffer overflow in rdist, via expstr() function.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0023",
        "Description": "Local user gains root privileges via buffer overflow in rdist, via lookup() function.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0024",
        "Description": "DNS cache poisoning via BIND, by predictable query IDs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0025",
        "Description": "root privileges via buffer overflow in df command on SGI IRIX systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0026",
        "Description": "root privileges via buffer overflow in pset command on SGI IRIX systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0027",
        "Description": "root privileges via buffer overflow in eject command on SGI IRIX systems.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0028",
        "Description": "root privileges via buffer overflow in login/scheme command on SGI IRIX systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0029",
        "Description": "root privileges via buffer overflow in ordist command on SGI IRIX systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0030",
        "Description": "root privileges via buffer overflow in xlock command on SGI IRIX systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0031",
        "Description": "JavaScript in Internet Explorer 3.x and 4.x, and Netscape 2.x, 3.x and 4.x, allows remote attackers to monitor a user's web activities, aka the Bell Labs vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0032",
        "Description": "Buffer overflow in lpr, as used in BSD-based systems including Linux, allows local users to execute arbitrary code as root via a long -C (classification) command line option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0033",
        "Description": "Command execution in Sun systems via buffer overflow in the at program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0034",
        "Description": "Buffer overflow in suidperl (sperl), Perl 4.x and 5.x.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0035",
        "Description": "Race condition in signal handling routine in ftpd, allowing read/write arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0036",
        "Description": "IRIX login program with a nonzero LOCKOUT parameter allows creation or damage to files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0037",
        "Description": "Arbitrary command execution via metamail package using message headers, when user processes attacker's message using metamail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0038",
        "Description": "Buffer overflow in xlock program allows local users to execute commands as root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0039",
        "Description": "webdist CGI program (webdist.cgi) in SGI IRIX allows remote attackers to execute arbitrary commands via shell metacharacters in the distloc parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0040",
        "Description": "Buffer overflow in Xt library of X Windowing System allows local users to execute commands with root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0041",
        "Description": "Buffer overflow in NLS (Natural Language Service).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0042",
        "Description": "Buffer overflow in University of Washington's implementation of IMAP and POP servers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0043",
        "Description": "Command execution via shell metachars in INN daemon (innd) 1.5 using \"newgroup\" and \"rmgroup\" control messages, and others.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0044",
        "Description": "fsdump command in IRIX allows local users to obtain root access by modifying sensitive files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0045",
        "Description": "List of arbitrary files on Web host via nph-test-cgi script.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0046",
        "Description": "Buffer overflow of rlogin program using TERM environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0047",
        "Description": "MIME conversion buffer overflow in sendmail versions 8.8.3 and 8.8.4.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0048",
        "Description": "Talkd, when given corrupt DNS information, can be used to execute arbitrary commands with root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0049",
        "Description": "Csetup under IRIX allows arbitrary file creation or overwriting.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0050",
        "Description": "Buffer overflow in HP-UX newgrp program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0051",
        "Description": "Arbitrary file creation and program execution using FLEXlm LicenseManager, from versions 4.0 to 5.0, in IRIX.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0052",
        "Description": "IP fragmentation denial of service in FreeBSD allows a remote attacker to cause a crash.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0053",
        "Description": "TCP RST denial of service in FreeBSD.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0054",
        "Description": "Sun's ftpd daemon can be subjected to a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0055",
        "Description": "Buffer overflows in Sun libnsl allow root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0056",
        "Description": "Buffer overflow in Sun's ping program can give root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0057",
        "Description": "Vacation program allows command execution by remote users through a sendmail command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0058",
        "Description": "Buffer overflow in PHP cgi program, php.cgi allows shell access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0059",
        "Description": "IRIX fam service allows an attacker to obtain a list of all files on the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0060",
        "Description": "Attackers can cause a denial of service in Ascend MAX and Pipeline routers with a malformed packet to the discard port, which is used by the Java Configurator tool.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0061",
        "Description": "File creation and deletion, and remote execution, in the BSD line printer daemon (lpd).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0062",
        "Description": "The chpass command in OpenBSD allows a local user to gain root access through file descriptor leakage.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0063",
        "Description": "Cisco IOS 12.0 and other versions can be crashed by malicious UDP packets to the syslog port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0064",
        "Description": "Buffer overflow in AIX lquerylv program gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0065",
        "Description": "Multiple buffer overflows in how dtmail handles attachments allows a remote attacker to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0066",
        "Description": "AnyForm CGI remote execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0067",
        "Description": "phf CGI program allows remote command execution through shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0068",
        "Description": "CGI PHP mylog script allows an attacker to read any file on the target server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0069",
        "Description": "Solaris ufsrestore buffer overflow.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0070",
        "Description": "test-cgi program allows an attacker to list files on the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0071",
        "Description": "Apache httpd cookie buffer overflow for versions 1.1.1 and earlier.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0072",
        "Description": "Buffer overflow in AIX xdat gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0073",
        "Description": "Telnet allows a remote client to specify environment variables including LD_LIBRARY_PATH, allowing an attacker to bypass the normal system libraries and gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0074",
        "Description": "Listening TCP ports are sequentially allocated, allowing spoofing attacks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0075",
        "Description": "PASV core dump in wu-ftpd daemon when attacker uses a QUOTE PASV command after specifying a username and password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0076",
        "Description": "Buffer overflow in wu-ftp from PASV command causes a core dump.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0077",
        "Description": "Predictable TCP sequence numbers allow spoofing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0078",
        "Description": "pcnfsd (aka rpc.pcnfsd) allows local users to change file permissions, or execute arbitrary commands through arguments in the RPC call.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0079",
        "Description": "Remote attackers can cause a denial of service in FTP by issuing multiple PASV commands, causing the server to run out of available ports.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0080",
        "Description": "Certain configurations of wu-ftp FTP server 2.4 use a _PATH_EXECPATH setting to a directory with dangerous commands, such as /bin, which allows remote authenticated users to gain root access via the \"site exec\" command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0081",
        "Description": "wu-ftp allows files to be overwritten via the rnfr command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0082",
        "Description": "CWD ~root command in ftpd allows root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0083",
        "Description": "getcwd() file descriptor leak in FTP.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0084",
        "Description": "Certain NFS servers allow users to use mknod to gain privileges by creating a writable kmem device and setting the UID to 0.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0085",
        "Description": "Buffer overflow in rwhod on AIX and other operating systems allows remote attackers to execute arbitrary code via a UDP packet with a long hostname.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0086",
        "Description": "AIX routed allows remote users to modify sensitive files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0087",
        "Description": "Denial of service in AIX telnet can freeze a system and prevent users from accessing the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0088",
        "Description": "IRIX and AIX automountd services (autofsd) allow remote users to execute root commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0089",
        "Description": "Buffer overflow in AIX libDtSvc library can allow local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0090",
        "Description": "Buffer overflow in AIX rcp command allows local users to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0091",
        "Description": "Buffer overflow in AIX writesrv command allows local users to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0092",
        "Description": "Various vulnerabilities in the AIX portmir command allows local users to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0093",
        "Description": "AIX nslookup command allows local users to obtain root access by not dropping privileges correctly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0094",
        "Description": "AIX piodmgrsu command allows local users to gain additional group privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0095",
        "Description": "The debug command in Sendmail is enabled, allowing attackers to execute commands as root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0096",
        "Description": "Sendmail decode alias can be used to overwrite sensitive files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0097",
        "Description": "The AIX FTP client can be forced to execute commands from a malicious server through shell metacharacters (e.g. a pipe character).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0098",
        "Description": "Buffer overflow in SMTP HELO command in Sendmail allows a remote attacker to hide activities.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0099",
        "Description": "Buffer overflow in syslog utility allows local or remote attackers to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0100",
        "Description": "Remote access in AIX innd 1.5.1, using control messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0101",
        "Description": "Buffer overflow in AIX and Solaris \"gethostbyname\" library call allows root access through corrupt DNS host names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0102",
        "Description": "Buffer overflow in SLmail 3.x allows attackers to execute commands using a large FROM line.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0103",
        "Description": "Echo and chargen, or other combinations of UDP services, can be used in tandem to flood the server, a.k.a. UDP bomb or UDP packet storm.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0104",
        "Description": "A later variation on the Teardrop IP denial of service attack, a.k.a. Teardrop-2.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0105",
        "Description": "finger allows recursive searches by using a long string of @ symbols.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0106",
        "Description": "Finger redirection allows finger bombs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0107",
        "Description": "Buffer overflow in Apache 1.2.5 and earlier allows a remote attacker to cause a denial of service with a large number of GET requests containing a large number of / characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0108",
        "Description": "The printers program in IRIX has a buffer overflow that gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0109",
        "Description": "Buffer overflow in ffbconfig in Solaris 2.5.1.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0111",
        "Description": "RIP v1 is susceptible to spoofing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0112",
        "Description": "Buffer overflow in AIX dtterm program for the CDE.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0113",
        "Description": "Some implementations of rlogin allow root access if given a -froot parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0114",
        "Description": "Local users can execute commands as other users, and read other users' files, through the filter command in the Elm elm-2.4 mail package using a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0115",
        "Description": "AIX bugfiler program allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0116",
        "Description": "Denial of service when an attacker sends many SYN packets to create multiple connections without ever sending an ACK to complete the connection, aka SYN flood.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0117",
        "Description": "AIX passwd allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0118",
        "Description": "AIX infod allows local users to gain root access through an X display.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0119",
        "Description": "Windows NT 4.0 beta allows users to read and delete shares.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0120",
        "Description": "Sun/Solaris utmp file allows local users to gain root access if it is writable by users other than root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0121",
        "Description": "Buffer overflow in dtaction command gives root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0122",
        "Description": "Buffer overflow in AIX lchangelv gives root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0123",
        "Description": "Race condition in Linux mailx command allows local users to read user files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0124",
        "Description": "Vulnerabilities in UMN gopher and gopher+ versions 1.12 and 2.0x allow an intruder to read any files that can be accessed by the gopher daemon.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0125",
        "Description": "Buffer overflow in SGI IRIX mailx program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0126",
        "Description": "SGI IRIX buffer overflow in xterm and Xaw allows root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0127",
        "Description": "swinstall and swmodify commands in SD-UX package in HP-UX systems allow local users to create or overwrite arbitrary files to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0128",
        "Description": "Oversized ICMP ping packets can result in a denial of service, aka Ping o' Death.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0129",
        "Description": "Sendmail allows local users to write to a file and gain group permissions via a .forward or :include: file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0130",
        "Description": "Local users can start Sendmail in daemon mode and gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0131",
        "Description": "Buffer overflow and denial of service in Sendmail 8.7.5 and earlier through GECOS field gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0132",
        "Description": "Expreserve, as used in vi and ex, allows local users to overwrite arbitrary files and gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0133",
        "Description": "fm_fls license server for Adobe Framemaker allows local users to overwrite arbitrary files and gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0134",
        "Description": "vold in Solaris 2.x allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0135",
        "Description": "admintool in Solaris allows a local user to write to arbitrary files and gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0136",
        "Description": "Kodak Color Management System (KCMS) on Solaris allows a local user to write to arbitrary files and gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0137",
        "Description": "The dip program on many Linux systems allows local users to gain root access via a buffer overflow.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0138",
        "Description": "The suidperl and sperl program do not give up root privileges when changing UIDs back to the original users, allowing root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0139",
        "Description": "Buffer overflow in Solaris x86 mkcookie allows local users to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0140",
        "Description": "Denial of service in RAS/PPTP on NT systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0141",
        "Description": "Java Bytecode Verifier allows malicious applets to execute arbitrary commands as the user of the applet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0142",
        "Description": "The Java Applet Security Manager implementation in Netscape Navigator 2.0 and Java Developer's Kit 1.0 allows an applet to connect to arbitrary hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0143",
        "Description": "Kerberos 4 key servers allow a user to masquerade as another by breaking and generating session keys.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0144",
        "Description": "Denial of service in Qmail by specifying a large number of recipients with the RCPT command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0145",
        "Description": "Sendmail WIZ command enabled, allowing root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0146",
        "Description": "The campas CGI program provided with some NCSA web servers allows an attacker to execute arbitrary commands via encoded carriage return characters in the query string, as demonstrated by reading the password file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0147",
        "Description": "The aglimpse CGI program of the Glimpse package allows remote execution of arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0148",
        "Description": "The handler CGI program in IRIX allows arbitrary command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0149",
        "Description": "The wrap CGI program in IRIX allows remote attackers to view arbitrary directory listings via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0150",
        "Description": "The Perl fingerd program allows arbitrary command execution from remote users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0151",
        "Description": "The SATAN session key may be disclosed if the user points the web browser to other sites, possibly allowing root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0152",
        "Description": "The DG/UX finger daemon allows remote command execution through shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0153",
        "Description": "Windows 95/NT out of band (OOB) data denial of service through NETBIOS port, aka WinNuke.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0154",
        "Description": "IIS 2.0 and 3.0 allows remote attackers to read the source code for ASP pages by appending a . (dot) to the end of the URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0155",
        "Description": "The ghostscript command with the -dSAFER option allows remote attackers to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0156",
        "Description": "wu-ftpd FTP daemon allows any user and password combination.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0157",
        "Description": "Cisco PIX firewall and CBAC IP fragmentation attack results in a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0158",
        "Description": "Cisco PIX firewall manager (PFM) on Windows NT allows attackers to connect to port 8080 on the PFM server and retrieve any file whose name and location is known.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0159",
        "Description": "Attackers can crash a Cisco IOS router or device, provided they can get to an interactive prompt (such as a login).  This applies to some IOS 9.x, 10.x, and 11.x releases.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0160",
        "Description": "Some classic Cisco IOS devices have a vulnerability in the PPP CHAP authentication to establish unauthorized PPP connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0161",
        "Description": "In Cisco IOS 10.3, with the tacacs-ds or tacacs keyword, an extended IP access control list could bypass filtering.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0162",
        "Description": "The \"established\" keyword in some Cisco IOS software allowed an attacker to bypass filtering.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0163",
        "Description": "In older versions of Sendmail, an attacker could use a pipe character to execute root commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0164",
        "Description": "A race condition in the Solaris ps command allows an attacker to overwrite critical files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0165",
        "Description": "NFS cache poisoning.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0166",
        "Description": "NFS allows users to use a \"cd ..\" command to access other directories besides the exported file system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0167",
        "Description": "In SunOS, NFS file handles could be guessed, giving unauthorized access to the exported file system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0168",
        "Description": "The portmapper may act as a proxy and redirect service requests from an attacker, making the request appear to come from the local host, possibly bypassing authentication that would otherwise have taken place.  For example, NFS file systems could be mounted through the portmapper despite export restrictions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0169",
        "Description": "NFS allows attackers to read and write any file on the system by specifying a false UID.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0170",
        "Description": "Remote attackers can mount an NFS file system in Ultrix or OSF, even if it is denied on the access list.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0171",
        "Description": "Denial of service in syslog by sending it a large number of superfluous messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0172",
        "Description": "FormMail CGI program allows remote execution of commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0173",
        "Description": "FormMail CGI program can be used by web servers other than the host server that the program resides on.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0174",
        "Description": "The view-source CGI program allows remote attackers to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0175",
        "Description": "The convert.bas program in the Novell web server allows a remote attackers to read any file on the system that is internally accessible by the web server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0176",
        "Description": "The Webgais program allows a remote user to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0177",
        "Description": "The uploader program in the WebSite web server allows a remote attacker to execute arbitrary programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0178",
        "Description": "Buffer overflow in the win-c-sample program (win-c-sample.exe) in the WebSite web server 1.1e allows remote attackers to execute arbitrary code via a long query string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0179",
        "Description": "Windows NT crashes or locks up when a Samba client executes a \"cd ..\" command on a file share.",
        "CWE": [
            {
                "CWE": "CWE-17",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0180",
        "Description": "in.rshd allows users to login with a NULL username and execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0181",
        "Description": "The wall daemon can be used for denial of service, social engineering attacks, or to execute remote commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0182",
        "Description": "Samba has a buffer overflow which allows a remote attacker to obtain root access by specifying a long password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0183",
        "Description": "Linux implementations of TFTP would allow access to files outside the restricted directory.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0184",
        "Description": "When compiled with the -DALLOW_UPDATES option, bind allows dynamic updates to the DNS server, allowing for malicious modification of DNS records.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0185",
        "Description": "In SunOS or Solaris, a remote user could connect from an FTP server's data port to an rlogin server on a host that trusts the FTP server, allowing remote command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0186",
        "Description": "In Solaris, an SNMP subagent has a default community string that allows remote attackers to execute arbitrary commands as root, or modify system parameters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0188",
        "Description": "The passwd command in Solaris can be subjected to a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0189",
        "Description": "Solaris rpcbind listens on a high numbered UDP port, which may not be filtered since the standard port number is 111.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0190",
        "Description": "Solaris rpcbind can be exploited to overwrite arbitrary files and gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0191",
        "Description": "IIS newdsn.exe CGI script allows remote users to overwrite files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0192",
        "Description": "Buffer overflow in telnet daemon tgetent routing allows remote attackers to gain root access via the TERMCAP environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0193",
        "Description": "Denial of service in Ascend and 3com routers, which can be rebooted by sending a zero length TCP option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0194",
        "Description": "Denial of service in in.comsat allows attackers to generate messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0195",
        "Description": "Denial of service in RPC portmapper allows attackers to register or unregister RPC services or spoof RPC services using a spoofed source IP address such as 127.0.0.1.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0196",
        "Description": "websendmail in Webgais 1.0 allows a remote user to access arbitrary files and execute arbitrary code via the receiver parameter ($VAR_receiver variable).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0197",
        "Description": "finger 0@host on some systems may print information on some user accounts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0198",
        "Description": "finger .@host on some systems may print information on some user accounts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0199",
        "Description": "manual/search.texi in the GNU C Library (aka glibc) before 2.2 lacks a statement about the unspecified tdelete return value upon deletion of a tree's root, which might allow attackers to access a dangling pointer in an application whose developer was unaware of a documentation update from 1999.",
        "CWE": [
            {
                "CWE": "CWE-252",
                "CWE Description": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0200",
        "Description": "Windows NT FTP server (WFTP) with the guest account enabled without a password allows an attacker to log into the FTP server using any username and password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0201",
        "Description": "A quote cwd command on FTP servers can reveal the full path of the home directory of the \"ftp\" user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0202",
        "Description": "The GNU tar command, when used in FTP sessions, may allow an attacker to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0203",
        "Description": "In Sendmail, attackers can gain root privileges via SMTP by specifying an improper \"mail from\" address and an invalid \"rcpt to\" address that would cause the mail to bounce to a program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0204",
        "Description": "Sendmail 8.6.9 allows remote attackers to execute root commands, using ident.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0205",
        "Description": "Denial of service in Sendmail 8.6.11 and 8.6.12.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0206",
        "Description": "MIME buffer overflow in Sendmail 8.8.0 and 8.8.1 gives root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0207",
        "Description": "Remote attacker can execute commands through Majordomo using the Reply-To field and a \"lists\" command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0208",
        "Description": "rpc.ypupdated (NIS) allows remote users to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0209",
        "Description": "The SunView (SunTools) selection_svc facility allows remote users to read files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0210",
        "Description": "Automount daemon automountd allows local or remote users to gain privileges via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0211",
        "Description": "Extra long export lists over 256 characters in some mount daemons allows NFS directories to be mounted by anyone.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0212",
        "Description": "Solaris rpc.mountd generates error messages that allow a remote attacker to determine what files are on the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0213",
        "Description": "libnsl in Solaris allowed an attacker to perform a denial of service of rpcbind.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0214",
        "Description": "Denial of service by sending forged ICMP unreachable packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0215",
        "Description": "Routed allows attackers to append data to files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0216",
        "Description": "Denial of service of inetd on Linux through SYN and RST packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0217",
        "Description": "Malicious option settings in UDP packets could force a reboot in SunOS 4.1.3 systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0218",
        "Description": "Livingston portmaster machines could be rebooted via a series of commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0219",
        "Description": "Buffer overflow in FTP Serv-U 2.5 allows remote authenticated users to cause a denial of service (crash) via a long (1) CWD or (2) LS (list) command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0220",
        "Description": "Attackers can do a denial of service of IRC by crashing the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0221",
        "Description": "Denial of service of Ascend routers through port 150 (remote administration).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0222",
        "Description": "Denial of service in Cisco IOS web server allows attackers to reboot the router using a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0223",
        "Description": "Solaris syslogd crashes when receiving a message from a host that doesn't have an inverse DNS entry.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0224",
        "Description": "Denial of service in Windows NT messenger service through a long username.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0225",
        "Description": "Windows NT 4.0 allows remote attackers to cause a denial of service via a malformed SMB logon request in which the actual data size does not match the specified size.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0226",
        "Description": "Windows NT TCP/IP processes fragmented IP packets improperly, causing a denial of service.",
        "CWE": [
            {
                "CWE": "CWE-19",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0227",
        "Description": "Access violation in LSASS.EXE (LSA/LSARPC) program in Windows NT allows a denial of service.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0228",
        "Description": "Denial of service in RPCSS.EXE program (RPC Locator) in Windows NT.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0229",
        "Description": "Denial of service in Windows NT IIS server using ..\\..",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0230",
        "Description": "Buffer overflow in Cisco 7xx routers through the telnet service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0231",
        "Description": "Buffer overflow in IP-Switch IMail and Seattle Labs Slmail 2.6 packages using a long VRFY command, causing a denial of service and possibly remote access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0232",
        "Description": "Buffer overflow in NCSA WebServer (version 1.5c) gives remote access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0233",
        "Description": "IIS 1.0 allows users to execute arbitrary commands using .bat or .cmd files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0234",
        "Description": "Bash treats any character with a value of 255 as a command separator.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0235",
        "Description": "Buffer overflow in NCSA WebServer (1.4.1 and below) gives remote access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0236",
        "Description": "ScriptAlias directory in NCSA and Apache httpd allowed attackers to read CGI programs.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0237",
        "Description": "Remote execution of arbitrary commands through Guestbook CGI program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0238",
        "Description": "php.cgi allows attackers to read any file on the system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0239",
        "Description": "Netscape FastTrack Web server lists files when a lowercase \"get\" command is used instead of an uppercase GET.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0240",
        "Description": "Some filters or firewalls allow fragmented SYN packets with IP reserved bits in violation of their implemented policy.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0241",
        "Description": "Guessable magic cookies in X Windows allows remote attackers to execute commands, e.g. through xterm.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0242",
        "Description": "Remote attackers can access mail files via POP3 in some Linux systems that are using shadow passwords.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0243",
        "Description": "Linux cfingerd could be exploited to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0244",
        "Description": "Livingston RADIUS code has a buffer overflow which can allow remote execution of commands as root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0245",
        "Description": "Some configurations of NIS+ in Linux allowed attackers to log in as the user \"+\".",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0246",
        "Description": "HP Remote Watch allows a remote user to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0247",
        "Description": "Buffer overflow in nnrpd program in INN up to version 1.6 allows remote users to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0248",
        "Description": "A race condition in the authentication agent mechanism of sshd 1.2.17 allows an attacker to steal another user's credentials.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0249",
        "Description": "Windows NT RSHSVC program allows remote users to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0250",
        "Description": "Denial of service in Qmail through long SMTP commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0251",
        "Description": "Denial of service in talk program allows remote attackers to disrupt a user's display.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0252",
        "Description": "Buffer overflow in listserv allows arbitrary command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0253",
        "Description": "IIS 3.0 with the iis-fix hotfix installed allows remote intruders to read source code for ASP programs by using a %2e instead of a . (dot) in the URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0254",
        "Description": "A hidden SNMP community string in HP OpenView allows remote attackers to modify MIB tables and obtain sensitive information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0255",
        "Description": "Buffer overflow in ircd allows arbitrary command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0256",
        "Description": "Buffer overflow in War FTP allows remote execution of commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0257",
        "Description": "Nestea variation of teardrop IP fragmentation denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0258",
        "Description": "Bonk variation of teardrop IP fragmentation denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0259",
        "Description": "cfingerd lists all users on a system via search.**@target.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0260",
        "Description": "The jj CGI program allows command execution via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0261",
        "Description": "Netmanager Chameleon SMTPd has several buffer overflows that cause a crash.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0262",
        "Description": "Hylafax faxsurvey CGI script on Linux allows remote attackers to execute arbitrary commands via shell metacharacters in the query string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0263",
        "Description": "Solaris SUNWadmap can be exploited to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0264",
        "Description": "htmlscript CGI program allows remote read access to files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0265",
        "Description": "ICMP redirect messages may crash or lock up a host.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0266",
        "Description": "The info2www CGI script allows remote file access or remote command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0267",
        "Description": "Buffer overflow in NCSA HTTP daemon v1.3 allows remote command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0268",
        "Description": "MetaInfo MetaWeb web server allows users to upload, execute, and read scripts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0269",
        "Description": "Netscape Enterprise servers may list files through the PageServices query.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0270",
        "Description": "Directory traversal vulnerability in pfdispaly.cgi program (sometimes referred to as \"pfdisplay\") for SGI's Performer API Search Tool (performer_tools) allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0271",
        "Description": "Progressive Networks Real Video server (pnserver) can be crashed remotely.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0272",
        "Description": "Denial of service in Slmail v2.5 through the POP3 port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0273",
        "Description": "Denial of service through Solaris 2.5.1 telnet by sending ^D characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0274",
        "Description": "Denial of service in Windows NT DNS servers through malicious packet which contains a response to a query that wasn't made.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0275",
        "Description": "Denial of service in Windows NT DNS servers by flooding port 53 with too many characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0276",
        "Description": "mSQL v2.0.1 and below allows remote execution through a buffer overflow.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0277",
        "Description": "The WorkMan program can be used to overwrite any file to get root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0278",
        "Description": "In IIS, remote attackers can obtain source code for ASP files by appending \"::$DATA\" to the URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0279",
        "Description": "Excite for Web Servers (EWS) allows remote command execution via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0280",
        "Description": "Remote command execution in Microsoft Internet Explorer using .lnk and .url files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0281",
        "Description": "Denial of service in IIS using long URLs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0283",
        "Description": "The Java Web Server would allow remote users to obtain the source code for CGI programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0284",
        "Description": "Denial of service to NT mail servers including Ipswitch, Mdaemon, and Exchange through a buffer overflow in the SMTP HELO command.",
        "CWE": [
            {
                "CWE": "CWE-120",
                "CWE Description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0285",
        "Description": "Denial of service in telnet from the Windows NT Resource Kit, by opening then immediately closing a connection.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0286",
        "Description": "In some NT web servers, appending a space at the end of a URL may allow attackers to read source code for active pages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0287",
        "Description": "Vulnerability in the Wguest CGI program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0288",
        "Description": "The WINS server in Microsoft Windows NT 4.0 before SP4 allows remote attackers to cause a denial of service (process termination) via invalid UDP frames to port 137 (NETBIOS Name Service), as demonstrated via a flood of random packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0289",
        "Description": "The Apache web server for Win32 may provide access to restricted files when a . (dot) is appended to a requested URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0290",
        "Description": "The WinGate telnet proxy allows remote attackers to cause a denial of service via a large number of connections to localhost.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0291",
        "Description": "The WinGate proxy is installed without a password, which allows remote attackers to redirect connections without authentication.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0292",
        "Description": "Denial of service through Winpopup using large user names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0293",
        "Description": "AAA authentication on Cisco systems allows attackers to execute commands without authorization.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0294",
        "Description": "All records in a WINS database can be deleted through SNMP for a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0295",
        "Description": "Solaris sysdef command allows local users to read kernel memory, potentially leading to root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0296",
        "Description": "Solaris volrmmount program allows attackers to read any file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0297",
        "Description": "Buffer overflow in Vixie Cron library up to version 3.0 allows local users to obtain root access via a long environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0298",
        "Description": "ypbind with -ypset and -ypsetme options activated in Linux Slackware and SunOS allows local and remote attackers to overwrite files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0299",
        "Description": "Buffer overflow in FreeBSD lpd through long DNS hostnames.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0300",
        "Description": "nis_cachemgr for Solaris NIS+ allows attackers to add malicious NIS+ servers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0301",
        "Description": "Buffer overflow in SunOS/Solaris ps command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0302",
        "Description": "SunOS/Solaris FTP clients can be forced to execute arbitrary commands from a malicious FTP server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0303",
        "Description": "Buffer overflow in BNU UUCP daemon (uucpd) through long hostnames.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0304",
        "Description": "mmap function in BSD allows local attackers in the kmem group to modify memory through devices.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0305",
        "Description": "The system configuration control (sysctl) facility in BSD based operating systems OpenBSD 2.2 and earlier, and FreeBSD 2.2.5 and earlier, does not properly restrict source routed packets even when the (1) dosourceroute or (2) forwarding variables are set, which allows remote attackers to spoof TCP connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0306",
        "Description": "buffer overflow in HP xlock program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0307",
        "Description": "Buffer overflow in HP-UX cstm program allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0308",
        "Description": "HP-UX gwind program allows users to modify arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0309",
        "Description": "HP-UX vgdisplay program gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0310",
        "Description": "SSH 1.2.25 on HP-UX allows access to new user accounts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0311",
        "Description": "fpkg2swpk in HP-UX allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0312",
        "Description": "HP ypbind allows attackers with root privileges to modify NIS data.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0313",
        "Description": "disk_bandwidth on SGI IRIX 6.4 S2MP for Origin/Onyx2 allows local users to gain root access using relative pathnames.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0314",
        "Description": "ioconfig on SGI IRIX 6.4 S2MP for Origin/Onyx2 allows local users to gain root access using relative pathnames.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0315",
        "Description": "Buffer overflow in Solaris fdformat command gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0316",
        "Description": "Buffer overflow in Linux splitvt command gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0317",
        "Description": "Buffer overflow in Linux su command gives root access to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0318",
        "Description": "Buffer overflow in xmcd 2.0p12 allows local users to gain access through an environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0319",
        "Description": "Buffer overflow in xmcd 2.1 allows local users to gain access through a user resource setting.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0320",
        "Description": "SunOS rpc.cmsd allows attackers to obtain root access by overwriting arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0321",
        "Description": "Buffer overflow in Solaris kcms_configure command allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0322",
        "Description": "The open() function in FreeBSD allows local attackers to write to arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0323",
        "Description": "FreeBSD mmap function allows users to modify append-only or immutable files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0324",
        "Description": "ppl program in HP-UX allows local users to create root files through symlinks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0325",
        "Description": "vhe_u_mnt program in HP-UX allows local users to create root files through symlinks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0326",
        "Description": "Vulnerability in HP-UX mediainit program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0327",
        "Description": "SGI syserr program allows local users to corrupt files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0328",
        "Description": "SGI permissions program allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0329",
        "Description": "SGI mediad program allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0330",
        "Description": "Linux bdash game has a buffer overflow that allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0331",
        "Description": "Buffer overflow in Internet Explorer 4.0(1).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0332",
        "Description": "Buffer overflow in NetMeeting allows denial of service and remote command execution.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0333",
        "Description": "HP OpenView Omniback allows remote execution of commands as root via spoofing, and local users can gain root access via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0334",
        "Description": "In Solaris 2.2 and 2.3, when fsck fails on startup, it allows a local user with physical access to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0336",
        "Description": "Buffer overflow in mstm in HP-UX allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0337",
        "Description": "AIX batch queue (bsh) allows local and remote users to gain additional privileges when network printing is enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0338",
        "Description": "AIX Licensed Program Product performance tools allow local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0339",
        "Description": "Buffer overflow in the libauth library in Solaris allows local users to gain additional privileges, possibly root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0340",
        "Description": "Buffer overflow in Linux Slackware crond program allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0341",
        "Description": "Buffer overflow in the Linux mail program \"deliver\" allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0342",
        "Description": "Linux PAM modules allow local users to gain root access using temporary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0343",
        "Description": "A malicious Palace server can force a client to execute arbitrary programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0344",
        "Description": "NT users can gain debug-level access on a system process using the Sechole exploit.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0345",
        "Description": "Jolt ICMP attack causes a denial of service in Windows 95 and Windows NT systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0346",
        "Description": "CGI PHP mlog script allows an attacker to read any file on the target server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0347",
        "Description": "Internet Explorer 4.01 allows remote attackers to read local files and spoof web pages via a \"%01\" character in an \"about:\" Javascript URL, which causes Internet Explorer to use the domain specified after the character.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0348",
        "Description": "IIS ASP caching problem releases sensitive information when two virtual servers share the same physical directory.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0349",
        "Description": "A buffer overflow in the FTP list (ls) command in IIS allows remote attackers to conduct a denial of service and, in some cases, execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0350",
        "Description": "Race condition in the db_loader program in ClearCase gives local users root access by setting SUID bits.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0351",
        "Description": "FTP PASV \"Pizza Thief\" denial of service and unauthorized data access.  Attackers can steal data by connecting to a port that was intended for use by a client.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0352",
        "Description": "ControlIT 4.5 and earlier (aka Remotely Possible) has weak password encryption.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0353",
        "Description": "rpc.pcnfsd in HP gives remote root access by changing the permissions on the main printer spool directory.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0354",
        "Description": "Internet Explorer 4.x or 5.x with Word 97 allows arbitrary execution of Visual Basic programs to the IE client through the Word 97 template, which doesn't warn the user that the template contains executable content.  Also applies to Outlook when the client views a malicious email message.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0355",
        "Description": "Local or remote users can force ControlIT 4.5 to reboot or force a user to log out, resulting in a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0356",
        "Description": "ControlIT v4.5 and earlier uses weak encryption to store usernames and passwords in an address book.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0357",
        "Description": "Windows 98 and other operating systems allows remote attackers to cause a denial of service via crafted \"oshare\" packets, possibly involving invalid fragmentation offsets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0358",
        "Description": "Digital Unix 4.0 has a buffer overflow in the inc program of the mh package.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0359",
        "Description": "ptylogin in Unix systems allows users to perform a denial of service by locking out modems, dial out with that modem, or obtain passwords.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0360",
        "Description": "MS Site Server 2.0 with IIS 4 can allow users to upload content, including ASP, to the target web site, thus allowing them to execute commands remotely.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0361",
        "Description": "NetWare version of LaserFiche stores usernames and passwords unencrypted, and allows administrative changes without logging.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0362",
        "Description": "WS_FTP server remote denial of service through cwd command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0363",
        "Description": "SuSE 5.2 PLP lpc program has a buffer overflow that leads to root compromise.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0364",
        "Description": "Microsoft Access 97 stores a database password as plaintext in a foreign mdb, allowing access to data.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0365",
        "Description": "The metamail package allows remote command execution using shell metacharacters that are not quoted in a mailcap entry.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0366",
        "Description": "In some cases, Service Pack 4 for Windows NT 4.0 can allow access to network shares using a blank password, through a problem with a null NT hash value.",
        "CWE": [
            {
                "CWE": "CWE-287",
                "CWE Description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
                "CWE Techniques": [
                    {
                        "ID": "1548",
                        "Name": "Abuse Elevation Control Mechanism",
                        "Description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.",
                        "Tactics": {
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1040",
                        "Name": "Network Sniffing",
                        "Description": "Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords.",
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1185",
                        "Name": "Browser Session Hijacking",
                        "Description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                        "Tactics": {
                            "collection": "The adversary is trying to gather data of interest to their goal."
                        }
                    },
                    {
                        "ID": "1550.001",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nDirect API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user\u2019s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1563",
                        "Name": "Remote Service Session Hijacking",
                        "Description": "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)",
                        "Tactics": {
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1134",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1505.003",
                        "Name": "Server Software Component",
                        "Description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold."
                        }
                    },
                    {
                        "ID": "1557",
                        "Name": "Adversary-in-the-Middle",
                        "Description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.(Citation: volexity_0day_sophos_FW) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords.",
                            "collection": "The adversary is trying to gather data of interest to their goal."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0367",
        "Description": "NetBSD netstat command allows local users to access kernel memory.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0368",
        "Description": "Buffer overflows in wuarchive ftpd (wu-ftpd) and ProFTPD lead to remote root access, a.k.a. palmetto.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0369",
        "Description": "The Sun sdtcm_convert calendar utility for OpenWindows has a buffer overflow which can gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0370",
        "Description": "In Sun Solaris and SunOS, man and catman contain vulnerabilities that allow overwriting arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0371",
        "Description": "Lynx allows a local user to overwrite sensitive files through /tmp symlinks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0372",
        "Description": "The installer for BackOffice Server includes account names and passwords in a setup file (reboot.ini) which is not deleted.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0373",
        "Description": "Buffer overflow in the \"Super\" utility in Debian GNU/Linux, and other operating systems, allows local users to execute commands as root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0374",
        "Description": "Debian GNU/Linux cfengine package is susceptible to a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0375",
        "Description": "Buffer overflow in webd in Network Flight Recorder (NFR) 2.0.2-Research allows remote attackers to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0376",
        "Description": "Local users in Windows NT can obtain administrator privileges by changing the KnownDLLs list to reference malicious programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0377",
        "Description": "Process table attack in Unix systems allows a remote attacker to perform a denial of service by filling a machine's process tables through multiple connections to network services.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0378",
        "Description": "InterScan VirusWall for Solaris doesn't scan files for viruses when a single HTTP request includes two GET commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0379",
        "Description": "Microsoft Taskpads allows remote web sites to execute commands on the visiting user's machine via certain methods that are marked as Safe for Scripting.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0380",
        "Description": "SLMail 3.1 and 3.2 allows local users to access any file in the NTFS file system when the Remote Administration Service (RAS) is enabled by setting a user's Finger File to point to the target file, then running finger on the user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0381",
        "Description": "super 3.11.6 and other versions have a buffer overflow in the syslog utility which allows a local user to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0382",
        "Description": "The screen saver in Windows NT does not verify that its security context has been changed properly, allowing attackers to run programs with elevated privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0383",
        "Description": "ACC Tigris allows public access without a login.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0384",
        "Description": "The Forms 2.0 ActiveX control (included with Visual Basic for Applications 5.0) can be used to read text from a user's clipboard when the user accesses documents with ActiveX content.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0385",
        "Description": "The LDAP bind function in Exchange 5.5 has a buffer overflow that allows a remote attacker to conduct a denial of service or execute commands.",
        "CWE": [
            {
                "CWE": "CWE-120",
                "CWE Description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0386",
        "Description": "Microsoft Personal Web Server and FrontPage Personal Web Server in some Windows systems allows a remote attacker to read files on the server by using a nonstandard URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0387",
        "Description": "A legacy credential caching mechanism used in Windows 95 and Windows 98 systems allows attackers to read plaintext network passwords.",
        "CWE": [
            {
                "CWE": "CWE-255",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0388",
        "Description": "DataLynx suGuard trusts the PATH environment variable to execute the ps command, allowing local users to execute commands as root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0389",
        "Description": "Buffer overflow in the bootp server in the Debian Linux netstd package.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0390",
        "Description": "Buffer overflow in Dosemu Slang library in Linux.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0391",
        "Description": "The cryptographic challenge of SMB authentication in Windows 95 and Windows 98 can be reused, allowing an attacker to replay the response and impersonate a user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0392",
        "Description": "Buffer overflow in Thomas Boutell's cgic library version up to 1.05.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0393",
        "Description": "Remote attackers can cause a denial of service in Sendmail 8.8.x and 8.9.2 by sending messages with a large number of headers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0394",
        "Description": "DPEC Online Courseware allows an attacker to change another user's password without knowing the original password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0395",
        "Description": "A race condition in the BackWeb Polite Agent Protocol allows an attacker to spoof a BackWeb server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0396",
        "Description": "A race condition between the select() and accept() calls in NetBSD TCP servers allows remote attackers to cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0397",
        "Description": "The demo version of the Quakenbush NT Password Appraiser sends passwords across the network in plaintext.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0398",
        "Description": "In some instances of SSH 1.2.27 and 2.0.11 on Linux systems, SSH will allow users with expired accounts to login.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0399",
        "Description": "The DCC server command in the Mirc 5.5 client doesn't filter characters from file names properly, allowing remote attackers to place a malicious file in a different location, possibly allowing the attacker to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0400",
        "Description": "Denial of service in Linux 2.2.0 running the ldd command on a core file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0401",
        "Description": "A race condition in Linux 2.2.1 allows local users to read arbitrary memory from /proc files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0402",
        "Description": "wget 1.5.3 follows symlinks to change permissions of the target file instead of the symlink itself.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0403",
        "Description": "A bug in Cyrix CPUs on Linux allows local users to perform a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0404",
        "Description": "Buffer overflow in the Mail-Max SMTP server for Windows systems allows remote command execution.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0405",
        "Description": "A buffer overflow in lsof allows local users to obtain root privilege.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0406",
        "Description": "Digital Unix Networker program nsralist has a buffer overflow which allows local users to obtain root privilege.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0407",
        "Description": "By default, IIS 4.0 has a virtual directory /IISADMPWD which contains files that can be used as proxies for brute force password attacks, or to identify valid users on the system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0408",
        "Description": "Files created from interactive shell sessions in Cobalt RaQ microservers (e.g. .bash_history) are world readable, and thus are accessible from the web server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0409",
        "Description": "Buffer overflow in gnuplot in Linux version 3.5 allows local users to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0410",
        "Description": "The cancel command in Solaris 2.6 (i386) has a buffer overflow that allows local users to obtain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0411",
        "Description": "Several startup scripts in SCO OpenServer Enterprise System v 5.0.4p, including S84rpcinit, S95nis, S85tcp, and S89nfs, are vulnerable to a symlink attack, allowing a local user to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0412",
        "Description": "In IIS and other web servers, an attacker can attack commands as SYSTEM if the server is running as SYSTEM and loading an ISAPI extension.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0413",
        "Description": "A buffer overflow in the SGI X server allows local users to gain root access through the X server font path.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0414",
        "Description": "In Linux before version 2.0.36, remote attackers can spoof a TCP connection and pass data to the application layer before fully establishing the connection.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0415",
        "Description": "The HTTP server in Cisco 7xx series routers 3.2 through 4.2 is enabled by default, which allows remote attackers to change the router's configuration.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0416",
        "Description": "Vulnerability in Cisco 7xx series routers allows a remote attacker to cause a system reload via a TCP connection to the router's TELNET port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0417",
        "Description": "64 bit Solaris 7 procfs allows local users to perform a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0418",
        "Description": "Denial of service in SMTP applications such as Sendmail, when a remote attacker (e.g. spammer) uses many \"RCPT TO\" commands in the same connection.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0419",
        "Description": "When the Microsoft SMTP service attempts to send a message to a server and receives a 4xx error code, it quickly and repeatedly attempts to redeliver the message, causing a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0420",
        "Description": "umapfs allows local users to gain root privileges by changing their uid through a malicious mount_umap program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0421",
        "Description": "During a reboot after an installation of Linux Slackware 3.6, a remote attacker can obtain root access by logging in to the root account without a password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0422",
        "Description": "In some cases, NetBSD 1.3.3 mount allows local users to execute programs in some file systems that have the \"noexec\" flag set.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0423",
        "Description": "Vulnerability in hpterm on HP-UX 10.20 allows local users to gain additional privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0424",
        "Description": "talkback in Netscape 4.5 allows a local user to overwrite arbitrary files of another user whose Netscape crashes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0425",
        "Description": "talkback in Netscape 4.5 allows a local user to kill an arbitrary process of another user whose Netscape crashes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0426",
        "Description": "The default permissions of /dev/kmem in Linux versions before 2.0.36 allows IP spoofing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0427",
        "Description": "Eudora 4.1 allows remote attackers to perform a denial of service by sending attachments with long file names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0428",
        "Description": "OpenSSL and SSLeay allow remote attackers to reuse SSL sessions and bypass access controls.",
        "CWE": [
            {
                "CWE": "CWE-384",
                "CWE Description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
                "CWE Techniques": [
                    {
                        "ID": "1134.002",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)\n\nCreating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.\n\nWhile this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1134.003",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1606",
                        "Name": "Forge Web Credentials",
                        "Description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nThe generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005)), or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.(Citation: AWS Temporary Security Credentials)(Citation: Zimbra Preauth)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1134",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1528",
                        "Name": "Steal Application Access Token",
                        "Description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nIn Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0429",
        "Description": "The Lotus Notes 4.5 client may send a copy of encrypted mail in the clear across the network if the user does not set the \"Encrypt Saved Mail\" preference.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0430",
        "Description": "Cisco Catalyst LAN switches running Catalyst 5000 supervisor software allows remote attackers to perform a denial of service by forcing the supervisor module to reload.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0431",
        "Description": "Linux 2.2.3 and earlier allow a remote attacker to perform an IP fragmentation attack, causing a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0432",
        "Description": "ftp on HP-UX 11.00 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0433",
        "Description": "XFree86 startx command is vulnerable to a symlink attack, allowing local users to create files in restricted directories, possibly allowing them to gain privileges or cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0434",
        "Description": "XFree86 xfs command is vulnerable to a symlink attack, allowing local users to create files in restricted directories, possibly allowing them to gain privileges or cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0435",
        "Description": "MC/ServiceGuard and MC/LockManager in HP-UX allows local users to gain privileges through SAM.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0436",
        "Description": "Domain Enterprise Server Management System (DESMS) in HP-UX allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0437",
        "Description": "Remote attackers can perform a denial of service in WebRamp systems by sending a malicious string to the HTTP port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0438",
        "Description": "Remote attackers can perform a denial of service in WebRamp systems by sending a malicious UDP packet to port 5353, changing its IP address.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0439",
        "Description": "Buffer overflow in procmail before version 3.12 allows remote or local attackers to execute commands via expansions in the procmailrc configuration file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0440",
        "Description": "The byte code verifier component of the Java Virtual Machine (JVM) allows remote execution through malicious web pages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0441",
        "Description": "Remote attackers can perform a denial of service in WinGate machines using a buffer overflow in the Winsock Redirector Service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0442",
        "Description": "Solaris ff.core allows local users to modify files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0443",
        "Description": "Patrol management software allows a remote attacker to conduct a replay attack to steal the administrator password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0444",
        "Description": "Remote attackers can perform a denial of service in Windows machines using malicious ARP packets, forcing a message box display for each packet or filling up log files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0445",
        "Description": "In Cisco routers under some versions of IOS 12.0 running NAT, some packets may not be filtered by input access list filters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0446",
        "Description": "Local users can perform a denial of service in NetBSD 1.3.3 and earlier versions by creating an unusual symbolic link with the ln command, triggering a bug in VFS.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0447",
        "Description": "Local users can gain privileges using the debug utility in the MPE/iX operating system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0448",
        "Description": "IIS 4.0 and Apache log HTTP request methods, regardless of how long they are, allowing a remote attacker to hide the URL they really request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0449",
        "Description": "The ExAir sample site in IIS 4 allows remote attackers to cause a denial of service (CPU consumption) via a direct request to the (1) advsearch.asp, (2) query.asp, or (3) search.asp scripts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0450",
        "Description": "In IIS, an attacker could determine a real path using a request for a non-existent URL that would be interpreted by Perl (perl.exe).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0451",
        "Description": "Denial of service in Linux 2.0.36 allows local users to prevent any server from listening on any non-privileged port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0452",
        "Description": "A service or application has a backdoor password that was placed there by the developer.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0453",
        "Description": "An attacker can identify a CISCO device by sending a SYN packet to port 1999, which is for the Cisco Discovery Protocol (CDP).",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0454",
        "Description": "A remote attacker can sometimes identify the operating system of a host based on how it reacts to some IP or ICMP packets, using a tool such as nmap or queso.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0455",
        "Description": "The Expression Evaluator sample application in ColdFusion allows remote attackers to read or delete files on the server via exprcalc.cfm, which does not restrict access to the server properly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0457",
        "Description": "Linux ftpwatch program allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0458",
        "Description": "L0phtcrack 2.5 used temporary files in the system TEMP directory which could contain password information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0459",
        "Description": "Local users can perform a denial of service in Alpha Linux, using MILO to force a reboot.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0460",
        "Description": "Buffer overflow in Linux autofs module through long directory names allows local users to perform a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0461",
        "Description": "Versions of rpcbind including Linux, IRIX, and Wietse Venema's rpcbind allow a remote attacker to insert and delete entries by spoofing a source address.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0462",
        "Description": "suidperl in Linux Perl does not check the nosuid mount option on file systems, allowing local users to gain root access by placing a setuid script in a mountable file system, e.g. a CD-ROM or floppy disk.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0463",
        "Description": "Remote attackers can perform a denial of service using IRIX fcagent.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0464",
        "Description": "Local users can perform a denial of service in Tripwire 1.2 and earlier using long filenames.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0465",
        "Description": "Remote attackers can crash Lynx and Internet Explorer using an IMG tag with a large width parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0466",
        "Description": "The SVR4 /dev/wabi special device file in NetBSD 1.3.3 and earlier allows a local user to read or write arbitrary files on the disk associated with that device.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0467",
        "Description": "The Webcom CGI Guestbook programs wguest.exe and rguest.exe allow a remote attacker to read arbitrary files using the \"template\" parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0468",
        "Description": "Internet Explorer 5.0 allows a remote server to read arbitrary files on the client's file system using the Microsoft Scriptlet Component.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0469",
        "Description": "Internet Explorer 5.0 allows window spoofing, allowing a remote attacker to spoof a legitimate web site and capture information from the client.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0470",
        "Description": "A weak encryption algorithm is used for passwords in Novell Remote.NLM, allowing them to be easily decrypted.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0471",
        "Description": "The remote proxy server in Winroute allows a remote attacker to reconfigure the proxy without authentication through the \"cancel\" button.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0472",
        "Description": "The SNMP default community name \"public\" is not properly removed in NetApps C630 Netcache, even if the administrator tries to disable it.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0473",
        "Description": "The rsync command before rsync 2.3.1 may inadvertently change the permissions of the client's working directory to the permissions of the directory being transferred.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0474",
        "Description": "The ICQ Webserver allows remote attackers to use .. to access arbitrary files outside of the user's personal directory.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0475",
        "Description": "A race condition in how procmail handles .procmailrc files allows a local user to read arbitrary files available to the user who is running procmail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0476",
        "Description": "A weak encryption algorithm is used for passwords in SCO TermVision, allowing them to be easily decrypted by a local user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0477",
        "Description": "The Expression Evaluator in the ColdFusion Application Server allows a remote attacker to upload files to the server via openfile.cfm, which does not restrict access to the server properly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0478",
        "Description": "Denial of service in HP-UX sendmail 8.8.6 related to accepting connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0479",
        "Description": "Denial of service Netscape Enterprise Server with VirtualVault on HP-UX VVOS systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0480",
        "Description": "Local attackers can conduct a denial of service in Midnight Commander 4.x with a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0481",
        "Description": "Denial of service in \"poll\" in OpenBSD.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0482",
        "Description": "OpenBSD kernel crash through TSS handling, as caused by the crashme program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0483",
        "Description": "OpenBSD crash using nlink value in FFS and EXT2FS filesystems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0484",
        "Description": "Buffer overflow in OpenBSD ping.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0485",
        "Description": "Remote attackers can cause a system crash through ipintr() in ipq in OpenBSD.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0486",
        "Description": "Denial of service in AOL Instant Messenger when a remote attacker sends a malicious hyperlink to the receiving client, potentially causing a system crash.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0487",
        "Description": "The DHTML Edit ActiveX control in Internet Explorer allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0488",
        "Description": "Internet Explorer 4.0 and 5.0 allows a remote attacker to execute security scripts in a different security context using malicious URLs, a variant of the \"cross frame\" vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0489",
        "Description": "MSHTML.DLL in Internet Explorer 5.0 allows a remote attacker to paste a file name into the file upload intrinsic control, a variant of \"untrusted scripted paste\" as described in MS:MS98-013.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0490",
        "Description": "MSHTML.DLL in Internet Explorer 5.0 allows a remote attacker to learn information about a local user's files via an IMG SRC tag.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0491",
        "Description": "The prompt parsing in bash allows a local user to execute commands as another user by creating a directory with the name of the command to execute.",
        "CWE": [
            {
                "CWE": "CWE-94",
                "CWE Description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
                "CWE Techniques": [
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0492",
        "Description": "The ffingerd 1.19 allows remote attackers to identify users on the target system based on its responses.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0493",
        "Description": "rpc.statd allows remote attackers to forward RPC calls to the local operating system via the SM_MON and SM_NOTIFY commands, which in turn could be used to remotely exploit other bugs such as in automountd.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0494",
        "Description": "Denial of service in WinGate proxy through a buffer overflow in POP3.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0495",
        "Description": "A remote attacker can gain access to a file system using ..  (dot dot) when accessing SMB shares.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0496",
        "Description": "A Windows NT 4.0 user can gain administrative rights by forcing NtOpenProcessToken to succeed regardless of the user's permissions, aka GetAdmin.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0497",
        "Description": "Anonymous FTP is enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0498",
        "Description": "TFTP is not running in a restricted directory, allowing a remote attacker to access sensitive information such as password files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0499",
        "Description": "NETBIOS share information may be published through SNMP registry keys in NT.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0501",
        "Description": "A Unix account has a guessable password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0502",
        "Description": "A Unix account has a default, null, blank, or missing password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0503",
        "Description": "A Windows NT local user or administrator account has a guessable password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0504",
        "Description": "A Windows NT local user or administrator account has a default, null, blank, or missing password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0505",
        "Description": "A Windows NT domain user or administrator account has a guessable password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0506",
        "Description": "A Windows NT domain user or administrator account has a default, null, blank, or missing password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0507",
        "Description": "An account on a router, firewall, or other network device has a guessable password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0508",
        "Description": "An account on a router, firewall, or other network device has a default, null, blank, or missing password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0509",
        "Description": "Perl, sh, csh, or other shell interpreters are installed in the cgi-bin directory on a WWW site, which allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "CWE-94",
                "CWE Description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
                "CWE Techniques": [
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0510",
        "Description": "A router or firewall allows source routed packets from arbitrary hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0511",
        "Description": "IP forwarding is enabled on a machine which is not a router or firewall.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0512",
        "Description": "A mail server is explicitly configured to allow SMTP mail relay, which allows abuse by spammers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0513",
        "Description": "ICMP messages to broadcast addresses are allowed, allowing for a Smurf attack that can cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0514",
        "Description": "UDP messages to broadcast addresses are allowed, allowing for a Fraggle attack that can cause a denial of service by flooding the target.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0515",
        "Description": "An unrestricted remote trust relationship for Unix systems has been set up, e.g. by using a + sign in /etc/hosts.equiv.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0516",
        "Description": "An SNMP community name is guessable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0517",
        "Description": "An SNMP community name is the default (e.g. public), null, or missing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0518",
        "Description": "A NETBIOS/SMB share password is guessable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0519",
        "Description": "A NETBIOS/SMB share password is the default, null, or missing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0520",
        "Description": "A system-critical NETBIOS/SMB share has inappropriate access control.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0521",
        "Description": "An NIS domain name is easily guessable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0522",
        "Description": "The permissions for a system-critical NIS+ table (e.g. passwd) are inappropriate.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0523",
        "Description": "ICMP echo (ping) is allowed from arbitrary hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0524",
        "Description": "ICMP information such as (1) netmask and (2) timestamp is allowed from arbitrary hosts.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            },
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0525",
        "Description": "IP traceroute is allowed from arbitrary hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0526",
        "Description": "An X server's access control is disabled (e.g. through an \"xhost +\" command) and allows anyone to connect to the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0527",
        "Description": "The permissions for system-critical data in an anonymous FTP account are inappropriate.  For example, the root directory is writeable by world, a real password file is obtainable, or executable commands such as \"ls\" can be overwritten.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0528",
        "Description": "A router or firewall forwards external packets that claim to come from inside the network that the router/firewall is in front of.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0529",
        "Description": "A router or firewall forwards packets that claim to come from IANA reserved or private addresses, e.g. 10.x.x.x, 127.x.x.x, 217.x.x.x, etc.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0530",
        "Description": "A system is operating in \"promiscuous\" mode which allows it to perform packet sniffing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0532",
        "Description": "A DNS server allows zone transfers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0533",
        "Description": "A DNS server allows inverse queries.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0534",
        "Description": "A Windows NT user has inappropriate rights or privileges, e.g. Act as System, Add Workstation, Backup, Change System Time, Create Pagefile, Create Permanent Object, Create Token Name, Debug, Generate Security Audit, Increase Priority, Increase Quota, Load Driver, Lock Memory, Profile Single Process, Remote Shutdown, Replace Process Token, Restore, System Environment, Take Ownership, or Unsolicited Input.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0535",
        "Description": "A Windows NT account policy for passwords has inappropriate, security-critical settings, e.g. for password length, password age, or uniqueness.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0537",
        "Description": "A configuration in a web browser such as Internet Explorer or Netscape Navigator allows execution of active content such as ActiveX, Java, Javascript, etc.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0539",
        "Description": "A trust relationship exists between two Unix hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0541",
        "Description": "A password for accessing a WWW URL is guessable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0546",
        "Description": "The Windows NT guest account is enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0547",
        "Description": "An SSH server allows authentication through the .rhosts file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0548",
        "Description": "A superfluous NFS server is running, but it is not importing or exporting any file systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0549",
        "Description": "Windows NT automatically logs in an administrator upon rebooting.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0550",
        "Description": "A router's routing tables can be obtained from arbitrary hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0551",
        "Description": "HP OpenMail can be misconfigured to allow users to run arbitrary commands using malicious print requests.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0554",
        "Description": "NFS exports system-critical data to the world, e.g. / or a password file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0555",
        "Description": "A Unix account with a name other than \"root\" has UID 0, i.e. root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0556",
        "Description": "Two or more Unix accounts have the same UID.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0559",
        "Description": "A system-critical Unix file or directory has inappropriate permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0560",
        "Description": "A system-critical Windows NT file or directory has inappropriate permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0561",
        "Description": "IIS has the #exec function enabled for Server Side Include (SSI) files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0562",
        "Description": "The registry in Windows NT can be accessed remotely by users who are not administrators.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0564",
        "Description": "An attacker can force a printer to print arbitrary documents (e.g. if the printer doesn't require a password) or to become disabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0565",
        "Description": "A Sendmail alias allows input to be piped to a program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0566",
        "Description": "An attacker can write to syslog files from any location, causing a denial of service by filling up the logs, and hiding activities.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0568",
        "Description": "rpc.admind in Solaris is not running in a secure mode.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0569",
        "Description": "A URL for a WWW directory allows auto-indexing, which provides a list of all files in that directory if it does not contain an index.html file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0570",
        "Description": "Windows NT is not using a password filter utility, e.g. PASSFILT.DLL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0571",
        "Description": "A router's configuration service or management interface (such as a web server or telnet) is configured to allow connections from arbitrary hosts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0572",
        "Description": ".reg files are associated with the Windows NT registry editor (regedit), making the registry susceptible to Trojan Horse attacks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0575",
        "Description": "A Windows NT system's user audit policy does not log an event success or failure, e.g. for Logon and Logoff, File and Object Access, Use of User Rights, User and Group Management, Security Policy Changes, Restart, Shutdown, and System, and Process Tracking.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0576",
        "Description": "A Windows NT system's file audit policy does not log an event success or failure for security-critical files or directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0577",
        "Description": "A Windows NT system's file audit policy does not log an event success or failure for non-critical files or directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0578",
        "Description": "A Windows NT system's registry audit policy does not log an event success or failure for security-critical registry keys.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0579",
        "Description": "A Windows NT system's registry audit policy does not log an event success or failure for non-critical registry keys.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0580",
        "Description": "The HKEY_LOCAL_MACHINE key in a Windows NT system has inappropriate, system-critical permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0581",
        "Description": "The HKEY_CLASSES_ROOT key in a Windows NT system has inappropriate, system-critical permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0582",
        "Description": "A Windows NT account policy has inappropriate, security-critical settings for lockout, e.g. lockout duration, lockout after bad logon attempts, etc.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0583",
        "Description": "There is a one-way or two-way trust relationship between Windows NT domains.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0584",
        "Description": "A Windows NT file system is not NTFS.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0585",
        "Description": "A Windows NT administrator account has the default name of Administrator.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0586",
        "Description": "A network service is running on a nonstandard port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0587",
        "Description": "A WWW server is not running in a restricted file system, e.g. through a chroot, thus allowing access to system-critical data.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0588",
        "Description": "A filter in a router or firewall allows unusual fragmented packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0589",
        "Description": "A system-critical Windows NT registry key has inappropriate permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0590",
        "Description": "A system does not present an appropriate legal message or warning to a user who is accessing it.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0591",
        "Description": "An event log in Windows NT has inappropriate access permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0592",
        "Description": "The Logon box of a Windows NT system displays the name of the last user who logged in.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0593",
        "Description": "The default setting for the Winlogon key entry ShutdownWithoutLogon in Windows NT allows users with physical access to shut down a Windows NT system without logging in.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0594",
        "Description": "A Windows NT system does not restrict access to removable media drives such as a floppy disk drive or CDROM drive.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0595",
        "Description": "A Windows NT system does not clear the system page file during shutdown, which might allow sensitive information to be recorded.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0596",
        "Description": "A Windows NT log file has an inappropriate maximum size or retention period.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0597",
        "Description": "A Windows NT account policy does not forcibly disconnect remote users from the server when their logon hours expire.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0598",
        "Description": "A network intrusion detection system (IDS) does not properly handle packets that are sent out of order, allowing an attacker to escape detection.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0599",
        "Description": "A network intrusion detection system (IDS) does not properly handle packets with improper sequence numbers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0600",
        "Description": "A network intrusion detection system (IDS) does not verify the checksum on a packet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0601",
        "Description": "A network intrusion detection system (IDS) does not properly handle data within TCP handshake packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0602",
        "Description": "A network intrusion detection system (IDS) does not properly reassemble fragmented packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0603",
        "Description": "In Windows NT, an inappropriate user is a member of a group, e.g. Administrator, Backup Operators, Domain Admins, Domain Guests, Power Users, Print Operators, Replicators, System Operators, etc.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0604",
        "Description": "An incorrect configuration of the WebStore 1.0 shopping cart CGI program \"web_store.cgi\" could disclose private information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0605",
        "Description": "An incorrect configuration of the Order Form 1.0 shopping cart  CGI program could disclose private information.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0606",
        "Description": "An incorrect configuration of the EZMall 2000 shopping cart  CGI program \"mall2000.cgi\" could disclose private information.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0607",
        "Description": "quikstore.cgi in QuikStore shopping cart stores quikstore.cfg under the web document root with insufficient access control, which allows remote attackers to obtain the cleartext administrator password and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0608",
        "Description": "An incorrect configuration of the PDG Shopping Cart CGI program \"shopper.cgi\" could disclose private information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0609",
        "Description": "An incorrect configuration of the SoftCart CGI program \"SoftCart.exe\" could disclose private information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0610",
        "Description": "An incorrect configuration of the Webcart CGI program could disclose private information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0611",
        "Description": "A system-critical Windows NT registry key has an inappropriate value.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0612",
        "Description": "A version of finger is running that exposes valid user information to any entity on the network.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0613",
        "Description": "The rpc.sprayd service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0618",
        "Description": "The rexec service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0624",
        "Description": "The rstat/rstatd service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0625",
        "Description": "The rpc.rquotad service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0626",
        "Description": "A version of rusers is running that exposes valid user information to any entity on the network.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0627",
        "Description": "The rexd service is running, which uses weak authentication that can allow an attacker to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0628",
        "Description": "The rwho/rwhod service is running, which exposes machine status and user information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0629",
        "Description": "The ident/identd service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0630",
        "Description": "The NT Alerter and Messenger services are running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0632",
        "Description": "The RPC portmapper service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0635",
        "Description": "The echo service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0636",
        "Description": "The discard service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0637",
        "Description": "The systat service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0638",
        "Description": "The daytime service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0639",
        "Description": "The chargen service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0640",
        "Description": "The Gopher service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0641",
        "Description": "The UUCP service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0650",
        "Description": "The netstat service is running, which provides sensitive information to remote attackers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0651",
        "Description": "The rsh/rlogin service is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0653",
        "Description": "A component service related to NIS+ is running.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0654",
        "Description": "The OS/2 or POSIX subsystem in NT is enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0656",
        "Description": "The ugidd RPC interface, by design, allows remote attackers to enumerate valid usernames by specifying arbitrary UIDs that ugidd maps to local user and group names.",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0657",
        "Description": "WinGate is being used.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0661",
        "Description": "A system is running a version of software that was replaced with a Trojan Horse at one of its distribution points, such as (1) TCP Wrappers 7.6, (2) util-linux 2.9g, (3) wuarchive ftpd (wuftpd) 2.2 and 2.1f, (4) IRC client (ircII) ircII 2.2.9, (5) OpenSSH 3.4p1, or (6) Sendmail 8.12.6.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0662",
        "Description": "A system-critical program or library does not have the appropriate patch, hotfix, or service pack installed, or is outdated or obsolete.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0663",
        "Description": "A system-critical program, library, or file has a checksum or other integrity measurement that indicates that it has been modified.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0664",
        "Description": "An application-critical Windows NT registry key has inappropriate permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0665",
        "Description": "An application-critical Windows NT registry key has an inappropriate value.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0667",
        "Description": "The ARP protocol allows any host to spoof ARP replies and poison the ARP cache to conduct IP address spoofing or a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0668",
        "Description": "The scriptlet.typelib ActiveX control is marked as \"safe for scripting\" for Internet Explorer, which allows a remote attacker to execute arbitrary commands as demonstrated by Bubbleboy.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0669",
        "Description": "The Eyedog ActiveX control is marked as \"safe for scripting\" for Internet Explorer, which allows a remote attacker to execute arbitrary commands as demonstrated by Bubbleboy.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0670",
        "Description": "Buffer overflow in the Eyedog ActiveX control allows a remote attacker to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0671",
        "Description": "Buffer overflow in ToxSoft NextFTP client through CWD command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0672",
        "Description": "Buffer overflow in Fujitsu Chocoa IRC client via IRC channel topics.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0673",
        "Description": "Buffer overflow in ALMail32 POP3 client via From: or To: headers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0674",
        "Description": "The BSD profil system call allows a local user to modify the internal data space of a program via profiling and execve.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0675",
        "Description": "Check Point FireWall-1 can be subjected to a denial of service via UDP packets that are sent through VPN-1 to port 0 of a host.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0676",
        "Description": "sdtcm_convert in Solaris 2.6 allows a local user to overwrite sensitive files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0677",
        "Description": "The WebRamp web administration utility has a default password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0678",
        "Description": "A default configuration of Apache on Debian GNU/Linux sets the ServerRoot to /usr/doc, which allows remote users to read documentation files for the entire server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0679",
        "Description": "Buffer overflow in hybrid-6 IRC server commonly used on EFnet allows remote attackers to execute commands via m_invite invite option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0680",
        "Description": "Windows NT Terminal Server performs extra work when a client opens a new connection but before it is authenticated, allowing for a denial of service.",
        "CWE": [
            {
                "CWE": "CWE-287",
                "CWE Description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
                "CWE Techniques": [
                    {
                        "ID": "1548",
                        "Name": "Abuse Elevation Control Mechanism",
                        "Description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.",
                        "Tactics": {
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1040",
                        "Name": "Network Sniffing",
                        "Description": "Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords.",
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1185",
                        "Name": "Browser Session Hijacking",
                        "Description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                        "Tactics": {
                            "collection": "The adversary is trying to gather data of interest to their goal."
                        }
                    },
                    {
                        "ID": "1550.001",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nDirect API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user\u2019s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1563",
                        "Name": "Remote Service Session Hijacking",
                        "Description": "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)",
                        "Tactics": {
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1134",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1505.003",
                        "Name": "Server Software Component",
                        "Description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold."
                        }
                    },
                    {
                        "ID": "1557",
                        "Name": "Adversary-in-the-Middle",
                        "Description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.(Citation: volexity_0day_sophos_FW) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords.",
                            "collection": "The adversary is trying to gather data of interest to their goal."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0681",
        "Description": "Buffer overflow in Microsoft FrontPage Server Extensions (PWS) 3.0.2.926 on Windows 95, and possibly other versions, allows remote attackers to cause a denial of service via a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0682",
        "Description": "Microsoft Exchange 5.5 allows a remote attacker to relay email (i.e. spam) using encapsulated SMTP addresses, even if the anti-relaying features are enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0683",
        "Description": "Denial of service in Gauntlet Firewall via a malformed ICMP packet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0684",
        "Description": "Denial of service in Sendmail 8.8.6 in HPUX.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0685",
        "Description": "Buffer overflow in Netscape Communicator via EMBED tags in the pluginspage option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0686",
        "Description": "Denial of service in Netscape Enterprise Server (NES) in HP Virtual Vault (VVOS) via a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0687",
        "Description": "The ToolTalk ttsession daemon uses weak RPC authentication, which allows a remote attacker to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0688",
        "Description": "Buffer overflows in HP Software Distributor (SD) for HPUX 10.x and 11.x.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0689",
        "Description": "The CDE dtspcd daemon allows local users to execute arbitrary commands via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0690",
        "Description": "HP CDE program includes the current directory in root's PATH variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0691",
        "Description": "Buffer overflow in the AddSuLog function of the CDE dtaction utility allows local users to gain root privileges via a long user name.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0692",
        "Description": "The default configuration of the Array Services daemon (arrayd) disables authentication, allowing remote users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0693",
        "Description": "Buffer overflow in TT_SESSION environment variable in ToolTalk shared library allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0694",
        "Description": "Denial of service in AIX ptrace system call allows local users to crash the system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0695",
        "Description": "The Sybase PowerDynamo personal web server allows attackers to read arbitrary files through a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0696",
        "Description": "Buffer overflow in CDE Calendar Manager Service Daemon (rpc.cmsd).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0697",
        "Description": "SCO Doctor allows local users to gain root privileges through a Tools option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0698",
        "Description": "Denial of service in IP protocol logger (ippl) on Red Hat and Debian Linux.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0699",
        "Description": "The Bluestone Sapphire web server allows session hijacking via easily guessable session IDs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0700",
        "Description": "Buffer overflow in Microsoft Phone Dialer (dialer.exe), via a malformed dialer entry in the dialer.ini file.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0701",
        "Description": "After an unattended installation of Windows NT 4.0, an installation file could include sensitive information such as the local Administrator password.",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0702",
        "Description": "Internet Explorer 5.0 and 5.01 allows remote attackers to modify or execute files via the Import/Export Favorites feature, aka the \"ImportExportFavorites\" vulnerability.",
        "CWE": [
            {
                "CWE": "CWE-94",
                "CWE Description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
                "CWE Techniques": [
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0703",
        "Description": "OpenBSD, BSDI, and other Unix operating systems allow users to set chflags and fchflags on character and block devices.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0704",
        "Description": "Buffer overflow in Berkeley automounter daemon (amd) logging facility provided in the Linux am-utils package and others.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0705",
        "Description": "Buffer overflow in INN inews program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0706",
        "Description": "Linux xmonisdn package allows local users to gain root privileges by modifying the IFS or PATH environmental variables.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0707",
        "Description": "The default FTP configuration in HP Visualize Conference allows conference users to send a file to other participants without authorization.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0708",
        "Description": "Buffer overflow in cfingerd allows local users to gain root privileges via a long GECOS field.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0710",
        "Description": "The Squid package in Red Hat Linux 5.2 and 6.0, and other distributions, installs cachemgr.cgi in a public web directory, which allows remote attackers to use it as an intermediary to connect to other systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0711",
        "Description": "The oratclsh interpreter in Oracle 8.x Intelligent Agent for Unix allows local users to execute Tcl commands as root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0712",
        "Description": "A vulnerability in Caldera Open Administration System (COAS) allows the /etc/shadow password file to be made world-readable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0713",
        "Description": "The dtlogin program in Compaq Tru64 UNIX allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0714",
        "Description": "Vulnerability in Compaq Tru64 UNIX edauth command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0715",
        "Description": "Buffer overflow in Remote Access Service (RAS) client allows an attacker to execute commands or cause a denial of service via a malformed phonebook entry.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0716",
        "Description": "Buffer overflow in Windows NT 4.0 help file utility via a malformed help file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0717",
        "Description": "A remote attacker can disable the virus warning mechanism in Microsoft Excel 97.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0718",
        "Description": "IBM GINA, when used for OS/2 domain authentication of Windows NT users, allows local users to gain administrator privileges by changing the GroupMapping registry key.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0719",
        "Description": "The Guile plugin for the Gnumeric spreadsheet package allows attackers to execute arbitrary code.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0720",
        "Description": "The pt_chown command in Linux allows local users to modify TTY terminal devices that belong to other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0721",
        "Description": "Denial of service in Windows NT Local Security Authority (LSA) through a malformed LSA request.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0722",
        "Description": "The default configuration of Cobalt RaQ2 servers allows remote users to install arbitrary software packages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0723",
        "Description": "The Windows NT Client Server Runtime Subsystem (CSRSS) can be subjected to a denial of service when all worker threads are waiting for user input.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0724",
        "Description": "Buffer overflow in OpenBSD procfs and fdescfs file systems via uio_offset in the readdir() function.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0725",
        "Description": "When IIS is run with a default language of Chinese, Korean, or Japanese, it allows a remote attacker to view the source code of certain files, a.k.a. \"Double Byte Code Page\".",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0726",
        "Description": "An attacker can conduct a denial of service in Windows NT by executing a program with a malformed file image header.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0727",
        "Description": "A kernel leak in the OpenBSD kernel allows IPsec packets to be sent unencrypted.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0728",
        "Description": "A Windows NT user can disable the keyboard or mouse by directly calling the IOCTLs which control them.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0729",
        "Description": "Buffer overflow in Lotus Notes LDAP (NLDAP) allows an attacker to conduct a denial of service through the ldap_search request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0730",
        "Description": "The zsoelim program in the Debian man-db package allows local users to overwrite files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0731",
        "Description": "The KDE klock program allows local users to unlock a session using malformed input.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0732",
        "Description": "The logging facility of the Debian smtp-refuser package allows local users to delete arbitrary files using symbolic links.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0733",
        "Description": "Buffer overflow in VMWare 1.0.1 for Linux via a long HOME environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0734",
        "Description": "A default configuration of CiscoSecure Access Control Server (ACS) allows remote users to modify the server database without authentication.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0735",
        "Description": "KDE K-Mail allows local users to gain privileges via a symlink attack in temporary user directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0736",
        "Description": "The showcode.asp sample file in IIS and Site Server allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0737",
        "Description": "The viewcode.asp sample file in IIS and Site Server allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0738",
        "Description": "The code.asp sample file in IIS and Site Server allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0739",
        "Description": "The codebrws.asp sample file in IIS and Site Server allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0740",
        "Description": "Remote attackers can cause a denial of service on Linux in.telnetd telnet daemon through a malformed TERM environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0741",
        "Description": "QMS CrownNet Unix Utilities for 2060 allows root to log on without a password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0742",
        "Description": "The Debian mailman package uses weak authentication, which allows attackers to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0743",
        "Description": "Trn allows local users to overwrite other users' files via symlinks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0744",
        "Description": "Buffer overflow in Netscape Enterprise Server and FastTrask Server allows remote attackers to gain privileges via a long HTTP GET request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0745",
        "Description": "Buffer overflow in Source Code Browser Program Database Name Server Daemon (pdnsd) for the IBM AIX C Set ++ compiler.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0746",
        "Description": "A default configuration of in.identd in SuSE Linux waits 120 seconds between requests, allowing a remote attacker to conduct a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0747",
        "Description": "Denial of service in BSDi Symmetric Multiprocessing (SMP) when an fstat call is made when the system has a high CPU load.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0748",
        "Description": "Buffer overflows in Red Hat net-tools package.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0749",
        "Description": "Buffer overflow in Microsoft Telnet client in Windows 95 and Windows 98 via a malformed Telnet argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0750",
        "Description": "Hotmail allows Javascript to be executed via the HTML STYLE tag, allowing remote attackers to execute commands on the user's Hotmail account.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0751",
        "Description": "Buffer overflow in Accept command in Netscape Enterprise Server 3.6 with the SSL Handshake Patch.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0752",
        "Description": "Denial of service in Netscape Enterprise Server via a buffer overflow in the SSL handshake.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0753",
        "Description": "The w3-msql CGI script provided with Mini SQL allows remote attackers to view restricted directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0754",
        "Description": "The INN inndstart program allows local users to gain privileges by specifying an alternate configuration file using the INNCONF environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0755",
        "Description": "Windows NT RRAS and RAS clients cache a user's password even if the user has not selected the \"Save password\" option.",
        "CWE": [
            {
                "CWE": "CWE-255",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0756",
        "Description": "ColdFusion Administrator with Advanced Security enabled allows remote users to stop the ColdFusion server via the Start/Stop utility.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0757",
        "Description": "The ColdFusion CFCRYPT program for encrypting CFML templates has weak encryption, allowing attackers to decrypt the templates.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0758",
        "Description": "Netscape Enterprise 3.5.1 and FastTrack 3.01 servers allow a remote attacker to view source code to scripts by appending a %20 to the script's URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0759",
        "Description": "Buffer overflow in FuseMAIL POP service via long USER and PASS commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0760",
        "Description": "Undocumented ColdFusion Markup Language (CFML) tags and functions in the ColdFusion Administrator allow users to gain additional privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0761",
        "Description": "Buffer overflow in FreeBSD fts library routines allows local user to modify arbitrary files via the periodic program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0762",
        "Description": "When Javascript is embedded within the TITLE tag, Netscape Communicator allows a remote attacker to use the \"about\" protocol to gain access to browser information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0763",
        "Description": "NetBSD on a multi-homed host allows ARP packets on one network to modify ARP entries on another connected network.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0764",
        "Description": "NetBSD allows ARP packets to overwrite static ARP entries.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0765",
        "Description": "SGI IRIX midikeys program allows local users to modify arbitrary files via a text editor.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0766",
        "Description": "The Microsoft Java Virtual Machine allows a malicious Java applet to execute arbitrary commands outside of the sandbox environment.",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0767",
        "Description": "Buffer overflow in Solaris libc, ufsrestore, and rcp via LC_MESSAGES environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0768",
        "Description": "Buffer overflow in Vixie Cron on Red Hat systems via the MAILTO environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0769",
        "Description": "Vixie Cron on Linux systems allows local users to set parameters of sendmail commands via the MAILTO environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0770",
        "Description": "Firewall-1 sets a long timeout for connections that begin with ACK or other packets except SYN, allowing an attacker to conduct a denial of service via a large number of connection attempts to unresponsive systems.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0771",
        "Description": "The web components of Compaq Management Agents and the Compaq Survey Utility allow a remote attacker to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0772",
        "Description": "Denial of service in Compaq Management Agents and the Compaq Survey Utility via a long string sent to port 2301.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0773",
        "Description": "Buffer overflow in Solaris lpset program allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0774",
        "Description": "Buffer overflows in Mars NetWare Emulation (NWE, mars_nwe) package via long directory names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0775",
        "Description": "Cisco Gigabit Switch routers running IOS allow remote attackers to forward unauthorized packets due to improper handling of the \"established\" keyword in an access list.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0776",
        "Description": "Alibaba HTTP server allows remote attackers to read files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0777",
        "Description": "IIS FTP servers may allow a remote attacker to read or delete files on the server, even if they have \"No Access\" permissions.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0778",
        "Description": "Buffer overflow in Xi Graphics Accelerated-X server allows local users to gain root access via a long display or query parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0779",
        "Description": "Denial of service in HP-UX SharedX recserv program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0780",
        "Description": "KDE klock allows local users to kill arbitrary processes by specifying an arbitrary PID in the .kss.pid file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0781",
        "Description": "KDE allows local users to execute arbitrary commands by setting the KDEDIR environmental variable to modify the search path that KDE uses to locate its executables.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0782",
        "Description": "KDE kppp allows local users to create a directory in an arbitrary location via the HOME environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0783",
        "Description": "FreeBSD allows local users to conduct a denial of service by creating a hard link from a device special file to a file on an NFS file system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0784",
        "Description": "Denial of service in Oracle TNSLSNR SQL*Net Listener via a malformed string to the listener port, aka NERP.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0785",
        "Description": "The INN inndstart program allows local users to gain root privileges via the \"pathrun\" parameter in the inn.conf file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0786",
        "Description": "The dynamic linker in Solaris allows a local user to create arbitrary files via the LD_PROFILE environmental variable and a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0787",
        "Description": "The SSH authentication agent follows symlinks via a UNIX domain socket.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0788",
        "Description": "Arkiea nlservd allows remote attackers to conduct a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0789",
        "Description": "Buffer overflow in AIX ftpd in the libc library.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0790",
        "Description": "A remote attacker can read information from a Netscape user's cache via JavaScript.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0791",
        "Description": "Hybrid Network cable modems do not include an authentication mechanism for administration, allowing remote attackers to compromise the system through the HSMP protocol.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0792",
        "Description": "ROUTERmate has a default SNMP community name which allows remote attackers to modify its configuration.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0793",
        "Description": "Internet Explorer allows remote attackers to read files by redirecting data to a Javascript applet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0794",
        "Description": "Microsoft Excel does not warn a user when a macro is present in a Symbolic Link (SYLK) format file.",
        "CWE": [
            {
                "CWE": "CWE-59",
                "CWE Description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
                "CWE Techniques": [
                    {
                        "ID": "1547.009",
                        "Name": "Boot or Logon Autostart Execution",
                        "Description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1574.005",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.010",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0795",
        "Description": "The NIS+ rpc.nisd server allows remote attackers to execute certain RPC calls without authentication to obtain system information, disable logging, or modify caches.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0796",
        "Description": "FreeBSD T/TCP Extensions for Transactions can be subjected to spoofing attacks.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0797",
        "Description": "NIS finger allows an attacker to conduct a denial of service via a large number of finger requests, resulting in a large number of NIS queries.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0798",
        "Description": "Buffer overflow in bootpd on OpenBSD, FreeBSD, and Linux systems via a malformed header type.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0799",
        "Description": "Buffer overflow in bootpd 2.4.3 and earlier via a long boot file location.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0800",
        "Description": "The GetFile.cfm file in Allaire Forums allows remote attackers to read files through a parameter to GetFile.cfm.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0801",
        "Description": "BMC Patrol allows remote attackers to gain access to an agent by spoofing frames.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0802",
        "Description": "Buffer overflow in Internet Explorer 5 allows remote attackers to execute commands via a malformed Favorites icon.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0803",
        "Description": "The fwluser script in AIX eNetwork Firewall allows local users to write to arbitrary files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0804",
        "Description": "Denial of service in Linux 2.2.x kernels via malformed ICMP packets containing unusual types, codes, and IP header lengths.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0805",
        "Description": "Novell NetWare Transaction Tracking System (TTS) in Novell 4.11 and earlier allows remote attackers to cause a denial of service via a large number of requests.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0806",
        "Description": "Buffer overflow in Solaris dtprintinfo program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0807",
        "Description": "The Netscape Directory Server installation procedure leaves sensitive information in a file that is accessible to local users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0808",
        "Description": "Multiple buffer overflows in ISC DHCP Distribution server (dhcpd) 1.0 and 2.0 allow a remote attacker to cause a denial of service (crash) and possibly execute arbitrary commands via long options.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0809",
        "Description": "Netscape Communicator 4.x with Javascript enabled does not warn a user of cookie settings, even if they have selected the option to \"Only accept cookies originating from the same server as the page being viewed\".",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0810",
        "Description": "Denial of service in Samba NETBIOS name service daemon (nmbd).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0811",
        "Description": "Buffer overflow in Samba smbd program via a malformed message command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0812",
        "Description": "Race condition in Samba smbmnt allows local users to mount file systems in arbitrary locations.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0813",
        "Description": "Cfingerd with ALLOW_EXECUTION enabled does not properly drop privileges when it executes a program on behalf of the user, allowing local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0814",
        "Description": "Red Hat pump DHCP client allows remote attackers to gain root access in some configurations.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0815",
        "Description": "Memory leak in SNMP agent in Windows NT 4.0 before SP5 allows remote attackers to conduct a denial of service (memory exhaustion) via a large number of queries.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0816",
        "Description": "The Motorola CableRouter allows any remote user to connect to and configure the router on port 1024.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0817",
        "Description": "Lynx WWW client allows a remote attacker to specify command-line parameters which Lynx uses when calling external programs to handle certain protocols, e.g. telnet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0818",
        "Description": "Buffer overflow in Solaris kcms_configure via a long NETPATH environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0819",
        "Description": "NTMail does not disable the VRFY command, even if the administrator has explicitly disabled it.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0820",
        "Description": "FreeBSD seyon allows users to gain privileges via a modified PATH variable for finding the xterm and seyon-emu commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0821",
        "Description": "FreeBSD seyon allows local users to gain privileges by providing a malicious program in the -emulator argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0822",
        "Description": "Buffer overflow in Qpopper (qpop) 3.0 allows remote root access via AUTH command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0823",
        "Description": "Buffer overflow in FreeBSD xmindpath allows local users to gain privileges via -f argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0824",
        "Description": "A Windows NT user can use SUBST to map a drive letter to a folder, which is not unmapped after the user logs off, potentially allowing that user to modify the location of folders accessed by later users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0825",
        "Description": "The default permissions for UnixWare /var/mail allow local users to read and modify other users' mail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0826",
        "Description": "Buffer overflow in FreeBSD angband allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0827",
        "Description": "By default, Internet Explorer 5.0 and other versions enables the \"Navigate sub-frames across different domains\" option, which allows frame spoofing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0828",
        "Description": "UnixWare pkg commands such as pkginfo, pkgcat, and pkgparam allow local users to read arbitrary files via the dacread permission.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0829",
        "Description": "HP Secure Web Console uses weak encryption.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0830",
        "Description": "Buffer overflow in SCO UnixWare Xsco command via a long argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0831",
        "Description": "Denial of service in Linux syslogd via a large number of connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0832",
        "Description": "Buffer overflow in NFS server on Linux allows attackers to execute commands via a long pathname.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0833",
        "Description": "Buffer overflow in BIND 8.2 via NXT records.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0834",
        "Description": "Buffer overflow in RSAREF2 via the encryption and decryption functions in the RSAREF library.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0835",
        "Description": "Denial of service in BIND named via malformed SIG records.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0836",
        "Description": "UnixWare uidadmin allows local users to modify arbitrary files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0837",
        "Description": "Denial of service in BIND by improperly closing TCP sessions via so_linger.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0838",
        "Description": "Buffer overflow in Serv-U FTP 2.5 allows remote users to conduct a denial of service via the SITE command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0839",
        "Description": "Windows NT Task Scheduler installed with Internet Explorer 5 allows a user to gain privileges by modifying the job after it has been scheduled.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0840",
        "Description": "Buffer overflow in CDE dtmail and dtmailpr programs allows local users to gain privileges via a long -f option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0841",
        "Description": "Buffer overflow in CDE mailtool allows local users to gain root privileges via a long MIME Content-Type.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0842",
        "Description": "Symantec Mail-Gear 1.0 web interface server allows remote users to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0843",
        "Description": "Denial of service in Cisco routers running NAT via a PORT command from an FTP client to a Telnet port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0844",
        "Description": "Denial of service in MDaemon WorldClient and WebConfig services via a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0845",
        "Description": "Buffer overflow in SCO su program allows local users to gain root access via a long username.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0846",
        "Description": "Denial of service in MDaemon 2.7 via a large number of connection attempts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0847",
        "Description": "Buffer overflow in free internet chess server (FICS) program, xboard.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0848",
        "Description": "Denial of service in BIND named via consuming more than \"fdmax\" file descriptors.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0849",
        "Description": "Denial of service in BIND named via maxdname.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0850",
        "Description": "The default permissions for Endymion MailMan allow local users to read email or modify files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0851",
        "Description": "Denial of service in BIND named via naptr.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0852",
        "Description": "IBM WebSphere sets permissions that allow a local user to modify a deinstallation script or its data files stored in /usr/bin.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0853",
        "Description": "Buffer overflow in Netscape Enterprise Server and Netscape FastTrack Server allows remote attackers to gain privileges via the HTTP Basic Authentication procedure.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0854",
        "Description": "Ultimate Bulletin Board stores data files in the cgi-bin directory, allowing remote attackers to view the data if an error occurs when the HTTP server attempts to execute the file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0855",
        "Description": "Buffer overflow in FreeBSD gdc program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0856",
        "Description": "login in Slackware 7.0 allows remote attackers to identify valid users on the system by reporting an encryption error when an account is locked or does not exist.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0857",
        "Description": "FreeBSD gdc program allows local users to modify files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0858",
        "Description": "Internet Explorer 5 allows a remote attacker to modify the IE client's proxy configuration via a malicious Web Proxy Auto-Discovery (WPAD) server.",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0859",
        "Description": "Solaris arp allows local users to read files via the -f parameter, which lists lines in the file that do not parse properly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0860",
        "Description": "Solaris chkperm allows local users to read files owned by bin via the VMSYS environmental variable and a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0861",
        "Description": "Race condition in the SSL ISAPI filter in IIS and other servers may leak information in plaintext.",
        "CWE": [
            {
                "CWE": "CWE-362",
                "CWE Description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0862",
        "Description": "Insecure directory permissions in RPM distribution for PostgreSQL allows local users to gain privileges by reading a plaintext password file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0863",
        "Description": "Buffer overflow in FreeBSD seyon via HOME environmental variable, -emulator argument, -modems argument, or the GUI.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0864",
        "Description": "UnixWare programs that dump core allow a local user to modify files via a symlink attack on the ./core.pid file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0865",
        "Description": "Buffer overflow in CommuniGatePro via a long string to the HTTP configuration port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0866",
        "Description": "Buffer overflow in UnixWare xauto program allows local users to gain root privilege.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0867",
        "Description": "Denial of service in IIS 4.0 via a flood of HTTP requests with malformed headers.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0868",
        "Description": "ucbmail allows remote attackers to execute commands via shell metacharacters that are passed to it from INN.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0869",
        "Description": "Internet Explorer 3.x to 4.01 allows a remote attacker to insert malicious content into a frame of another web site, aka frame spoofing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0870",
        "Description": "Internet Explorer 4.01 allows remote attackers to read arbitrary files by pasting a file name into the file upload control, aka untrusted scripted paste.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0871",
        "Description": "Internet Explorer 4.0 and 4.01 allow a remote attacker to read files via IE's cross frame security, aka the \"Cross Frame Navigate\" vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0872",
        "Description": "Buffer overflow in Vixie cron allows local users to gain root access via a long MAILTO environment variable in a crontab file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0873",
        "Description": "Buffer overflow in Skyfull mail server via MAIL FROM command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0874",
        "Description": "Buffer overflow in IIS 4.0 allows remote attackers to cause a denial of service via a malformed request for files with .HTR, .IDC, or .STM extensions.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0875",
        "Description": "DHCP clients with ICMP Router Discovery Protocol (IRDP) enabled allow remote attackers to modify their default routes.",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0876",
        "Description": "Buffer overflow in Internet Explorer 4.0 via EMBED tag.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0877",
        "Description": "Internet Explorer 5 allows remote attackers to read files via an ExecCommand method called on an IFRAME.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0878",
        "Description": "Buffer overflow in WU-FTPD and related FTP servers allows remote attackers to gain root privileges via MAPPING_CHDIR.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0879",
        "Description": "Buffer overflow in WU-FTPD and related FTP servers allows remote attackers to gain root privileges via macro variables in a message file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0880",
        "Description": "Denial of service in WU-FTPD via the SITE NEWER command, which does not free memory properly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0881",
        "Description": "Falcon web server allows remote attackers to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0882",
        "Description": "Falcon web server allows remote attackers to determine the absolute path of the web root via long file names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0883",
        "Description": "Zeus web server allows remote attackers to read arbitrary files by specifying the file name in an option to the search engine.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0884",
        "Description": "The Zeus web server administrative interface uses weak encryption for its passwords.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0885",
        "Description": "Alibaba web server allows remote attackers to execute commands via a pipe character in a malformed URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0886",
        "Description": "The security descriptor for RASMAN allows users to point to an alternate location via the Windows NT Service Control Manager.",
        "CWE": [
            {
                "CWE": "CWE-16",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0887",
        "Description": "FTGate web interface server allows remote attackers to read files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0888",
        "Description": "dbsnmp in Oracle Intelligent Agent allows local users to gain privileges by setting the ORACLE_HOME environmental variable, which dbsnmp uses to find the nmiconf.tcl script.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0889",
        "Description": "Cisco 675 routers running CBOS allow remote attackers to establish telnet sessions if an exec or superuser password has not been set.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0890",
        "Description": "iHTML Merchant allows remote attackers to obtain sensitive information or execute commands via a code parsing error.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0891",
        "Description": "The \"download behavior\" in Internet Explorer 5 allows remote attackers to read arbitrary files via a server-side redirect.",
        "CWE": [
            {
                "CWE": "CWE-94",
                "CWE Description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
                "CWE Techniques": [
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0892",
        "Description": "Buffer overflow in Netscape Communicator before 4.7 via a dynamic font whose length field is less than the size of the font.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0893",
        "Description": "userOsa in SCO OpenServer allows local users to corrupt files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0894",
        "Description": "Red Hat Linux screen program does not use Unix98 ptys, allowing local users to write to other terminals.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0895",
        "Description": "Firewall-1 does not properly restrict access to LDAP attributes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0896",
        "Description": "Buffer overflow in RealNetworks RealServer administration utility allows remote attackers to execute arbitrary commands via a long username and password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0897",
        "Description": "iChat ROOMS Webserver allows remote attackers to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0898",
        "Description": "Buffer overflows in Windows NT 4.0 print spooler allow remote attackers to gain privileges or cause a denial of service via a malformed spooler request.",
        "CWE": [
            {
                "CWE": "CWE-119",
                "CWE Description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0899",
        "Description": "The Windows NT 4.0 print spooler allows a local user to execute arbitrary commands due to inappropriate permissions that allow the user to specify an alternate print provider.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0900",
        "Description": "Buffer overflow in rpc.yppasswdd allows a local user to gain privileges via MD5 hash generation.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0901",
        "Description": "ypserv allows a local user to modify the GECOS and login shells of other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0902",
        "Description": "ypserv allows local administrators to modify password tables.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0903",
        "Description": "genfilt in the AIX Packet Filtering Module does not properly filter traffic to destination ports greater than 32767.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0904",
        "Description": "Buffer overflow in BFTelnet allows remote attackers to cause a denial of service via a long username.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0905",
        "Description": "Denial of service in Axent Raptor firewall via malformed zero-length IP options.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0906",
        "Description": "Buffer overflow in sccw allows local users to gain root access via the HOME environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0907",
        "Description": "sccw allows local users to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0908",
        "Description": "Denial of service in Solaris TCP streams driver via a malicious connection that causes the server to panic as a result of recursive calls to mutex_enter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0909",
        "Description": "Multihomed Windows systems allow a remote attacker to bypass IP source routing restrictions via a malformed packet with IP options, aka the \"Spoofed Route Pointer\" vulnerability.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0910",
        "Description": "Microsoft Site Server and Commercial Internet System (MCIS) do not set an expiration for a cookie, which could then be cached by a proxy and inadvertently used by a different user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0911",
        "Description": "Buffer overflow in ProFTPD, wu-ftpd, and beroftpd allows remote attackers to gain root access via a series of MKD and CWD commands that create nested directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0912",
        "Description": "FreeBSD VFS cache (vfs_cache) allows local users to cause a denial of service by opening a large number of files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0913",
        "Description": "dfire.cgi script in Dragon-Fire IDS allows remote users to execute commands via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0914",
        "Description": "Buffer overflow in the FTP client in the Debian GNU/Linux netstd package.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0915",
        "Description": "URL Live! web server allows remote attackers to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0916",
        "Description": "WebTrends software stores account names and passwords in a file which does not have restricted access permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0917",
        "Description": "The Preloader ActiveX control used by Internet Explorer allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0918",
        "Description": "Denial of service in various Windows systems via malformed, fragmented IGMP packets.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0919",
        "Description": "A memory leak in a Motorola CableRouter allows remote attackers to conduct a denial of service via a large number of telnet connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0920",
        "Description": "Buffer overflow in the pop-2d POP daemon in the IMAP package allows remote attackers to gain privileges via the FOLD command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0921",
        "Description": "BMC Patrol allows any remote attacker to flood its UDP port, causing a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0922",
        "Description": "An example application in ColdFusion Server 4.0 allows remote attackers to view source code via the sourcewindow.cfm file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0923",
        "Description": "Sample runnable code snippets in ColdFusion Server 4.0 allow remote attackers to read files, conduct a denial of service, or use the server as a proxy for other HTTP calls.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0924",
        "Description": "The Syntax Checker in ColdFusion Server 4.0 allows remote attackers to conduct a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0925",
        "Description": "UnityMail allows remote attackers to conduct a denial of service via a large number of MIME headers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0926",
        "Description": "Apache allows remote attackers to conduct a denial of service via a large number of MIME headers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0927",
        "Description": "NTMail allows remote attackers to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0928",
        "Description": "Buffer overflow in SmartDesk WebSuite allows remote attackers to cause a denial of service via a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0929",
        "Description": "Novell NetWare with Novell-HTTP-Server or YAWN web servers allows remote attackers to conduct a denial of service via a large number of HTTP GET requests.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0930",
        "Description": "wwwboard allows a remote attacker to delete message board articles via a malformed argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0931",
        "Description": "Buffer overflow in Mediahouse Statistics Server allows remote attackers to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0932",
        "Description": "Mediahouse Statistics Server allows remote attackers to read the administrator password, which is stored in cleartext in the ss.cfg file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0933",
        "Description": "TeamTrack web server allows remote attackers to read arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0934",
        "Description": "classifieds.cgi allows remote attackers to read arbitrary files via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0935",
        "Description": "classifieds.cgi allows remote attackers to execute arbitrary commands by specifying them in a hidden variable in a CGI form.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0936",
        "Description": "BNBSurvey survey.cgi program allows remote attackers to execute commands via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0937",
        "Description": "BNBForm allows remote attackers to read arbitrary files via the automessage hidden form variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0938",
        "Description": "MBone SDR Package allows remote attackers to execute commands via shell metacharacters in Session Initiation Protocol (SIP) messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0939",
        "Description": "Denial of service in Debian IRC Epic/epic4 client via a long string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0940",
        "Description": "Buffer overflow in mutt mail client allows remote attackers to execute commands via malformed MIME messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0941",
        "Description": "Mutt mail client allows a remote attacker to execute commands via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0942",
        "Description": "UnixWare dos7utils allows a local user to gain root privileges by using the STATICMERGE environmental variable to find a script which it executes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0943",
        "Description": "Buffer overflow in OpenLink 3.2 allows remote attackers to gain privileges via a long GET request to the web configurator.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0944",
        "Description": "IBM WebSphere ikeyman tool uses weak encryption to store a password for a key database that is used for SSL connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0945",
        "Description": "Buffer overflow in Internet Mail Service (IMS) for Microsoft Exchange 5.5 and 5.0 allows remote attackers to conduct a denial of service via AUTH or AUTHINFO commands.",
        "CWE": [
            {
                "CWE": "CWE-120",
                "CWE Description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0946",
        "Description": "Buffer overflow in Yamaha MidiPlug via a Text variable in an EMBED tag.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0947",
        "Description": "AN-HTTPd provides example CGI scripts test.bat, input.bat, input2.bat, and envout.bat, which allow remote attackers to execute commands via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0948",
        "Description": "Buffer overflow in uum program for Canna input system allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0949",
        "Description": "Buffer overflow in canuum program for Canna input system allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0950",
        "Description": "Buffer overflow in WFTPD FTP server allows remote attackers to gain root access via\ta series of MKD and CWD commands that create nested directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0951",
        "Description": "Buffer overflow in OmniHTTPd CGI program imagemap.exe allows remote attackers to execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0952",
        "Description": "Buffer overflow in Solaris lpstat via class argument allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0953",
        "Description": "WWWBoard stores encrypted passwords in a password file that is under the web root and thus accessible by remote attackers.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0954",
        "Description": "WWWBoard has a default username and default password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0955",
        "Description": "Race condition in wu-ftpd and BSDI ftpd allows remote attackers to gain root access via the SITE EXEC command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0956",
        "Description": "The NeXT NetInfo _writers property allows local users to gain root privileges or conduct a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0957",
        "Description": "MajorCool mj_key_cache program allows local users to modify files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0958",
        "Description": "sudo 1.5.x allows local users to execute arbitrary commands via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0959",
        "Description": "IRIX startmidi program allows local users to modify arbitrary files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0960",
        "Description": "IRIX cdplayer allows local users to create directories in arbitrary locations via a command line option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0961",
        "Description": "HPUX sysdiag allows local users to gain root privileges via a symlink attack during log file creation.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0962",
        "Description": "Buffer overflow in HPUX passwd command allows local users to gain root privileges via a command line option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0963",
        "Description": "FreeBSD mount_union command allows local users to gain root privileges via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0964",
        "Description": "Buffer overflow in FreeBSD setlocale in the libc module allows attackers to execute arbitrary code via a long PATH_LOCALE environment variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0965",
        "Description": "Race condition in xterm allows local users to modify arbitrary files via the logging option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0966",
        "Description": "Buffer overflow in Solaris getopt in libc allows local users to gain root privileges via a long argv[0].",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0967",
        "Description": "Buffer overflow in the HTML library used by Internet Explorer, Outlook Express, and Windows Explorer via the res: local resource protocol.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0968",
        "Description": "Buffer overflow in BNC IRC proxy allows remote attackers to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0969",
        "Description": "The Windows NT RPC service allows remote attackers to conduct a denial of service using spoofed malformed RPC packets which generate an error message that is sent to the spoofed host, potentially setting up a loop, aka Snork.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0970",
        "Description": "The OmniHTTPD visadmin.exe program allows a remote attacker to conduct a denial of service via a malformed URL which causes a large number of temporary files to be created.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0971",
        "Description": "Buffer overflow in Exim allows local users to gain root privileges via a long :include: option in a .forward file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0972",
        "Description": "Buffer overflow in Xshipwars xsw program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0973",
        "Description": "Buffer overflow in Solaris snoop program allows remote attackers to gain root privileges via a long domain name when snoop is running in verbose mode.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0974",
        "Description": "Buffer overflow in Solaris snoop allows remote attackers to gain root privileges via GETQUOTA requests to the rpc.rquotad service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0975",
        "Description": "The Windows help system can allow a local user to execute commands as another user by editing a table of contents metafile with a .CNT extension and modifying the topic action to include the commands to be executed when the .hlp file is accessed.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0976",
        "Description": "Sendmail allows local users to reinitialize the aliases database via the newaliases command, then cause a denial of service by interrupting Sendmail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0977",
        "Description": "Buffer overflow in Solaris sadmind allows remote attackers to gain root privileges using a NETMGT_PROC_SERVICE request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0978",
        "Description": "htdig allows remote attackers to execute commands via filenames with shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0979",
        "Description": "The SCO UnixWare privileged process system allows local users to gain root privileges by using a debugger such as gdb to insert traps into _init before the privileged process is executed.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0980",
        "Description": "Windows NT Service Control Manager (SCM) allows remote attackers to cause a denial of service via a malformed argument in a resource enumeration request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0981",
        "Description": "Internet Explorer 5.01 and earlier allows a remote attacker to create a reference to a client window and use a server-side redirect to access local files via that window, aka \"Server-side Page Reference Redirect.\"",
        "CWE": [
            {
                "CWE": "CWE-59",
                "CWE Description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
                "CWE Techniques": [
                    {
                        "ID": "1547.009",
                        "Name": "Boot or Logon Autostart Execution",
                        "Description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1574.005",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.010",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0982",
        "Description": "The Sun Web-Based Enterprise Management (WBEM) installation script stores a password in plaintext in a world readable file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0983",
        "Description": "Whois Internic Lookup program whois.cgi allows remote attackers to execute commands via shell metacharacters in the domain entry.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0984",
        "Description": "Matt's Whois program whois.cgi allows remote attackers to execute commands via shell metacharacters in the domain entry.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0985",
        "Description": "CC Whois program whois.cgi allows remote attackers to execute commands via shell metacharacters in the domain entry.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0986",
        "Description": "The ping command in Linux 2.0.3x allows local users to cause a denial of service by sending large packets with the -R (record route) option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0987",
        "Description": "Windows NT does not properly download a system policy if the domain user logs into the domain with a space at the end of the domain name.",
        "CWE": [
            {
                "CWE": "CWE-287",
                "CWE Description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
                "CWE Techniques": [
                    {
                        "ID": "1548",
                        "Name": "Abuse Elevation Control Mechanism",
                        "Description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.",
                        "Tactics": {
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1040",
                        "Name": "Network Sniffing",
                        "Description": "Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords.",
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1185",
                        "Name": "Browser Session Hijacking",
                        "Description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                        "Tactics": {
                            "collection": "The adversary is trying to gather data of interest to their goal."
                        }
                    },
                    {
                        "ID": "1550.001",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nDirect API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user\u2019s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1563",
                        "Name": "Remote Service Session Hijacking",
                        "Description": "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)",
                        "Tactics": {
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1134",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1505.003",
                        "Name": "Server Software Component",
                        "Description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold."
                        }
                    },
                    {
                        "ID": "1557",
                        "Name": "Adversary-in-the-Middle",
                        "Description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.(Citation: volexity_0day_sophos_FW) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords.",
                            "collection": "The adversary is trying to gather data of interest to their goal."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0988",
        "Description": "UnixWare pkgtrans allows local users to read arbitrary files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0989",
        "Description": "Buffer overflow in Internet Explorer 5 directshow filter (MSDXM.OCX) allows remote attackers to execute commands via the vnd.ms.radio protocol.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0990",
        "Description": "Error messages generated by gdm with the VerboseAuth setting allows an attacker to identify valid users on a system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0991",
        "Description": "Buffer overflow in GoodTech Telnet Server NT allows remote users to cause a denial of service via a long login name.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0992",
        "Description": "HP VirtualVault with the PHSS_17692 patch allows unprivileged processes to bypass access restrictions via the Trusted Gateway Proxy (TGP).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0993",
        "Description": "Modifications to ACLs (Access Control Lists) in Microsoft Exchange  5.5 do not take effect until the directory store cache is refreshed.",
        "CWE": [
            {
                "CWE": "CWE-665",
                "CWE Description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0994",
        "Description": "Windows NT with SYSKEY reuses the keystream that is used for encrypting SAM password hashes, allowing an attacker to crack passwords.",
        "CWE": [
            {
                "CWE": "CWE-255",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0995",
        "Description": "Windows NT Local Security Authority (LSA) allows remote attackers to cause a denial of service via malformed arguments to the LsaLookupSids function which looks up the SID, aka \"Malformed Security Identifier Request.\"",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0996",
        "Description": "Buffer overflow in Infoseek Ultraseek search engine allows remote attackers to execute commands via a long GET request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0997",
        "Description": "wu-ftp with FTP conversion enabled allows an attacker to execute commands via a malformed file name that is interpreted as an argument to the program that does the conversion, e.g. tar or uncompress.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0998",
        "Description": "Cisco Cache Engine allows an attacker to replace content in the cache.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-0999",
        "Description": "Microsoft SQL 7.0 server allows a remote attacker to cause a denial of service via a malformed TDS packet.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1000",
        "Description": "The web administration interface for Cisco Cache Engine allows remote attackers to view performance statistics.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1001",
        "Description": "Cisco Cache Engine allows a remote attacker to gain access via a null username and password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1002",
        "Description": "Netscape Navigator uses weak encryption for storing a user's Netscape mail password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1003",
        "Description": "War FTP Daemon 1.70 allows remote attackers to cause a denial of service by flooding it with connections.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1004",
        "Description": "Buffer overflow in the POP server POProxy for the Norton Anti-Virus protection NAV2000 program via a large USER command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1005",
        "Description": "Groupwise web server GWWEB.EXE allows remote attackers to read arbitrary files with .htm extensions via a .. (dot dot) attack using the HELP parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1006",
        "Description": "Groupwise web server GWWEB.EXE allows remote attackers to determine the real path of the web server via the HELP parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1007",
        "Description": "Buffer overflow in VDO Live Player allows remote attackers to execute commands on the VDO client via a malformed .vdo file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1008",
        "Description": "xsoldier program allows local users to gain root access via a long argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1009",
        "Description": "The Disney Go Express Search allows remote attackers to access and modify search information for users by connecting to an HTTP server on the user's system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1010",
        "Description": "An SSH 1.2.27 server allows a client to use the \"none\" cipher, even if it is not allowed by the server policy.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1011",
        "Description": "The Remote Data Service (RDS) DataFactory component of Microsoft Data Access Components (MDAC) in IIS 3.x and 4.x exposes unsafe methods, which allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1012",
        "Description": "SMTP component of Lotus Domino 4.6.1 on AS/400, and possibly other operating systems, allows a remote attacker to crash the mail server via a long string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1013",
        "Description": "named-xfer in AIX 4.1.5 and 4.2.1 allows members of the system group to overwrite system files to gain root access via the -f parameter and a malformed zone file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1014",
        "Description": "Buffer overflow in mail command in Solaris 2.7 and 2.7 allows local users to gain privileges via a long -m argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1015",
        "Description": "Buffer overflow in Apple AppleShare Mail Server 5.0.3 on MacOS 8.1 and earlier allows a remote attacker to cause a denial of service (crash) via a long HELO command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1016",
        "Description": "Microsoft HTML control as used in (1) Internet Explorer 5.0, (2) FrontPage Express, (3) Outlook Express 5, and (4) Eudora, and possibly others, allows remote malicious web site or HTML emails to cause a denial of service (100% CPU consumption) via large HTML form fields such as text inputs in a table cell.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1017",
        "Description": "Seattle Labs Emurl 2.0, and possibly earlier versions, stores e-mail attachments in a specific directory with scripting enabled, which allows a malicious ASP file attachment to execute when the recipient opens the message.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1018",
        "Description": "IPChains in Linux kernels 2.2.10 and earlier does not reassemble IP fragments before checking the header information, which allows a remote attacker to bypass the filtering rules using several fragments with 0 offsets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1019",
        "Description": "SpectroSERVER in Cabletron Spectrum Enterprise Manager 5.0 installs a directory tree with insecure permissions, which allows local users to replace a privileged executable (processd) with a Trojan horse, facilitating a root or Administrator compromise.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1020",
        "Description": "The installation of Novell Netware NDS 5.99 provides an unauthenticated client with Read access for the tree, which allows remote attackers to access sensitive information such as users, groups, and readable objects via CX.EXE and NLIST.EXE.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1021",
        "Description": "NFS on SunOS 4.1 through 4.1.2 ignores the high order 16 bits in a 32 bit UID, which allows a local user to gain root access if the lower 16 bits are set to 0, as fixed by the NFS jumbo patch upgrade.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1022",
        "Description": "serial_ports administrative program in IRIX 4.x and 5.x trusts the user's PATH environmental variable to find and execute the ls program, which allows local users to gain root privileges via a Trojan horse ls program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1023",
        "Description": "useradd in Solaris 7.0 does not properly interpret certain date formats as specified in the \"-e\" (expiration date) argument, which could allow users to login after their accounts have expired.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1024",
        "Description": "ip_print procedure in Tcpdump 3.4a allows remote attackers to cause a denial of service via a packet with a zero length header, which causes an infinite loop and core dump when tcpdump prints the packet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1025",
        "Description": "CDE screen lock program (screenlock) on Solaris 2.6 does not properly lock an unprivileged user's console session when the host is an NIS+ client, which allows others with physical access to login with any string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1026",
        "Description": "aspppd on Solaris 2.5 x86 allows local users to modify arbitrary files and gain root privileges via a symlink attack on the /tmp/.asppp.fifo file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1027",
        "Description": "Solaris 2.6 HW3/98 installs admintool with world-writable permissions, which allows local users to gain privileges by replacing it with a Trojan horse program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1028",
        "Description": "Symantec pcAnywhere 8.0 allows remote attackers to cause a denial of service (CPU utilization) via a large amount of data to port 5631.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1029",
        "Description": "SSH server (sshd2) before 2.0.12 does not properly record login attempts if the connection is closed before the maximum number of tries, allowing a remote attacker to guess the password without showing up in the audit logs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1030",
        "Description": "counter.exe 2.70 allows a remote attacker to cause a denial of service (hang) via an HTTP request that ends in %0A (newline), which causes a malformed entry in the counter log that produces an access violation.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1031",
        "Description": "counter.exe 2.70 allows a remote attacker to cause a denial of service (hang) via a long argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1032",
        "Description": "Vulnerability in LAT/Telnet Gateway (lattelnet) on Ultrix 4.1 and 4.2 allows attackers to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1033",
        "Description": "Microsoft Outlook Express before 4.72.3612.1700 allows a malicious user to send a message that contains a .., which can inadvertently cause Outlook to re-enter POP3 command mode and cause the POP3 session to hang.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1034",
        "Description": "Vulnerability in login in AT&T System V Release 4 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1035",
        "Description": "IIS 3.0 and 4.0 on x86 and Alpha allows remote attackers to cause a denial of service (hang) via a malformed GET request, aka the IIS \"GET\" vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1036",
        "Description": "COPS 1.04 allows local users to overwrite or create arbitrary files via a symlink attack on temporary files in (1) res_diff, (2) ca.src, and (3) mail.chk.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1037",
        "Description": "rex.satan in SATAN 1.1.1 allows local users to overwrite arbitrary files via a symlink attack on the /tmp/rex.$$ file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1038",
        "Description": "Tiger 2.2.3 allows local users to overwrite arbitrary files via a symlink attack on various temporary files in Tiger's default working directory, as defined by the WORKDIR variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1039",
        "Description": "Vulnerability in (1) diskalign and (2) diskperf in IRIX 6.4 patches 2291 and 2848 allow a local user to create root-owned files leading to a root compromise.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1040",
        "Description": "Vulnerabilities in (1) ipxchk and (2) ipxlink in NetWare Client 1.0 on IRIX 6.3 and 6.4 allows local users to gain root access via a modified IFS environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1041",
        "Description": "Buffer overflow in mscreen on SCO OpenServer 5.0 and SCO UNIX 3.2v4 allows a local user to gain root access via (1) a long TERM environmental variable and (2) a long entry in the .mscreenrc file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1042",
        "Description": "Cisco Resource Manager (CRM) 1.0 and 1.1 creates world-readable log files and temporary files, which may expose sensitive information, to local users such as user IDs, passwords and SNMP community strings.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1043",
        "Description": "Microsoft Exchange Server 5.5 and 5.0 does not properly handle (1) malformed NNTP data, or (2) malformed SMTP data, which allows remote attackers to cause a denial of service (application error).",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1044",
        "Description": "Vulnerability in Advanced File System Utility (advfs) in Digital UNIX 4.0 through 4.0d allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1045",
        "Description": "pnserver in RealServer 5.0 and earlier allows remote attackers to cause a denial of service by sending a short, malformed request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1046",
        "Description": "Buffer overflow in IMonitor in IMail 5.0 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long string to port 8181.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1047",
        "Description": "When BSDI patches for Gauntlet 5.0 BSDI are installed in a particular order, Gauntlet allows remote attackers to bypass firewall access restrictions, and does not log the activities.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1048",
        "Description": "Buffer overflow in bash 2.0.0, 1.4.17, and other versions allows local attackers to gain privileges by creating an extremely large directory name, which is inserted into the password prompt via the \\w option in the PS1 environmental variable when another user changes into that directory.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1049",
        "Description": "ARCserve NT agents use weak encryption (XOR) for passwords, which allows remote attackers to sniff the authentication request to port 6050 and decrypt the password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1050",
        "Description": "Directory traversal vulnerability in Matt Wright FormHandler.cgi script allows remote attackers to read arbitrary files via (1) a .. (dot dot) in the reply_message_attach attachment parameter, or (2) by specifying the filename as a template.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1051",
        "Description": "Default configuration in Matt Wright FormHandler.cgi script allows arbitrary directories to be used for attachments, and only restricts access to the /etc/ directory, which allows remote attackers to read arbitrary files via the reply_message_attach attachment parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1052",
        "Description": "Microsoft FrontPage stores form results in a default location in /_private/form_results.txt, which is world-readable and accessible in the document root, which allows remote attackers to read possibly sensitive information submitted by other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1053",
        "Description": "guestbook.pl cleanses user-inserted SSI commands by removing text between \"<!--\" and \"-->\" separators, which allows remote attackers to execute arbitrary commands when guestbook.pl is run on Apache 1.3.9 and possibly other versions, since Apache allows other closing sequences besides \"-->\".",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1054",
        "Description": "The default configuration of FLEXlm license manager 6.0d, and possibly other versions, allows remote attackers to shut down the server via the lmdown command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1055",
        "Description": "Microsoft Excel 97 does not warn the user before executing worksheet functions, which could allow attackers to execute arbitrary commands by using the CALL function to execute a malicious DLL, aka the Excel \"CALL Vulnerability.\"",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1057",
        "Description": "VMS 4.0 through 5.3 allows local users to gain privileges via the ANALYZE/PROCESS_DUMP dcl command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1058",
        "Description": "Buffer overflow in Vermillion FTP Daemon VFTPD 1.23 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via several long CWD commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1059",
        "Description": "Vulnerability in rexec daemon (rexecd) in AT&T TCP/IP 4.0 for various SVR4 systems allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1060",
        "Description": "Buffer overflow in Tetrix TetriNet daemon 1.13.16 allows remote attackers to cause a denial of service and possibly execute arbitrary commands by connecting to port 31457 from a host with a long DNS hostname.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1061",
        "Description": "HP Laserjet printers with JetDirect cards, when configured with TCP/IP, can be configured without a password, which allows remote attackers to connect to the printer and change its IP address or disable logging.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1062",
        "Description": "HP Laserjet printers with JetDirect cards, when configured with TCP/IP, allow remote attackers to bypass print filters by directly sending PostScript documents to TCP ports 9099 and 9100.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1063",
        "Description": "CDomain whois_raw.cgi whois CGI script allows remote attackers to execute arbitrary commands via shell metacharacters in the fqdn parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1064",
        "Description": "Multiple buffer overflows in WindowMaker 0.52 through 0.60.0 allow attackers to cause a denial of service and possibly execute arbitrary commands by executing WindowMaker with a long program name (argv[0]).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1065",
        "Description": "Palm Pilot HotSync Manager 3.0.4 in Windows 98 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long string to port 14238 while the manager is in network mode.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1066",
        "Description": "Quake 1 server responds to an initial UDP game connection request with a large amount of traffic, which allows remote attackers to use the server as an amplifier in a \"Smurf\" style attack on another host, by spoofing the connection request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1067",
        "Description": "SGI MachineInfo CGI program, installed by default on some web servers, prints potentially sensitive system status information, which could be used by remote attackers for information gathering activities.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1068",
        "Description": "Oracle Webserver 2.1, when serving PL/SQL stored procedures, allows remote attackers to cause a denial of service via a long HTTP GET request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1069",
        "Description": "Directory traversal vulnerability in carbo.dll in iCat Carbo Server 3.0.0 allows remote attackers to read arbitrary files via a .. (dot dot) in the icatcommand parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1070",
        "Description": "Buffer overflow in ping CGI program in Xylogics Annex terminal service allows remote attackers to cause a denial of service via a long query parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1071",
        "Description": "Excite for Web Servers (EWS) 1.1 installs the Architext.conf authentication file with world-writeable permissions, which allows local users to gain access to Excite accounts by modifying the file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1072",
        "Description": "Excite for Web Servers (EWS) 1.1 allows local users to gain privileges by obtaining the encrypted password from the world-readable Architext.conf authentication file and replaying the encrypted password in an HTTP request to AT-generated.cgi or AT-admin.cgi.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1073",
        "Description": "Excite for Web Servers (EWS) 1.1 records the first two characters of a plaintext password in the beginning of the encrypted password, which makes it easier for an attacker to guess passwords via a brute force or dictionary attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1074",
        "Description": "Webmin before 0.5 does not restrict the number of invalid passwords that are entered for a valid username, which could allow remote attackers to gain privileges via brute force password cracking.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1075",
        "Description": "inetd in AIX 4.1.5 dynamically assigns a port N when starting ttdbserver (ToolTalk server), but also inadvertently listens on port N-1 without passing control to ttdbserver, which allows remote attackers to cause a denial of service via a large number of connections to port N-1, which are not properly closed by inetd.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1076",
        "Description": "Idle locking function in MacOS 9 allows local users to bypass the password protection of idled sessions by selecting the \"Log Out\" option and selecting a \"Cancel\" option in the dialog box for an application that attempts to verify that the user wants to log out, which returns the attacker into the locked session.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1077",
        "Description": "Idle locking function in MacOS 9 allows local attackers to bypass the password protection of idled sessions via the programmer's switch or CMD-PWR keyboard sequence, which brings up a debugger that the attacker can use to disable the lock.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1078",
        "Description": "WS_FTP Pro 6.0 uses weak encryption for passwords in its initialization files, which allows remote attackers to easily decrypt the passwords and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1079",
        "Description": "Vulnerability in ptrace in AIX 4.3 allows local users to gain privileges by attaching to a setgid program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1080",
        "Description": "rmmount in SunOS 5.7 may mount file systems without the nosuid flag set, contrary to the documentation and its use in previous versions of SunOS, which could allow local users with physical access to gain root privileges by mounting a floppy or CD-ROM that contains a setuid program and running volcheck, when the file systems do not have the nosuid option specified in rmmount.conf.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1081",
        "Description": "Vulnerability in files.pl script in Novell WebServer Examples Toolkit 2 allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1082",
        "Description": "Directory traversal vulnerability in Jana proxy web server 1.40 allows remote attackers to ready arbitrary files via a \"......\" (modified dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1083",
        "Description": "Directory traversal vulnerability in Jana proxy web server 1.45 allows remote attackers to ready arbitrary files via a .. (dot dot) attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1084",
        "Description": "The \"AEDebug\" registry key is installed with insecure permissions, which allows local users to modify the key to specify a Trojan Horse debugger which is automatically executed on a system crash.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1085",
        "Description": "SSH 1.2.25, 1.2.23, and other versions, when used in in CBC (Cipher Block Chaining) or CFB (Cipher Feedback 64 bits) modes, allows remote attackers to insert arbitrary data into an existing stream between an SSH client and server by using a known plaintext attack and computing a valid CRC-32 checksum for the packet, aka the \"SSH insertion attack.\"",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1086",
        "Description": "Novell 5 and earlier, when running over IPX with a packet signature level less than 3, allows remote attackers to gain administrator privileges by spoofing the MAC address in IPC fragmented packets that make NetWare Core Protocol (NCP) calls.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1087",
        "Description": "Internet Explorer 4 treats a 32-bit number (\"dotless IP address\") in the a URL as the hostname instead of an IP address, which causes IE to apply Local Intranet Zone settings to the resulting web page, allowing remote malicious web servers to conduct unauthorized activities by using URLs that contain the dotless IP address for their server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1088",
        "Description": "Vulnerability in chsh command in HP-UX 9.X through 10.20 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1089",
        "Description": "Buffer overflow in chfn command in HP-UX 9.X through 10.20 allows local users to gain privileges via a long command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1090",
        "Description": "The default configuration of NCSA Telnet package for Macintosh and PC enables FTP, even though it does not include an \"ftp=yes\" line, which allows remote attackers to read and modify arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1091",
        "Description": "UNIX news readers tin and rtin create the /tmp/.tin_log file with insecure permissions and follow symlinks, which allows attackers to modify the permissions of files writable by the user via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1092",
        "Description": "tin 1.40 creates the .tin directory with insecure permissions, which allows local users to read passwords from the .inputhistory file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1093",
        "Description": "Buffer overflow in the Window.External function in the JScript Scripting Engine in Internet Explorer 4.01 SP1 and earlier allows remote attackers to execute arbitrary commands via a malicious web page.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1094",
        "Description": "Buffer overflow in Internet Explorer 4.01 and earlier allows remote attackers to execute arbitrary commands via a long URL with the \"mk:\" protocol, aka the \"MK Overrun security issue.\"",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1095",
        "Description": "sort creates temporary files and follows symbolic links, which allows local users to modify arbitrary files that are writable by the user running sort, as observed in updatedb and other programs that use sort.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1096",
        "Description": "Buffer overflow in kscreensaver in KDE klock allows local users to gain root privileges via a long HOME environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1097",
        "Description": "Microsoft NetMeeting 2.1 allows one client to read the contents of another client's clipboard via a CTRL-C in the chat box when the box is empty.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1098",
        "Description": "Vulnerability in BSD Telnet client with encryption and Kerberos 4 authentication allows remote attackers to decrypt the session via sniffing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1099",
        "Description": "Kerberos 4 allows remote attackers to obtain sensitive information via a malformed UDP packet that generates an error string that inadvertently includes the realm name and the last user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1100",
        "Description": "Cisco PIX Private Link 4.1.6 and earlier does not properly process certain commands in the configuration file, which reduces the effective key length of the DES key to 48 bits instead of 56 bits, which makes it easier for an attacker to find the proper key via a brute force attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1101",
        "Description": "Kabsoftware Lydia utility uses weak encryption to store user passwords in the lydia.ini file, which allows local users to easily decrypt the passwords and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1102",
        "Description": "lpr on SunOS 4.1.1, BSD 4.3, A/UX 2.0.1, and other BSD-based operating systems allows local users to create or overwrite arbitrary files via a symlink attack that is triggered after invoking lpr 1000 times.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1103",
        "Description": "dxconsole in DEC OSF/1 3.2C and earlier allows local users to read arbitrary files by specifying the file with the -file parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1104",
        "Description": "Windows 95 uses weak encryption for the password list (.pwl) file used when password caching is enabled, which allows local users to gain privileges by decrypting the passwords.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1105",
        "Description": "Windows 95, when Remote Administration and File Sharing for NetWare Networks is enabled, creates a share (C$) when an administrator logs in remotely, which allows remote attackers to read arbitrary files by mapping the network drive.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1106",
        "Description": "Buffer overflow in kppp in KDE allows local users to gain root access via a long -c (account_name) command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1107",
        "Description": "Buffer overflow in kppp in KDE allows local users to gain root access via a long PATH environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1109",
        "Description": "Sendmail before 8.10.0 allows remote attackers to cause a denial of service by sending a series of ETRN commands then disconnecting from the server, while Sendmail continues to process the commands after the connection has been terminated.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1110",
        "Description": "Windows Media Player ActiveX object as used in Internet Explorer 5.0 returns a specific error code when a file does not exist, which allows remote malicious web sites to determine the existence of files on the client.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1111",
        "Description": "Vulnerability in StackGuard before 1.21 allows remote attackers to bypass the Random and Terminator Canary security mechanisms by using a non-linear attack which directly modifies a pointer to a return address instead of using a buffer overflow to reach the return address entry itself.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1112",
        "Description": "Buffer overflow in IrfanView32 3.07 and earlier allows attackers to execute arbitrary commands via a long string after the \"8BPS\" image type in a Photo Shop image header.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1113",
        "Description": "Buffer overflow in Eudora Internet Mail Server (EIMS) 2.01 and earlier on MacOS systems allows remote attackers to cause a denial of service via a long USER command to port 106.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1114",
        "Description": "Buffer overflow in Korn Shell (ksh) suid_exec program on IRIX 6.x and earlier, and possibly other operating systems, allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1115",
        "Description": "Vulnerability in the /etc/suid_exec program in HP Apollo Domain/OS sr10.2 and sr10.3 beta, related to the Korn Shell (ksh).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1116",
        "Description": "Vulnerability in runpriv in Indigo Magic System Administration subsystem of SGI IRIX 6.3 and 6.4 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1117",
        "Description": "lquerypv in AIX 4.1 and 4.2 allows local users to read arbitrary files by specifying the file in the -h command line parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1118",
        "Description": "ndd in Solaris 2.6 allows local users to cause a denial of service by modifying certain TCP/IP parameters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1119",
        "Description": "FTP installation script anon.ftp in AIX insecurely configures anonymous FTP, which allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1120",
        "Description": "netprint in SGI IRIX 6.4 and earlier trusts the PATH environmental variable for finding and executing the disable program, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1121",
        "Description": "The default configuration for UUCP in AIX before 3.2 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1122",
        "Description": "Vulnerability in restore in SunOS 4.0.3 and earlier allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1123",
        "Description": "The installation of Sun Source (sunsrc) tapes allows local users to gain root privileges via setuid root programs (1) makeinstall or (2) winstall.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1124",
        "Description": "HTTP Client application in ColdFusion allows remote attackers to bypass access restrictions for web pages on other ports by providing the target page to the mainframeset.cfm application, which requests the page from the server, making it look like the request is coming from the local host.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1125",
        "Description": "Oracle Webserver 2.1 and earlier runs setuid root, but the configuration file is owned by the oracle account, which allows any local or remote attacker who obtains access to the oracle account to gain privileges or modify arbitrary files by modifying the configuration file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1126",
        "Description": "Cisco Resource Manager (CRM) 1.1 and earlier creates certain files with insecure permissions that allow local users to obtain sensitive configuration information including usernames, passwords, and SNMP community strings, from (1) swim_swd.log, (2) swim_debug.log, (3) dbi_debug.log, and (4) temporary files whose names begin with \"DPR_\".",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1127",
        "Description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1128",
        "Description": "Internet Explorer 3.01 on Windows 95 allows remote malicious web sites to execute arbitrary commands via a .isp file, which is automatically downloaded and executed without prompting the user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1129",
        "Description": "Cisco Catalyst 2900 Virtual LAN (VLAN) switches allow remote attackers to inject 802.1q frames into another VLAN by forging the VLAN identifier in the trunking tag.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1130",
        "Description": "Default configuration of the search engine in Netscape Enterprise Server 3.5.1, and possibly other versions, allows remote attackers to read the source of JHTML files by specifying a search command using the HTML-tocrec-demo1.pat pattern file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1131",
        "Description": "Buffer overflow in OSF Distributed Computing Environment (DCE) security demon (secd) in IRIX 6.4 and earlier allows attackers to cause a denial of service via a long principal, group, or organization.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1132",
        "Description": "Windows NT 4.0 allows remote attackers to cause a denial of service (crash) via extra source routing data such as (1) a Routing Information Field (RIF) field with a hop count greater than 7, or (2) a list containing duplicate Token Ring IDs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1133",
        "Description": "HP-UX 9.x and 10.x running X windows may allow local attackers to gain privileges via (1) vuefile, (2) vuepad, (3) dtfile, or (4) dtpad, which do not authenticate users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1134",
        "Description": "Vulnerability in Vue 3.0 in HP 9.x allows local users to gain root privileges, as fixed by PHSS_4038, PHSS_4055, and PHSS_4066.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1135",
        "Description": "Vulnerability in VUE 3.0 in HP 9.x allows local users to gain root privileges, as fixed by PHSS_4994 and PHSS_5438.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1136",
        "Description": "Vulnerability in Predictive on HP-UX 11.0 and earlier, and MPE/iX 5.5 and earlier, allows attackers to compromise data transfer for Predictive messages (using e-mail or modem) between customer and Response Center Predictive systems.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1137",
        "Description": "The permissions for the /dev/audio device on Solaris 2.2 and earlier, and SunOS 4.1.x, allow any local user to read from the device, which could be used by an attacker to monitor conversations happening near a machine that has a microphone.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1138",
        "Description": "SCO UNIX System V/386 Release 3.2, and other SCO products, installs the home directories (1) /tmp for the dos user, and (2) /usr/tmp for the asg user, which allows other users to gain access to those accounts since /tmp and /usr/tmp are world-writable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1139",
        "Description": "Character-Terminal User Environment (CUE) in HP-UX 11.0 and earlier allows local users to overwrite arbitrary files and gain root privileges via a symlink attack on the IOERROR.mytty file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1140",
        "Description": "Buffer overflow in CrackLib 2.5 may allow local users to gain root privileges via a long GECOS field.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1141",
        "Description": "Ascom Timeplex router allows remote attackers to obtain sensitive information or conduct unauthorized activities by entering debug mode through a sequence of CTRL-D characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1142",
        "Description": "SunOS 4.1.2 and earlier allows local users to gain privileges via \"LD_*\" environmental variables to certain dynamically linked setuid or setgid programs such as (1) login, (2) su, or (3) sendmail, that change the real and effective user ids to the same user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1143",
        "Description": "Vulnerability in runtime linker program rld in SGI IRIX 6.x and earlier allows local users to gain privileges via setuid and setgid programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1144",
        "Description": "Certain files in MPower in HP-UX 10.x are installed with insecure permissions, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1145",
        "Description": "Vulnerability in Glance programs in GlancePlus for HP-UX 10.20 and earlier allows local users to access arbitrary files and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1146",
        "Description": "Vulnerability in Glance and gpm programs in GlancePlus for HP-UX 9.x and earlier allows local users to access arbitrary files and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1147",
        "Description": "Buffer overflow in Platinum Policy Compliance Manager (PCM) 7.0 allows remote attackers to execute arbitrary commands via a long string to the Agent port (1827), which is handled by smaxagent.exe.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1148",
        "Description": "FTP service in IIS 4.0 and earlier allows remote attackers to cause a denial of service (resource exhaustion) via many passive (PASV) connections at the same time.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1149",
        "Description": "Buffer overflow in CSM Proxy 4.1 allows remote attackers to cause a denial of service (crash) via a long string to the FTP port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1150",
        "Description": "Livingston Portmaster routers running ComOS use the same initial sequence number (ISN) for TCP connections, which allows remote attackers to conduct spoofing and hijack TCP sessions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1151",
        "Description": "Compaq/Microcom 6000 Access Integrator does not cause a session timeout after prompting for a username or password, which allows remote attackers to cause a denial of service by connecting to the integrator without providing a username or password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1152",
        "Description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1153",
        "Description": "HAMcards Postcard CGI script 1.0 allows remote attackers to execute arbitrary commands via shell metacharacters in the recipient email address.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1154",
        "Description": "LakeWeb Filemail CGI script allows remote attackers to execute arbitrary commands via shell metacharacters in the recipient email address.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1155",
        "Description": "LakeWeb Mail List CGI script allows remote attackers to execute arbitrary commands via shell metacharacters in the recipient email address.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1156",
        "Description": "BisonWare FTP Server 4.1 and earlier allows remote attackers to cause a denial of service via a malformed PORT command that contains a non-numeric character and a large number of carriage returns.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1157",
        "Description": "Tcpip.sys in Windows NT 4.0 before SP4 allows remote attackers to cause a denial of service via an ICMP Subnet Mask Address Request packet, when certain multiple IP addresses are bound to the same network interface.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1158",
        "Description": "Buffer overflow in (1) pluggable authentication module (PAM) on Solaris 2.5.1 and 2.5 and (2) unix_scheme in Solaris 2.4 and 2.3 allows local users to gain root privileges via programs that use these modules such as passwd, yppasswd, and nispasswd.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1159",
        "Description": "SSH 2.0.11 and earlier allows local users to request remote forwarding from privileged ports without being root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1160",
        "Description": "Vulnerability in ftpd/kftpd in HP-UX 10.x and 9.x allows local and possibly remote users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1161",
        "Description": "Vulnerability in ppl in HP-UX 10.x and earlier allows local users to gain root privileges by forcing ppl to core dump.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1162",
        "Description": "Vulnerability in passwd in SCO UNIX 4.0 and earlier allows attackers to cause a denial of service by preventing users from being able to log into the system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1163",
        "Description": "Vulnerability in HP Series 800 S/X/V Class servers allows remote attackers to gain access to the S/X/V Class console via the Service Support Processor (SSP) Teststation.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1164",
        "Description": "Microsoft Outlook client allows remote attackers to cause a denial of service by sending multiple email messages with the same X-UIDL headers, which causes Outlook to hang.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1165",
        "Description": "GNU fingerd 1.37 does not properly drop privileges before accessing user information, which could allow local users to (1) gain root privileges via a malicious program in the .fingerrc file, or (2) read arbitrary files via symbolic links from .plan, .forward, or .project files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1166",
        "Description": "Linux 2.0.37 does not properly encode the Custom segment limit, which allows local users to gain root privileges by accessing and modifying kernel memory.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1167",
        "Description": "Cross-site scripting vulnerability in Third Voice Web annotation utility allows remote users to read sensitive data and generate fake web pages for other Third Voice users by injecting malicious Javascript into an annotation.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1168",
        "Description": "install.iss installation script for Internet Security Scanner (ISS) for Linux, version 5.3, allows local users to change the permissions of arbitrary files via a symlink attack on a temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1169",
        "Description": "nobo 1.2 allows remote attackers to cause a denial of service (crash) via a series of large UDP packets.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1170",
        "Description": "IPswitch IMail allows local users to gain additional privileges and modify or add mail accounts by setting the \"flags\" registry key to 1920.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1171",
        "Description": "IPswitch WS_FTP allows local users to gain additional privileges and modify or add mail accounts by setting the \"flags\" registry key to 1920.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1172",
        "Description": "By design, Maximizer Enterprise 4 calendar and address book program allows arbitrary users to modify the calendar of other users when the calendar is being shared.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1173",
        "Description": "Corel Word Perfect 8 for Linux creates a temporary working directory with world-writable permissions, which allows local users to (1) modify Word Perfect behavior by modifying files in the working directory, or (2) modify files of other users via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1174",
        "Description": "ZIP drive for Iomega ZIP-100 disks allows attackers with physical access to the drive to bypass password protection by inserting a known disk with a known password, waiting for the ZIP drive to power down, manually replacing the known disk with the target disk, and using the known password to access the target disk.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1175",
        "Description": "Web Cache Control Protocol (WCCP) in Cisco Cache Engine for Cisco IOS 11.2 and earlier does not use authentication, which allows remote attackers to redirect HTTP traffic to arbitrary hosts via WCCP packets to UDP port 2048.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1176",
        "Description": "Buffer overflow in cidentd ident daemon allows local users to gain root privileges via a long line in the .authlie script.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1177",
        "Description": "Directory traversal vulnerability in nph-publish before 1.2 allows remote attackers to overwrite arbitrary files via a .. (dot dot) in the pathname for an upload operation.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1178",
        "Description": "Sambar Server 4.1 beta allows remote attackers to obtain sensitive information about the server via an HTTP request for the dumpenv.pl script.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1179",
        "Description": "Vulnerability in man.sh CGI script, included in May 1998 issue of SysAdmin Magazine, allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1180",
        "Description": "O'Reilly WebSite 1.1e and Website Pro 2.0 allows remote attackers to execute arbitrary commands via shell metacharacters in an argument to (1) args.cmd or (2) args.bat.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1181",
        "Description": "Vulnerability in On-Line Customer Registration software for IRIX 6.2 through 6.4 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1182",
        "Description": "Buffer overflow in run-time linkers (1) ld.so or (2) ld-linux.so for Linux systems allows local users to gain privileges by calling a setuid program with a long program name (argv[0]) and forcing ld.so/ld-linux.so to report an error.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1183",
        "Description": "System Manager sysmgr GUI in SGI IRIX 6.4 and 6.3 allows remote attackers to execute commands by providing a trojan horse (1) runtask or (2) runexec descriptor file, which is used to execute a System Manager Task when the user's Mailcap entry supports the x-sgi-task or x-sgi-exec type.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1184",
        "Description": "Buffer overflow in Elm 2.4 and earlier allows local users to gain privileges via a long TERM environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1185",
        "Description": "Buffer overflow in SCO mscreen allows local users to gain root privileges via a long terminal entry (TERM) in the .mscreenrc file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1186",
        "Description": "rxvt, when compiled with the PRINT_PIPE option in various Linux operating systems including Linux Slackware 3.0 and RedHat 2.1, allows local users to gain root privileges by specifying a malicious program using the -print-pipe command line parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1187",
        "Description": "Pine before version 3.94 allows local users to gain privileges via a symlink attack on a lockfile that is created when a user receives new mail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1188",
        "Description": "mysqld in MySQL 3.21 creates log files with world-readable permissions, which allows local users to obtain passwords for users who are added to the user database.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1189",
        "Description": "Buffer overflow in Netscape Navigator/Communicator 4.7 for Windows 95 and Windows 98 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long argument after the ? character in a URL that references an .asp, .cgi, .html, or .pl file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1190",
        "Description": "Buffer overflow in POP3 server of Admiral Systems EmailClub 1.05 allows remote attackers to execute arbitrary commands via a long \"From\" header in an e-mail message.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1191",
        "Description": "Buffer overflow in chkey in Solaris 2.5.1 and earlier allows local users to gain root privileges via a long command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1192",
        "Description": "Buffer overflow in eeprom in Solaris 2.5.1 and earlier allows local users to gain root privileges via a long command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1193",
        "Description": "The \"me\" user in NeXT NeXTstep 2.1 and earlier has wheel group privileges, which could allow the me user to use the su command to become root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1194",
        "Description": "chroot in Digital Ultrix 4.1 and 4.0 is insecurely installed, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1195",
        "Description": "NAI VirusScan NT 4.0.2 does not properly modify the scan.dat virus definition file during an update via FTP, but it reports that the update was successful, which could cause a system administrator to believe that the definitions have been updated correctly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1196",
        "Description": "Hummingbird Exceed X version 5 allows remote attackers to cause a denial of service via malformed data to port 6000.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1197",
        "Description": "TIOCCONS in SunOS 4.1.1 does not properly check the permissions of a user who tries to redirect console output and input, which could allow a local user to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1198",
        "Description": "BuildDisk program on NeXT systems before 2.0 does not prompt users for the root password, which allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1199",
        "Description": "Apache WWW server 1.3.1 and earlier allows remote attackers to cause a denial of service (resource exhaustion) via a large number of MIME headers with the same name, aka the \"sioux\" vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1200",
        "Description": "Vintra SMTP MailServer allows remote attackers to cause a denial of service via a malformed \"EXPN *@\" command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1201",
        "Description": "Windows 95 and Windows 98 systems, when configured with multiple TCP/IP stacks bound to the same MAC address, allow remote attackers to cause a denial of service (traffic amplification) via a certain ICMP echo (ping) packet, which causes all stacks to send a ping response, aka TCP Chorusing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1202",
        "Description": "StarTech (1) POP3 proxy server and (2) telnet server allows remote attackers to cause a denial of service via a long USER command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1203",
        "Description": "Multilink PPP for ISDN dialup users in Ascend before 4.6 allows remote attackers to cause a denial of service via a spoofed endpoint identifier.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1204",
        "Description": "Check Point Firewall-1 does not properly handle certain restricted keywords (e.g., Mail, auth, time) in user-defined objects, which could produce a rule with a default \"ANY\" address and result in access to more systems than intended by the administrator.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1205",
        "Description": "nettune in HP-UX 10.01 and 10.00 is installed setuid root, which allows local users to cause a denial of service by modifying critical networking configuration information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1206",
        "Description": "SystemSoft SystemWizard package in HP Pavilion PC with Windows 98, and possibly other platforms and operating systems, installs two ActiveX controls that are marked as safe for scripting, which allows remote attackers to execute arbitrary commands via a malicious web page that references (1) the Launch control, or (2) the RegObj control.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1207",
        "Description": "Buffer overflow in web-admin tool in NetXRay 2.6 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long HTTP request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1208",
        "Description": "Buffer overflow in ping in AIX 4.2 and earlier allows local users to gain root privileges via a long command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1209",
        "Description": "Vulnerability in scoterm in SCO OpenServer 5.0 and SCO Open Desktop/Open Server 3.0 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1210",
        "Description": "xterm in Digital UNIX 4.0B *with* patch kit 5 allows local users to overwrite arbitrary files via a symlink attack on a core dump file, which is created when xterm is called with a DISPLAY environmental variable set to a display that xterm cannot access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1211",
        "Description": "Vulnerability in in.telnetd in SunOS 4.1.1 and earlier allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1212",
        "Description": "Vulnerability in in.rlogind in SunOS 4.0.3 and 4.0.3c allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1213",
        "Description": "Vulnerability in telnet service in HP-UX 10.30 allows attackers to cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1214",
        "Description": "The asynchronous I/O facility in 4.4 BSD kernel does not check user credentials when setting the recipient of I/O notification, which allows local users to cause a denial of service by using certain ioctl and fcntl calls to cause the signal to be sent to an arbitrary process ID.",
        "CWE": [
            {
                "CWE": "CWE-255",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1215",
        "Description": "LOGIN.EXE program in Novell Netware 4.0 and 4.01 temporarily writes user name and password information to disk, which could allow local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1216",
        "Description": "Cisco routers 9.17 and earlier allow remote attackers to bypass security restrictions via certain IP source routed packets that should normally be denied using the \"no ip source-route\" command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1217",
        "Description": "The PATH in Windows NT includes the current working directory (.), which could allow local users to gain privileges by placing Trojan horse programs with the same name as commonly used system programs into certain directories.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1218",
        "Description": "Vulnerability in finger in Commodore Amiga UNIX 2.1p2a and earlier allows local users to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1219",
        "Description": "Vulnerability in sgihelp in the SGI help system and print manager in IRIX 5.2 and earlier allows local users to gain root privileges, possibly through the clogin command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1220",
        "Description": "Majordomo 1.94.3 and earlier allows remote attackers to execute arbitrary commands when the advertise or noadvertise directive is used in a configuration file, via shell metacharacters in the Reply-To header.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1221",
        "Description": "dxchpwd in Digital Unix (OSF/1) 3.x allows local users to modify arbitrary files via a symlink attack on the dxchpwd.log file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1222",
        "Description": "Netbt.sys in Windows NT 4.0 allows remote malicious DNS servers to cause a denial of service (crash) by returning 0.0.0.0 as the IP address for a DNS host name lookup.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1223",
        "Description": "IIS 3.0 allows remote attackers to cause a denial of service via a request to an ASP page in which the URL contains a large number of / (forward slash) characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1224",
        "Description": "IMAP 4.1 BETA, and possibly other versions, does not properly handle the SIGABRT (abort) signal, which allows local users to crash the server (imapd) via certain sequences of commands, which causes a core dump that may contain sensitive password information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1225",
        "Description": "rpc.mountd on Linux, Ultrix, and possibly other operating systems, allows remote attackers to determine the existence of a file on the server by attempting to mount that file, which generates different error messages depending on whether the file exists or not.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1226",
        "Description": "Netscape Communicator 4.7 and earlier allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long certificate key.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1227",
        "Description": "Ethereal allows local users to overwrite arbitrary files via a symlink attack on the packet capture file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1228",
        "Description": "Various modems that do not implement a guard time, or are configured with a guard time of 0, can allow remote attackers to execute arbitrary modem commands such as ATH, ATH0, etc., via a \"+++\" sequence that appears in ICMP packets, the subject of an e-mail message, IRC commands, and others.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1229",
        "Description": "Quake 2 server 3.13 on Linux does not properly check file permissions for the config.cfg configuration file, which allows local users to read arbitrary files via a symlink from config.cfg to the target file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1230",
        "Description": "Quake 2 server allows remote attackers to cause a denial of service via a spoofed UDP packet with a source address of 127.0.0.1, which causes the server to attempt to connect to itself.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1231",
        "Description": "ssh 2.0.12, and possibly other versions, allows valid user names to attempt to enter the correct password multiple times, but only prompts an invalid user name for a password once, which allows remote attackers to determine user account names on the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1232",
        "Description": "Untrusted search path vulnerability in day5datacopier in SGI IRIX 6.2 allows local users to execute arbitrary commands via a modified PATH environment variable that points to a malicious cp program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1233",
        "Description": "IIS 4.0 does not properly restrict access for the initial session request from a user's IP address if the address does not resolve to a DNS domain, aka the \"Domain Resolution\" vulnerability.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1234",
        "Description": "LSA (LSASS.EXE) in Windows NT 4.0 allows remote attackers to cause a denial of service via a NULL policy handle in a call to (1) SamrOpenDomain, (2) SamrEnumDomainUsers, and (3) SamrQueryDomainInfo.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1235",
        "Description": "Internet Explorer 5.0 records the username and password for FTP servers in the URL history, which could allow (1) local users to read the information from another user's index.dat, or (2) people who are physically observing (\"shoulder surfing\") another user to read the information from the status bar when the user moves the mouse over a link.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1236",
        "Description": "Internet Anywhere Mail Server 2.3.1 stores passwords in plaintext in the msgboxes.dbf file, which could allow local users to gain privileges by extracting the passwords from msgboxes.dbf.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1237",
        "Description": "Multiple buffer overflows in smbvalid/smbval SMB authentication library, as used in Apache::AuthenSmb and possibly other modules, allows remote attackers to execute arbitrary commands via (1) a long username, (2) a long password, and (3) other unspecified methods.",
        "CWE": [
            {
                "CWE": "CWE-120",
                "CWE Description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow."
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1238",
        "Description": "Vulnerability in CORE-DIAG fileset in HP message catalog in HP-UX 9.05 and earlier allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1239",
        "Description": "HP-UX 9.x does not properly enable the Xauthority mechanism in certain conditions, which could allow local users to access the X display even when they have not explicitly been authorized to do so.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1240",
        "Description": "Buffer overflow in cddbd CD database server allows remote attackers to execute arbitrary commands via a long log message.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1241",
        "Description": "Internet Explorer, with a security setting below Medium, allows remote attackers to execute arbitrary commands via a malicious web page that uses the FileSystemObject ActiveX object.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1242",
        "Description": "Vulnerability in subnetconfig in HP-UX 9.01 and 9.0 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1243",
        "Description": "SGI Desktop Permissions Tool in IRIX 6.0.1 and earlier allows local users to modify permissions for arbitrary files and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1244",
        "Description": "IPFilter 3.2.3 through 3.2.10 allows local users to modify arbitrary files via a symlink attack on the saved output file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1245",
        "Description": "vacm ucd-snmp SNMP server, version 3.52, does not properly disable access to the public community string, which could allow remote attackers to obtain sensitive information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1246",
        "Description": "Direct Mailer feature in Microsoft Site Server 3.0 saves user domain names and passwords in plaintext in the TMLBQueue network share, which has insecure default permissions, allowing remote attackers to read the passwords and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1247",
        "Description": "Vulnerability in HP Camera component of HP DCE/9000 in HP-UX 9.x allows attackers to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1248",
        "Description": "Vulnerability in Support Watch (aka SupportWatch) in HP-UX 8.0 through 9.0 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1249",
        "Description": "movemail in HP-UX 10.20 has insecure permissions, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1250",
        "Description": "Vulnerability in CGI program in the Lasso application by Blue World, as used on WebSTAR and other servers, allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1251",
        "Description": "Vulnerability in direct audio user space code on HP-UX 10.20 and 10.10 allows local users to cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1252",
        "Description": "Vulnerability in a certain system call in SCO UnixWare 2.0.x and 2.1.0 allows local users to access arbitrary files and gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1253",
        "Description": "Vulnerability in a kernel error handling routine in SCO OpenServer 5.0.2 and earlier, and SCO Internet FastStart 1.0, allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1254",
        "Description": "Windows 95, 98, and NT 4.0 allow remote attackers to cause a denial of service by spoofing ICMP redirect messages from a router, which causes Windows to change its routing tables.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1255",
        "Description": "Hyperseek allows remote attackers to modify the hyperseek configuration by directly calling the admin.cgi program with an edit_file action parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1256",
        "Description": "Oracle Database Assistant 1.0 in Oracle 8.0.3 Enterprise Edition stores the database master password in plaintext in the spoolmain.log file when a new database is created, which allows local users to obtain the password from that file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1257",
        "Description": "Xyplex terminal server 6.0.1S1, and possibly other versions, allows remote attackers to bypass the password prompt by entering (1) a CTRL-Z character, or (2) a ? (question mark).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1258",
        "Description": "rpc.pwdauthd in SunOS 4.1.1 and earlier does not properly prevent remote access to the daemon, which allows remote attackers to obtain sensitive system information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1259",
        "Description": "Microsoft Office 98, Macintosh Edition, does not properly initialize the disk space used by Office 98 files and effectively inserts data from previously deleted files into the Office file, which could allow attackers to obtain sensitive information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1260",
        "Description": "mSQL (Mini SQL) 2.0.6 allows remote attackers to obtain sensitive server information such as logged users, database names, and server version via the ServerStats query.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1261",
        "Description": "Buffer overflow in Rainbow Six Multiplayer allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long nickname (nick) command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1262",
        "Description": "Java in Netscape 4.5 does not properly restrict applets from connecting to other hosts besides the one from which the applet was loaded, which violates the Java security model and could allow remote attackers to conduct unauthorized activities.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1263",
        "Description": "Metamail before 2.7-7.2 allows remote attackers to overwrite arbitrary files via an e-mail message containing a uuencoded attachment that specifies the full pathname for the file to be modified, which is processed by uuencode in Metamail scripts such as sun-audio-file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1264",
        "Description": "WebRamp M3 router does not disable remote telnet or HTTP access to itself, even when access has been explicitly disabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1265",
        "Description": "SMTP server in SLmail 3.1 and earlier allows remote attackers to cause a denial of service via malformed commands whose arguments begin with a \"(\" (parenthesis) character, such as (1) SEND, (2) VRFY, (3) EXPN, (4) MAIL FROM, (5) RCPT TO.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1266",
        "Description": "rsh daemon (rshd) generates different error messages when a valid username is provided versus an invalid name, which allows remote attackers to determine valid users on the system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1267",
        "Description": "KDE file manager (kfm) uses a TCP server for certain file operations, which allows remote attackers to modify arbitrary files by sending a copy command to the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1268",
        "Description": "Vulnerability in KDE konsole allows local users to hijack or observe sessions of other users by accessing certain devices.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1269",
        "Description": "Screen savers in KDE beta 3 allows local users to overwrite arbitrary files via a symlink attack on the .kss.pid file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1270",
        "Description": "KMail in KDE 1.0 provides a PGP passphrase as a command line argument to other programs, which could allow local users to obtain the passphrase and compromise the PGP keys of other users by viewing the arguments via programs that list process information, such as ps.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1271",
        "Description": "Macromedia Dreamweaver uses weak encryption to store FTP passwords, which could allow local users to easily decrypt the passwords of other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1272",
        "Description": "Buffer overflows in CDROM Confidence Test program (cdrom) allow local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1273",
        "Description": "Squid Internet Object Cache 1.1.20 allows users to bypass access control lists (ACLs) by encoding the URL with hexadecimal escape sequences.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1274",
        "Description": "iPass RoamServer 3.1 creates temporary files with world-writable permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1275",
        "Description": "Lotus cc:Mail release 8 stores the postoffice password in plaintext in a hidden file which has insecure permissions, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1276",
        "Description": "fte-console in the fte package before 0.46b-4.1 does not drop root privileges, which allows local users to gain root access via the virtual console device.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1277",
        "Description": "BackWeb client stores the username and password in cleartext for proxy authentication in the Communication registry key, which could allow other local users to gain privileges by reading the password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1278",
        "Description": "nlog CGI scripts do not properly filter shell metacharacters from the IP address argument, which could allow remote attackers to execute certain commands via (1) nlog-smb.pl or (2) rpc-nlog.pl.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1279",
        "Description": "An interaction between the AS/400 shared folders feature and Microsoft SNA Server 3.0 and earlier allows users to view each other's folders when the users share the same Local APPC LU.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1280",
        "Description": "Hummingbird Exceed 6.0.1.0 inadvertently includes a DLL that was meant for development and testing, which logs user names and passwords in cleartext in the test.log file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1281",
        "Description": "Development version of Breeze Network Server allows remote attackers to cause the system to reboot by accessing the configbreeze CGI program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1282",
        "Description": "RealSystem G2 server stores the administrator password in cleartext in a world-readable configuration file, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1283",
        "Description": "Opera 3.2.1 allows remote attackers to cause a denial of service (application crash) via a URL that contains an extra / in the http:// tag.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1284",
        "Description": "NukeNabber allows remote attackers to cause a denial of service by connecting to the NukeNabber port (1080) without sending any data, which causes the CPU usage to rise to 100% from the report.exe program that is executed upon the connection.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1285",
        "Description": "Linux 2.1.132 and earlier allows local users to cause a denial of service (resource exhaustion) by reading a large buffer from a random device (e.g. /dev/urandom), which cannot be interrupted until the read has completed.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1286",
        "Description": "addnetpr in SGI IRIX 6.2 and earlier allows local users to modify arbitrary files and possibly gain root access via a symlink attack on a temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1287",
        "Description": "Vulnerability in Analog 3.0 and earlier allows remote attackers to read arbitrary files via the forms interface.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1288",
        "Description": "Samba 1.9.18 inadvertently includes a prototype application, wsmbconf, which is installed with incorrect permissions including the setgid bit, which allows local users to read and write files and possibly gain privileges via bugs in the program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1289",
        "Description": "ICQ 98 beta on Windows NT leaks the internal IP address of a client in the TCP data segment of an ICQ packet instead of the public address (e.g. through NAT), which provides remote attackers with potentially sensitive information about the client or the internal network configuration.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1290",
        "Description": "Buffer overflow in nftp FTP client version 1.40 allows remote malicious FTP servers to cause a denial of service, and possibly execute arbitrary commands, via a long response string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1291",
        "Description": "TCP/IP implementation in Microsoft Windows 95, Windows NT 4.0, and possibly others, allows remote attackers to reset connections by forcing a reset (RST) via a PSH ACK or other means, obtaining the target's last sequence number from the resulting packet, then spoofing a reset to the target.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1292",
        "Description": "Buffer overflow in web administration feature of Kolban Webcam32 4.8.3 and earlier allows remote attackers to execute arbitrary commands via a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1293",
        "Description": "mod_proxy in Apache 1.2.5 and earlier allows remote attackers to cause a denial of service via malformed FTP commands, which causes Apache to dump core.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1294",
        "Description": "Office Shortcut Bar (OSB) in Windows 3.51 enables backup and restore permissions, which are inherited by programs such as File Manager that are started from the Shortcut Bar, which could allow local users to read folders for which they do not have permission.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1295",
        "Description": "Transarc DCE Distributed File System (DFS) 1.1 for Solaris 2.4 and 2.5 does not properly initialize the grouplist for users who belong to a large number of groups, which could allow those users to gain access to resources that are protected by DFS.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1296",
        "Description": "Buffer overflow in Kerberos IV compatibility libraries as used in Kerberos V allows local users to gain root privileges via a long line in a kerberos configuration file, which can be specified via the KRB_CONF environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1297",
        "Description": "cmdtool in OpenWindows 3.0 and XView 3.0 in SunOS 4.1.4 and earlier allows attackers with physical access to the system to display unechoed characters (such as those from password prompts) via the L2/AGAIN key.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1298",
        "Description": "Sysinstall in FreeBSD 2.2.1 and earlier, when configuring anonymous FTP, creates the ftp user without a password and with /bin/date as the shell, which could allow attackers to gain access to certain system resources.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1299",
        "Description": "rcp on various Linux systems including Red Hat 4.0 allows a \"nobody\" user or other user with UID of 65535 to overwrite arbitrary files, since 65535 is interpreted as -1 by chown and other system calls, which causes the calls to fail to modify the ownership of the file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1300",
        "Description": "Vulnerability in accton in Cray UNICOS 6.1 and 6.0 allows local users to read arbitrary files and modify system accounting configuration.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1301",
        "Description": "A design flaw in the Z-Modem protocol allows the remote sender of a file to execute arbitrary programs on the client, as implemented in rz in the rzsz module of FreeBSD before 2.1.5, and possibly other programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1302",
        "Description": "Unspecified vulnerability in pt_chmod in SCO UNIX 4.2 and earlier allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1303",
        "Description": "Vulnerability in prwarn in SCO UNIX 4.2 and earlier allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1304",
        "Description": "Vulnerability in login in SCO UNIX 4.2 and earlier allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1305",
        "Description": "Vulnerability in \"at\" program in SCO UNIX 4.2 and earlier allows local users to gain root access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1306",
        "Description": "Cisco IOS 9.1 and earlier does not properly handle extended IP access lists when the IP route cache is enabled and the \"established\" keyword is set, which could allow attackers to bypass filters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1307",
        "Description": "Vulnerability in urestore in Novell UnixWare 1.1 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1308",
        "Description": "Certain programs in HP-UX 10.20 do not properly handle large user IDs (UID) or group IDs (GID) over 60000, which could allow local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1309",
        "Description": "Sendmail before 8.6.7 allows local users to gain root access via a large value in the debug (-d) command line option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1311",
        "Description": "Vulnerability in dtlogin and dtsession in HP-UX 10.20 and 10.10 allows local users to bypass authentication and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1312",
        "Description": "Vulnerability in DEC OpenVMS VAX 5.5-2 through 5.0, and OpenVMS AXP 1.0, allows local users to gain system privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1313",
        "Description": "Manual page reader (man) in FreeBSD 2.2 and earlier allows local users to gain privileges via a sequence of commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1314",
        "Description": "Vulnerability in union file system in FreeBSD 2.2 and earlier, and possibly other operating systems, allows local users to cause a denial of service (system reload) via a series of certain mount_union commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1315",
        "Description": "Vulnerabilities in DECnet/OSI for OpenVMS before 5.8 on DEC Alpha AXP and VAX/VMS systems allow local users to gain privileges or cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1316",
        "Description": "Passfilt.dll in Windows NT SP2 allows users to create a password that contains the user's name, which could make it easier for an attacker to guess.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1317",
        "Description": "Windows NT 4.0 SP4 and earlier allows local users to gain privileges by modifying the symbolic link table in the \\?? object folder using a different case letter (upper or lower) to point to a different device.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1318",
        "Description": "/usr/5bin/su in SunOS 4.1.3 and earlier uses a search path that includes the current working directory (.), which allows local users to gain privileges via Trojan horse programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1319",
        "Description": "Vulnerability in object server program in SGI IRIX 5.2 through 6.1 allows remote attackers to gain root privileges in certain configurations.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1320",
        "Description": "Vulnerability in Novell NetWare 3.x and earlier allows local users to gain privileges via packet spoofing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1321",
        "Description": "Buffer overflow in ssh 1.2.26 client with Kerberos V enabled could allow remote attackers to cause a denial of service or execute arbitrary commands via a long DNS hostname that is not properly handled during TGT ticket passing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1322",
        "Description": "The installation of 1ArcServe Backup and Inoculan AV client modules for Exchange create a log file, exchverify.log, which contains usernames and passwords in plaintext.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1323",
        "Description": "Norton AntiVirus for Internet Email Gateways (NAVIEG) 1.0.1.7 and earlier, and Norton AntiVirus for MS Exchange (NAVMSE) 1.5 and earlier, store the administrator password in cleartext in (1) the navieg.ini file for NAVIEG, and (2) the ModifyPassword registry key in NAVMSE.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1324",
        "Description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1325",
        "Description": "SAS System 5.18 on VAX/VMS is installed with insecure permissions for its directories and startup file, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1326",
        "Description": "wu-ftpd 2.4 FTP server does not properly drop privileges when an ABOR (abort file transfer) command is executed during a file transfer, which causes a signal to be handled incorrectly and allows local and possibly remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1327",
        "Description": "Buffer overflow in linuxconf 1.11r11-rh2 on Red Hat Linux 5.1 allows local users to gain root privileges via a long LANG environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1328",
        "Description": "linuxconf before 1.11.r11-rh3 on Red Hat Linux 5.1 allows local users to overwrite arbitrary files and gain root access via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1329",
        "Description": "Buffer overflow in SysVInit in Red Hat Linux 5.1 and earlier allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1330",
        "Description": "The snprintf function in the db library 1.85.4 ignores the size parameter, which could allow attackers to exploit buffer overflows that would be prevented by a properly implemented snprintf.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1331",
        "Description": "netcfg 2.16-1 in Red Hat Linux 4.2 allows the Ethernet interface to be controlled by users on reboot when an option is set, which allows local users to cause a denial of service by shutting down the interface.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1332",
        "Description": "gzexe in the gzip package on Red Hat Linux 5.0 and earlier allows local users to overwrite files of other users via a symlink attack on a temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1333",
        "Description": "automatic download option in ncftp 2.4.2 FTP client in Red Hat Linux 5.0 and earlier allows remote attackers to execute arbitrary commands via shell metacharacters in the names of files that are to be downloaded.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1334",
        "Description": "Multiple buffer overflows in filter command in Elm 2.4 allows attackers to execute arbitrary commands via (1) long From: headers, (2) long Reply-To: headers, or (3) via a long -f (filterfile) command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1335",
        "Description": "snmpd server in cmu-snmp SNMP package before 3.3-1 in Red Hat Linux 4.0 is configured to allow remote attackers to read and write sensitive information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1336",
        "Description": "3Com HiPer Access Router Card (HiperARC) 4.0 through 4.2.29 allows remote attackers to cause a denial of service (reboot) via a flood of IAC packets to the telnet port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1337",
        "Description": "FTP client in Midnight Commander (mc) before 4.5.11 stores usernames and passwords for visited sites in plaintext in the world-readable history file, which allows other local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1338",
        "Description": "Delegate proxy 5.9.3 and earlier creates files and directories in the DGROOT with world-writable permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1339",
        "Description": "Vulnerability when Network Address Translation (NAT) is enabled in Linux 2.2.10 and earlier with ipchains, or FreeBSD 3.2 with ipfw, allows remote attackers to cause a denial of service (kernel panic) via a ping -R (record route) command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1340",
        "Description": "Buffer overflow in faxalter in hylafax 4.0.2 allows local users to gain privileges via a long -m command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1341",
        "Description": "Linux kernel before 2.3.18 or 2.2.13pre15, with SLIP and PPP options, allows local unprivileged users to forge IP packets via the TIOCSETD option on tty devices.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1342",
        "Description": "ICQ ActiveList Server allows remote attackers to cause a denial of service (crash) via malformed packets to the server's UDP port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1343",
        "Description": "HTTP server for Xerox DocuColor 4 LP allows remote attackers to cause a denial of service (hang) via a long URL that contains a large number of . characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1344",
        "Description": "Auto_FTP.pl script in Auto_FTP 0.2 stores usernames and passwords in plaintext in the auto_ftp.conf configuration file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1345",
        "Description": "Auto_FTP.pl script in Auto_FTP 0.2 uses the /tmp/ftp_tmp as a shared directory with insecure permissions, which allows local users to (1) send arbitrary files to the remote server by placing them in the directory, and (2) view files that are being transferred.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1346",
        "Description": "PAM configuration file for rlogin in Red Hat Linux 6.1 and earlier includes a less restrictive rule before a more restrictive one, which allows users to access the host via rlogin even if rlogin has been explicitly disabled using the /etc/nologin file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1347",
        "Description": "Xsession in Red Hat Linux 6.1 and earlier can allow local users with restricted accounts to bypass execution of the .xsession file by starting kde, gnome or anotherlevel from kdm.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1348",
        "Description": "Linuxconf on Red Hat Linux 6.0 and earlier does not properly disable PAM-based access to the shutdown command, which could allow local users to cause a denial of service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1349",
        "Description": "NFS daemon (nfsd.exe) for Omni-NFS/X 6.1 allows remote attackers to cause a denial of service (resource exhaustion) via certain packets, possibly with the Urgent (URG) flag set, to port 111.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1350",
        "Description": "ARCAD Systemhaus 0.078-5 installs critical programs and files with world-writeable permissions, which could allow local users to gain privileges by replacing a program with a Trojan horse.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1351",
        "Description": "Directory traversal vulnerability in KVIrc IRC client 0.9.0 with the \"Listen to !nick <soundname> requests\" option enabled allows remote attackers to read arbitrary files via a .. (dot dot) in a DCC GET request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1352",
        "Description": "mknod in Linux 2.2 follows symbolic links, which could allow local users to overwrite files or gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1353",
        "Description": "Nosque MsgCore 2.14 stores passwords in cleartext: (1) the administrator password in the AdmPasswd registry key, and (2) user passwords in the Userbase.dbf data file, which could allow local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1354",
        "Description": "E-mail client in Softarc FirstClass Internet Server 5.506 and earlier stores usernames and passwords in cleartext in the files (1) home.fc for version 5.506, (2) network.fc for version 3.5, or (3) FCCLIENT.LOG when logging is enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1355",
        "Description": "BMC Patrol component, when installed with Compaq Insight Management Agent 4.23 and earlier, or Management Agents for Servers 4.40 and earlier, creates a PFCUser account with a default password and potentially dangerous privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1356",
        "Description": "Compaq Integration Maintenance Utility as used in Compaq Insight Manager agent before SmartStart 4.50 modifies the legal notice caption (LegalNoticeCaption) and text (LegalNoticeText) in Windows NT, which could produce a legal notice that is in violation of the security policy.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1357",
        "Description": "Netscape Communicator 4.04 through 4.7 (and possibly other versions) in various UNIX operating systems converts the 0x8b character to a \"<\" sign, and the 0x9b character to a \">\" sign, which could allow remote attackers to attack other clients via cross-site scripting (CSS) in CGI programs that do not filter these characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1358",
        "Description": "When an administrator in Windows NT or Windows 2000 changes a user policy, the policy is not properly updated if the local ntconfig.pol is not writable by the user, which could allow local users to bypass restrictions that would otherwise be enforced by the policy, possibly by changing the policy file to be read-only.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1359",
        "Description": "When the Ntconfig.pol file is used on a server whose name is longer than 13 characters, Windows NT does not properly enforce policies for global groups, which could allow users to bypass restrictions that were intended by those policies.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1360",
        "Description": "Windows NT 4.0 allows local users to cause a denial of service via a user mode application that closes a handle that was opened in kernel mode, which causes a crash when the kernel attempts to close the handle.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1361",
        "Description": "Windows NT 3.51 and 4.0 running WINS (Windows Internet Name Service) allows remote attackers to cause a denial of service (resource exhaustion) via a flood of malformed packets, which causes the server to slow down and fill the event logs with error messages.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1362",
        "Description": "Win32k.sys in Windows NT 4.0 before SP2 allows local users to cause a denial of service (crash) by calling certain WIN32K functions with incorrect parameters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1363",
        "Description": "Windows NT 3.51 and 4.0 allow local users to cause a denial of service (crash) by running a program that creates a large number of locks on a file, which exhausts the NonPagedPool.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1364",
        "Description": "Windows NT 4.0 allows local users to cause a denial of service (crash) via an illegal kernel mode address to the functions (1) GetThreadContext or (2) SetThreadContext.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1365",
        "Description": "Windows NT searches a user's home directory (%systemroot% by default) before other directories to find critical programs such as NDDEAGNT.EXE, EXPLORER.EXE, USERINIT.EXE or TASKMGR.EXE, which could allow local users to bypass access restrictions or gain privileges by placing a Trojan horse program into the root directory, which is writable by default.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1366",
        "Description": "Pegasus e-mail client 3.0 and earlier uses weak encryption to store POP3 passwords in the pmail.ini file, which allows local users to easily decrypt the passwords and read e-mail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1367",
        "Description": "Internet Explorer 5.0 does not properly reset the username/password cache for Web sites that do not use standard cache controls, which could allow users on the same system to access restricted web sites that were visited by other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1368",
        "Description": "AV Option for MS Exchange Server option for InoculateIT 4.53, and possibly other versions, only scans the Inbox folder tree of a Microsoft Exchange server, which could allow viruses to escape detection if a user's rules cause the message to be moved to a different mailbox.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1369",
        "Description": "Real Media RealServer (rmserver) 6.0.3.353 stores a password in plaintext in the world-readable rmserver.cfg file, which allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1370",
        "Description": "The setup wizard (ie5setup.exe) for Internet Explorer 5.0 disables (1) the screen saver, which could leave the system open to users with physical access if a failure occurs during an unattended installation, and (2) the Task Scheduler Service, which might prevent the scheduled execution of security-critical programs.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1371",
        "Description": "Buffer overflow in /usr/bin/write in Solaris 2.6 and 7 allows local users to gain privileges via a long string in the terminal name argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1372",
        "Description": "Triactive Remote Manager with Basic authentication enabled stores the username and password in cleartext in registry keys, which could allow local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1373",
        "Description": "FORE PowerHub before 5.0.1 allows remote attackers to cause a denial of service (hang) via a TCP SYN scan with TCP/IP OS fingerprinting, e.g. via nmap.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1374",
        "Description": "perlshop.cgi shopping cart program stores sensitive customer information in directories and files that are under the web root, which allows remote attackers to obtain that information via an HTTP request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1375",
        "Description": "FileSystemObject (FSO) in the showfile.asp Active Server Page (ASP) allows remote attackers to read arbitrary files by specifying the name in the file parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1376",
        "Description": "Buffer overflow in fpcount.exe in IIS 4.0 with FrontPage Server Extensions allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1377",
        "Description": "Matt Wright's download.cgi 1.0 allows remote attackers to read arbitrary files via a .. (dot dot) in the f parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1378",
        "Description": "dbmlparser.exe CGI guestbook program does not perform a chroot operation properly, which allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1379",
        "Description": "DNS allows remote attackers to use DNS name servers as traffic amplifiers via a UDP DNS query with a spoofed source address, which produces more traffic to the victim than was sent by the attacker.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1380",
        "Description": "Symantec Norton Utilities 2.0 for Windows 95 marks the TUNEOCX.OCX ActiveX control as safe for scripting, which allows remote attackers to execute arbitrary commands via the run option through malicious web pages that are accessed by browsers such as Internet Explorer 3.0.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1381",
        "Description": "Buffer overflow in dbadmin CGI program 1.0.1 on Linux allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1382",
        "Description": "NetWare NFS mode 1 and 2 implements the \"Read Only\" flag in Unix by changing the ownership of a file to root, which allows local users to gain root privileges by creating a setuid program and setting it to \"Read Only,\" which NetWare-NFS changes to a setuid root program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1383",
        "Description": "(1) bash before 1.14.7, and (2) tcsh 6.05 allow local users to gain privileges via directory names that contain shell metacharacters (` back-tick), which can cause the commands enclosed in the directory name to be executed when the shell expands filenames using the \\w option in the PS1 variable.",
        "CWE": [
            {
                "CWE": "CWE-264",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1384",
        "Description": "Indigo Magic System Tour in the SGI system tour package (systour) for IRIX 5.x through 6.3 allows local users to gain root privileges via a Trojan horse .exitops program, which is called by the inst command that is executed by the RemoveSystemTour program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1385",
        "Description": "Buffer overflow in ppp program in FreeBSD 2.1 and earlier allows local users to gain privileges via a long HOME environment variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1386",
        "Description": "Perl 5.004_04 and earlier follows symbolic links when running with the -e option, which allows local users to overwrite arbitrary files via a symlink attack on the /tmp/perl-eaXXXXX file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1387",
        "Description": "Windows NT 4.0 SP2 allows remote attackers to cause a denial of service (crash), possibly via malformed inputs or packets, such as those generated by a Linux smbmount command that was compiled on the Linux 2.0.29 kernel but executed on Linux 2.0.25.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1388",
        "Description": "passwd in SunOS 4.1.x allows local users to overwrite arbitrary files via a symlink attack and the -F command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1389",
        "Description": "US Robotics/3Com Total Control Chassis with Frame Relay between 3.6.22 and 3.7.24 does not properly enforce access filters when the \"set host prompt\" setting is made for a port, which allows attackers to bypass restrictions by providing the hostname twice at the \"host: \" prompt.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1390",
        "Description": "suidexec in suidmanager 0.18 on Debian 2.0 allows local users to gain root privileges by specifying a malicious program on the command line.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1391",
        "Description": "Vulnerability in NeXT 1.0a and 1.0 with publicly accessible printers allows local users to gain privileges via a combination of the npd program and weak directory permissions.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1392",
        "Description": "Vulnerability in restore0.9 installation script in NeXT 1.0a and 1.0 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1393",
        "Description": "Control Panel \"Password Security\" option for Apple Powerbooks allows attackers with physical access to the machine to bypass the security by booting it with an emergency startup disk and using a disk editor to modify the on/off toggle or password in the aaaaaaaAPWD file, which is normally inaccessible.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1394",
        "Description": "BSD 4.4 based operating systems, when running at security level 1, allow the root user to clear the immutable and append-only flags for files by unmounting the file system and using a file system editor such as fsdb to directly modify the file through a device.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1395",
        "Description": "Vulnerability in Monitor utility (SYS$SHARE:SPISHR.EXE) in VMS 5.0 through 5.4-2 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1396",
        "Description": "Vulnerability in integer multiplication emulation code on SPARC architectures for SunOS 4.1 through 4.1.2 allows local users to gain root access or cause a denial of service (crash).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1397",
        "Description": "Index Server 2.0 on IIS 4.0 stores physical path information in the ContentIndex\\Catalogs subkey of the AllowedPaths registry key, whose permissions allows local and remote users to obtain the physical paths of directories that are being indexed.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1398",
        "Description": "Vulnerability in xfsdump in SGI IRIX may allow local users to obtain root privileges via the bck.log log file, possibly via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1399",
        "Description": "spaceball program in SpaceWare 7.3 v1.0 in IRIX 6.2 allows local users to gain root privileges by setting the HOSTNAME environmental variable to contain the commands to be executed.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1400",
        "Description": "The Economist screen saver 1999 with the \"Password Protected\" option enabled allows users with physical access to the machine to bypass the screen saver and read files by running Internet Explorer while the screen is still locked.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1401",
        "Description": "Vulnerability in Desktop searchbook program in IRIX 5.0.x through 6.2 sets insecure permissions for certain user files (iconbook and searchbook).",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1402",
        "Description": "The access permissions for a UNIX domain socket are ignored in Solaris 2.x and SunOS 4.x, and other BSD-based operating systems before 4.4, which could allow local users to connect to the socket and possibly disrupt or control the operations of the program using that socket.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1403",
        "Description": "IBM/Tivoli OPC Tracker Agent version 2 release 1 creates files, directories, and IPC message queues with insecure permissions (world-readable and world-writable), which could allow local users to disrupt operations and possibly gain privileges by modifying or deleting files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1404",
        "Description": "IBM/Tivoli OPC Tracker Agent version 2 release 1 allows remote attackers to cause a denial of service (resource exhaustion) via malformed data to the localtracker client port (5011), which prevents the connection from being closed properly.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1405",
        "Description": "snap command in AIX before 4.3.2 creates the /tmp/ibmsupt directory with world-readable permissions and does not remove or clear the directory when snap -a is executed, which could allow local users to access the shadowed password file by creating /tmp/ibmsupt/general/passwd before root runs snap -a.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1406",
        "Description": "dumpreg in Red Hat Linux 5.1 opens /dev/mem with O_RDWR access, which allows local users to cause a denial of service (crash) by redirecting fd 1 (stdout) to the kernel.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1407",
        "Description": "ifdhcpc-done script for configuring DHCP on Red Hat Linux 5 allows local users to append text to arbitrary files via a symlink attack on the dhcplog file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1408",
        "Description": "Vulnerability in AIX 4.1.4 and HP-UX 10.01 and 9.05 allows local users to cause a denial of service (crash) by using a socket to connect to a port on the localhost, calling shutdown to clear the socket, then using the same socket to connect to a different port on localhost.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1409",
        "Description": "The at program in IRIX 6.2 and NetBSD 1.3.2 and earlier allows local users to read portions of arbitrary files by submitting the file to at with the -f argument, which generates error messages that at sends to the user via e-mail.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1410",
        "Description": "addnetpr in IRIX 5.3 and 6.2 allows local users to overwrite arbitrary files and possibly gain root privileges via a symlink attack on the printers temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1411",
        "Description": "The installation of the fsp package 2.71-10 in Debian GNU/Linux 2.0 adds the anonymous FTP user without notifying the administrator, which could automatically enable anonymous FTP on some servers such as wu-ftp.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1412",
        "Description": "A possible interaction between Apple MacOS X release 1.0 and Apache HTTP server allows remote attackers to cause a denial of service (crash) via a flood of HTTP GET requests to CGI programs, which generates a large number of processes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1413",
        "Description": "Solaris 2.4 before kernel jumbo patch -35 allows set-gid programs to dump core even if the real user id is not in the set-gid group, which allows local users to overwrite or create files at higher privileges by causing a core dump, e.g. through dmesg.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1414",
        "Description": "IBM Netfinity Remote Control allows local users to gain administrator privileges by starting programs from the process manager, which runs with system level privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1415",
        "Description": "Vulnerability in /usr/bin/mail in DEC ULTRIX before 4.2 allows local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1416",
        "Description": "AnswerBook2 (AB2) web server dwhttpd 3.1a4 allows remote attackers to cause a denial of service (resource exhaustion) via an HTTP POST request with a large content-length.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1417",
        "Description": "Format string vulnerability in AnswerBook2 (AB2) web server dwhttpd 3.1a4 allows remote attackers to cause a denial of service and possibly execute arbitrary commands via encoded % characters in an HTTP request, which is improperly logged.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1418",
        "Description": "ICQ99 ICQ web server build 1701 with \"Active Homepage\" enabled generates allows remote attackers to determine the existence of files on the server by comparing server responses when a file exists (\"404 Forbidden\") versus when a file does not exist (\"404 not found\").",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1419",
        "Description": "Buffer overflow in nss_nisplus.so.1 library in NIS+ in Solaris 2.3 and 2.4 allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1420",
        "Description": "NBase switches NH2012, NH2012R, NH2015, and NH2048 have a back door password that cannot be disabled, which allows remote attackers to modify the switch's configuration.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1421",
        "Description": "NBase switches NH208 and NH215 run a TFTP server which allows remote attackers to send software updates to modify the switch or cause a denial of service (crash) by guessing the target filenames, which have default names.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1422",
        "Description": "The default configuration of Slackware 3.4, and possibly other versions, includes . (dot, the current directory) in the PATH environmental variable, which could allow local users to create Trojan horse programs that are inadvertently executed by other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1423",
        "Description": "ping in Solaris 2.3 through 2.6 allows local users to cause a denial of service (crash) via a ping request to a multicast address through the loopback interface, e.g. via ping -i.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1424",
        "Description": "Solaris Solstice AdminSuite (AdminSuite) 2.1 uses unsafe permissions when adding new users to the NIS+ password table, which allows local users to gain root access by modifying their password table entries.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1425",
        "Description": "Solaris Solstice AdminSuite (AdminSuite) 2.1 incorrectly sets write permissions on source files for NIS maps, which could allow local users to gain privileges by modifying /etc/passwd.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1426",
        "Description": "Solaris Solstice AdminSuite (AdminSuite) 2.1 follows symbolic links when updating an NIS database, which allows local users to overwrite arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1427",
        "Description": "Solaris Solstice AdminSuite (AdminSuite) 2.1 and 2.2 create lock files insecurely, which allows local users to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1428",
        "Description": "Solaris Solstice AdminSuite (AdminSuite) 2.1 and 2.2 allows local users to gain privileges via the save option in the Database Manager, which is running with setgid bin privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1429",
        "Description": "DIT TransferPro installs devices with world-readable and world-writable permissions, which could allow local users to damage disks through the ff device driver.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1430",
        "Description": "PIM software for Royal daVinci does not properly password-protext access to data stored in the .mdb (Microsoft Access) file, which allows local users to read the data without a password by directly accessing the files with a different application, such as Access.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1431",
        "Description": "ZAK in Appstation mode allows users to bypass the \"Run only allowed apps\" policy by starting Explorer from Office 97 applications (such as Word), installing software into the TEMP directory, and changing the name to that for an allowed application, such as Winword.exe.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1432",
        "Description": "Power management (Powermanagement) on Solaris 2.4 through 2.6 does not start the xlock process until after the sys-suspend has completed, which allows an attacker with physical access to input characters to the last active application from the keyboard for a short period after the system is restoring, which could lead to increased privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1433",
        "Description": "HP JetAdmin D.01.09 on Solaris allows local users to change the permissions of arbitrary files via a symlink attack on the /tmp/jetadmin.log file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1434",
        "Description": "login in Slackware Linux 3.2 through 3.5 does not properly check for an error when the /etc/group file is missing, which prevents it from dropping privileges, causing it to assign root privileges to any local user who logs on to the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1435",
        "Description": "Buffer overflow in libsocks5 library of Socks 5 (socks5) 1.0r5 allows local users to gain privileges via long environmental variables.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1436",
        "Description": "Ray Chan WWW Authorization Gateway 0.1 CGI program allows remote attackers to execute arbitrary commands via shell metacharacters in the \"user\" parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1437",
        "Description": "ePerl 2.2.12 allows remote attackers to read arbitrary files and possibly execute certain commands by specifying a full pathname of the target file as an argument to bar.phtml.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1438",
        "Description": "Vulnerability in /bin/mail in SunOS 4.1.1 and earlier allows local users to gain root privileges via certain command line arguments.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1439",
        "Description": "gcc 2.7.2 allows local users to overwrite arbitrary files via a symlink attack on temporary .i, .s, or .o files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1440",
        "Description": "Win32 ICQ 98a 1.30, and possibly other versions, does not display the entire portion of long filenames, which could allow attackers to send an executable file with a long name that contains so many spaces that the .exe extension is not displayed, which could make the user believe that the file is safe to open from the client.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1441",
        "Description": "Linux 2.0.34 does not properly prevent users from sending SIGIO signals to arbitrary processes, which allows local users to cause a denial of service by sending SIGIO to processes that do not catch it.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1442",
        "Description": "Bug in AMD K6 processor on Linux 2.0.x and 2.1.x kernels allows local users to cause a denial of service (crash) via a particular sequence of instructions, possibly related to accessing addresses outside of segments.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1443",
        "Description": "Micah Software Full Armor Network Configurator and Zero Administration allow local users with physical access to bypass the desktop protection by (1) using <CTRL><ALT><DEL> and kill the process using the task manager, (2) booting the system from a separate disk, or (3) interrupting certain processes that execute while the system is booting.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1444",
        "Description": "genkey utility in Alibaba 2.0 generates RSA key pairs with an exponent of 1, which results in transactions that are sent in cleartext.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1445",
        "Description": "Vulnerability in imapd and ipop3d in Slackware 3.4 and 3.3 with shadowing enabled, and possibly other operating systems, allows remote attackers to cause a core dump via a short sequence of USER and PASS commands that do not provide valid usernames or passwords.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1446",
        "Description": "Internet Explorer 3 records a history of all URL's that are visited by a user in DAT files located in the Temporary Internet Files and History folders, which are not cleared when the user selects the \"Clear History\" option, and are not visible when the user browses the folders because of tailored displays.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1447",
        "Description": "Internet Explorer 4.0 allows remote attackers to cause a denial of service (crash) via HTML code that contains a long CLASSID parameter in an OBJECT tag.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1448",
        "Description": "Eudora and Eudora Light before 3.05 allows remote attackers to cause a crash and corrupt the user's mailbox via an e-mail message with certain dates, such as (1) dates before 1970, which cause a Divide By Zero error, or (2) dates that are 100 years after the current date, which causes a segmentation fault.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1449",
        "Description": "SunOS 4.1.4 on a Sparc 20 machine allows local users to cause a denial of service (kernel panic) by reading from the /dev/tcx0 TCX device.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1450",
        "Description": "Vulnerability in (1) rlogin daemon rshd and (2) scheme on SCO UNIX OpenServer 5.0.5 and earlier, and SCO UnixWare 7.0.1 and earlier, allows remote attackers to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1451",
        "Description": "The Winmsdp.exe sample file in IIS 4.0 and Site Server 3.0 allows remote attackers to read arbitrary files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1452",
        "Description": "GINA in Windows NT 4.0 allows attackers with physical access to display a portion of the clipboard of the user who has locked the workstation by pasting (CTRL-V) the contents into the username prompt.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1453",
        "Description": "Internet Explorer 4 allows remote attackers (malicious web site operators) to read the contents of the clipboard via the Internet WebBrowser ActiveX object.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1454",
        "Description": "Macromedia \"The Matrix\" screen saver on Windows 95 with the \"Password protected\" option enabled allows attackers with physical access to the machine to bypass the password prompt by pressing the ESC (Escape) key.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1455",
        "Description": "RSH service utility RSHSVC in Windows NT 3.5 through 4.0 does not properly restrict access as specified in the .Rhosts file when a user comes from an authorized host, which could allow unauthorized users to access the service by logging in from an authorized host.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1456",
        "Description": "thttpd HTTP server 2.03 and earlier allows remote attackers to read arbitrary files via a GET request with more than one leading / (slash) character in the filename.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1457",
        "Description": "Buffer overflow in thttpd HTTP server before 2.04-31 allows remote attackers to execute arbitrary commands via a long date string, which is not properly handled by the tdate_parse function.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1458",
        "Description": "Buffer overflow in at program in Digital UNIX 4.0 allows local users to gain root privileges via a long command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1459",
        "Description": "BMC PATROL Agent before 3.2.07 allows local users to gain root privileges via a symlink attack on a temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1460",
        "Description": "BMC PATROL SNMP Agent before 3.2.07 allows local users to create arbitrary world-writeable files as root by specifying the target file as the second argument to the snmpmagt program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1461",
        "Description": "inpview in InPerson on IRIX 5.3 through IRIX 6.5.10 trusts the PATH environmental variable to find and execute the ttsession program, which allows local users to obtain root access by modifying the PATH to point to a Trojan horse ttsession program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1462",
        "Description": "Vulnerability in bb-hist.sh CGI History module in Big Brother 1.09b and 1.09c allows remote attackers to read portions of arbitrary files.",
        "CWE": [
            {
                "CWE": "CWE-200",
                "CWE Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1217",
                        "Name": "Browser Bookmark Discovery",
                        "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1592",
                        "Name": "Gather Victim Host Information",
                        "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1595",
                        "Name": "Active Scanning",
                        "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1018",
                        "Name": "Remote System Discovery",
                        "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1124",
                        "Name": "System Time Discovery",
                        "Description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1046",
                        "Name": "Network Service Scanning",
                        "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1016",
                        "Name": "System Network Configuration Discovery",
                        "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1049",
                        "Name": "System Network Connections Discovery",
                        "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1590",
                        "Name": "Gather Victim Network Information",
                        "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                        "Tactics": {
                            "reconnaissance": "The adversary is trying to gather information they can use to plan future operations."
                        }
                    },
                    {
                        "ID": "1082",
                        "Name": "System Information Discovery",
                        "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1083",
                        "Name": "File and Directory Discovery",
                        "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1057",
                        "Name": "Process Discovery",
                        "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1007",
                        "Name": "System Service Discovery",
                        "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1087",
                        "Name": "Account Discovery",
                        "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1069",
                        "Name": "Permission Groups Discovery",
                        "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1615",
                        "Name": "Group Policy Discovery",
                        "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1033",
                        "Name": "System Owner/User Discovery",
                        "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1134.001",
                        "Name": "Access Token Manipulation",
                        "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1550.004",
                        "Name": "Use Alternate Authentication Material",
                        "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected.",
                            "lateral-movement": "The adversary is trying to move through your environment."
                        }
                    },
                    {
                        "ID": "1036.005",
                        "Name": "Masquerading",
                        "Description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1135",
                        "Name": "Network Share Discovery",
                        "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1120",
                        "Name": "Peripheral Device Discovery",
                        "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                        "Tactics": {
                            "discovery": "The adversary is trying to figure out your environment."
                        }
                    },
                    {
                        "ID": "1111",
                        "Name": "Multi-Factor Authentication Interception",
                        "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1463",
        "Description": "Windows NT 4.0 before SP3 allows remote attackers to bypass firewall restrictions or cause a denial of service (crash) by sending improperly fragmented IP packets without the first fragment, which the TCP/IP stack incorrectly reassembles into a valid session.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1464",
        "Description": "Vulnerability in Cisco IOS 11.1CC and 11.1CT with distributed fast switching (DFS) enabled allows remote attackers to bypass certain access control lists when the router switches traffic from a DFS-enabled interface to an interface that does not have DFS enabled, as described by Cisco bug CSCdk35564.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1465",
        "Description": "Vulnerability in Cisco IOS 11.1 through 11.3 with distributed fast switching (DFS) enabled allows remote attackers to bypass certain access control lists when the router switches traffic from a DFS-enabled input interface to an output interface with a logical subinterface, as described by Cisco bug CSCdk43862.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1466",
        "Description": "Vulnerability in Cisco routers versions 8.2 through 9.1 allows remote attackers to bypass access control lists when extended IP access lists are used on certain interfaces, the IP route cache is enabled, and the access list uses the \"established\" keyword.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1467",
        "Description": "Vulnerability in rcp on SunOS 4.0.x allows remote attackers from trusted hosts to execute arbitrary commands as root, possibly related to the configuration of the nobody user.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1468",
        "Description": "rdist in various UNIX systems uses popen to execute sendmail, which allows local users to gain root privileges by modifying the IFS (Internal Field Separator) variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1469",
        "Description": "Buffer overflow in w3-auth CGI program in miniSQL package allows remote attackers to execute arbitrary commands via an HTTP request with (1) a long URL, or (2) a long User-Agent MIME header.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1470",
        "Description": "Eastman Work Management 3.21 stores passwords in cleartext in the COMMON and LOCATOR registry keys, which could allow local users to gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1471",
        "Description": "Buffer overflow in passwd in BSD based operating systems 4.3 and earlier allows local users to gain root privileges by specifying a long shell or GECOS field.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1472",
        "Description": "Internet Explorer 4.0 allows remote attackers to read arbitrary text and HTML files on the user's machine via a small IFRAME that uses Dynamic HTML (DHTML) to send the data to the attacker, aka the Freiburg text-viewing issue.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1473",
        "Description": "When a Web site redirects the browser to another site, Internet Explorer 3.02 and 4.0 automatically resends authentication information to the second site, aka the \"Page Redirect Issue.\"",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1474",
        "Description": "PowerPoint 95 and 97 allows remote attackers to cause an application to be run automatically without prompting the user, possibly through the slide show, when the document is opened in browsers such as Internet Explorer.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1475",
        "Description": "ProFTPd 1.2 compiled with the mod_sqlpw module records user passwords in the wtmp log file, which allows local users to obtain the passwords and gain privileges by reading wtmp, e.g. via the last command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1476",
        "Description": "A bug in Intel Pentium processor (MMX and Overdrive) allows local users to cause a denial of service (hang) in Intel-based operating systems such as Windows NT and Windows 95, via an invalid instruction, aka the \"Invalid Operand with Locked CMPXCHG8B Instruction\" problem.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1477",
        "Description": "Buffer overflow in GNOME libraries 1.0.8 allows local user to gain root access via a long --espeaker argument in programs such as nethack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1478",
        "Description": "The Sun HotSpot Performance Engine VM allows a remote attacker to cause a denial of service on any server running HotSpot via a URL that includes the [ character.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1479",
        "Description": "The textcounter.pl by Matt Wright allows remote attackers to execute arbitrary commands via shell metacharacters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1480",
        "Description": "(1) acledit and (2) aclput in AIX 4.3 allow local users to create or modify files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1481",
        "Description": "Squid 2.2.STABLE5 and below, when using external authentication, allows attackers to bypass access controls via a newline in the user/password pair.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1482",
        "Description": "SVGAlib zgv 3.0-7 and earlier allows local users to gain root access via a privilege leak of the iopl(3) privileges to child processes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1483",
        "Description": "Buffer overflow in zgv in svgalib 1.2.10 and earlier allows local users to execute arbitrary code via a long HOME environment variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1484",
        "Description": "Buffer overflow in MSN Setup BBS 4.71.0.10 ActiveX control (setupbbs.ocx) allows a remote attacker to execute arbitrary commands via the methods (1) vAddNewsServer or (2) bIsNewsServerConfigured.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1485",
        "Description": "nsd in IRIX 6.5 through 6.5.2 exports a virtual filesystem on a UDP port, which allows remote attackers to view files and cause a possible denial of service by mounting the nsd virtual file system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1486",
        "Description": "sadc in IBM AIX 4.1 through 4.3, when called from programs such as timex that are setgid adm, allows local users to overwrite arbitrary files via a symlink attack.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1487",
        "Description": "Vulnerability in digest in AIX 4.3 allows printq users to gain root privileges by creating and/or modifing any file on the system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1488",
        "Description": "sdrd daemon in IBM SP2 System Data Repository (SDR) allows remote attackers to read files without authentication.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1489",
        "Description": "Buffer overflow in TestChip function in XFree86 SuperProbe in Slackware Linux 3.1 allows local users to gain root privileges via a long -nopr argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1490",
        "Description": "xosview 1.5.1 in Red Hat 5.1 allows local users to gain root access via a long HOME environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1491",
        "Description": "abuse.console in Red Hat 2.1 uses relative pathnames to find and execute the undrv program, which allows local users to execute arbitrary commands via a path that points to a Trojan horse program.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1492",
        "Description": "Vulnerability in (1) diskperf and (2) diskalign in IRIX 6.4 allows local attacker to create arbitrary root owned files, leading to root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1493",
        "Description": "Vulnerability in crp in Hewlett Packard Apollo Domain OS SR10 through SR10.3 allows remote attackers to gain root privileges via insecure system calls, (1) pad_$dm_cmd and (2) pad_$def_pfk().",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1494",
        "Description": "colorview in Silicon Graphics IRIX 5.1, 5.2, and 6.0 allows local attackers to read arbitrary files via the -text argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1495",
        "Description": "xtvscreen in SuSE Linux 6.0 allows local users to overwrite arbitrary files via a symlink attack on the pic000.pnm file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1496",
        "Description": "Sudo 1.5 in Debian Linux 2.1 and Red Hat 6.0 allows local users to determine the existence of arbitrary files by attempting to execute the target filename as a program, which generates a different error message when the file does not exist.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1497",
        "Description": "Ipswitch IMail 5.0 and 6.0 uses weak encryption to store passwords in registry keys, which allows local attackers to read passwords for e-mail accounts.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1498",
        "Description": "Slackware Linux 3.4 pkgtool allows local attacker to read and write to arbitrary files via a symlink attack on the reply file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1499",
        "Description": "named in ISC BIND 4.9 and 8.1 allows local users to destroy files via a symlink attack on (1) named_dump.db when root kills the process with a SIGINT, or (2) named.stats when SIGIOT is used.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1500",
        "Description": "Internet Anywhere POP3 Mail Server 2.3.1 allows remote attackers to cause a denial of service (crash) via (1) LIST, (2) TOP, or (3) UIDL commands using letters as arguments.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1501",
        "Description": "(1) ipxchk and (2) ipxlink in SGI OS2 IRIX 6.3 does not properly clear the IFS environmental variable before executing system calls, which allows local users to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1502",
        "Description": "Buffer overflows in Quake 1.9 client allows remote malicious servers to execute arbitrary commands via long (1) precache paths, (2) server name, (3) server address, or (4) argument to the map console command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1503",
        "Description": "Network Flight Recorder (NFR) 1.5 and 1.6 allows remote attackers to cause a denial of service in nfrd (crash) via a TCP packet with a null header and data field.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1504",
        "Description": "Stalker Internet Mail Server 1.6 allows a remote attacker to cause a denial of service (crash) via a long HELO command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1505",
        "Description": "Buffer overflow in QuakeWorld 2.10 allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary commands via a long initial connect packet.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1506",
        "Description": "Vulnerability in SMI Sendmail 4.0 and earlier, on SunOS up to 4.0.3, allows remote attackers to access user bin.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1507",
        "Description": "Sun SunOS 4.1 through 4.1.3 allows local attackers to gain root access via insecure permissions on files and directories such as crash.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1508",
        "Description": "Web server in Tektronix PhaserLink Printer 840.0 and earlier allows a remote attacker to gain administrator access by directly calling undocumented URLs such as ncl_items.html and ncl_subjects.html.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1509",
        "Description": "Directory traversal vulnerability in Etype Eserv 2.50 web server allows a remote attacker to read any file in the file system via a .. (dot dot) in a URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1510",
        "Description": "Buffer overflows in Bisonware FTP server prior to 4.1 allow remote attackers to cause a denial of service, and possibly execute arbitrary commands, via long (1) USER, (2) LIST, or (3) CWD commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1511",
        "Description": "Buffer overflows in Xtramail 1.11 allow attackers to cause a denial of service (crash) and possibly execute arbitrary commands via (1) a long PASS command in the POP3 service, (2) a long HELO command in the SMTP service, or (3) a long user name in the Control Service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1512",
        "Description": "The AMaViS virus scanner 0.2.0-pre4 and earlier allows remote attackers to execute arbitrary commands as root via an infected mail message with shell metacharacters in the reply-to field.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1513",
        "Description": "Management information base (MIB) for a 3Com SuperStack II hub running software version 2.10 contains an object identifier (.1.3.6.1.4.1.43.10.4.2) that is accessible by a read-only community string, but lists the entire table of community strings, which could allow attackers to conduct unauthorized activities.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1514",
        "Description": "Buffer overflow in Celtech ExpressFS FTP server 2.x allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long USER command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1515",
        "Description": "A non-default configuration in TenFour TFS Gateway 4.0 allows an attacker to cause a denial of service via messages with incorrect sender and recipient addresses, which causes the gateway to continuously try to return the message every 10 seconds.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1516",
        "Description": "A buffer overflow in TenFour TFS Gateway SMTP mail server 3.2 allows an attacker to crash the mail server and possibly execute arbitrary code by offering more than 128 bytes in a MAIL FROM string.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1517",
        "Description": "runtar in the Amanda backup system used in various UNIX operating systems executes tar with root privileges, which allows a user to overwrite or read arbitrary files by providing the target files to runtar.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1518",
        "Description": "Operating systems with shared memory implementations based on BSD 4.4 code allow a user to conduct a denial of service and bypass memory limits (e.g., as specified with rlimits) using mmap or shmget to allocate memory and cause page faults.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1519",
        "Description": "Gene6 G6 FTP Server 2.0 allows a remote attacker to cause a denial of service (resource exhaustion) via a long (1) user name or (2) password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1520",
        "Description": "A configuration problem in the Ad Server Sample directory (AdSamples) in Microsoft Site Server 3.0 allows an attacker to obtain the SITE.CSC file, which exposes sensitive SQL database information.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1521",
        "Description": "Computalynx CMail 2.4 and CMail 2.3 SP2 SMTP servers are vulnerable to a buffer overflow attack in the MAIL FROM command that may allow a remote attacker to execute arbitrary code on the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1522",
        "Description": "Vulnerability in htmlparse.pike in Roxen Web Server 1.3.11 and earlier, possibly related to recursive parsing and referer tags in RXML.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1523",
        "Description": "Buffer overflow in Sambar Web Server 4.2.1 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long HTTP GET request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1524",
        "Description": "FlowPoint DSL router firmware versions prior to 3.0.8 allows a remote attacker to exploit a password recovery feature from the network and conduct brute force password guessing, instead of limiting the feature to the serial console port.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1525",
        "Description": "Macromedia Shockwave before 6.0 allows a malicious webmaster to read a user's mail box and possibly access internal web servers via the GetNextText command on a Shockwave movie.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1526",
        "Description": "Auto-update feature of Macromedia Shockwave 7 transmits a user's password and hard disk information back to Macromedia.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1527",
        "Description": "Internal HTTP server in Sun Netbeans Java IDE in Netbeans Developer 3.0 Beta and Forte Community Edition 1.0 Beta does not properly restrict access to IP addresses as specified in its configuration, which allows arbitrary remote attackers to access the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1528",
        "Description": "ProSoft Netware Client 5.12 on Macintosh MacOS 9 does not automatically log a user out of the NDS tree when the user logs off the system, which allows other users of the same system access to the unprotected NDS session.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1529",
        "Description": "A buffer overflow exists in the HELO command in Trend Micro Interscan VirusWall SMTP gateway 3.23/3.3 for NT, which may allow an attacker to execute arbitrary code.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1530",
        "Description": "cgiwrap as used on Cobalt RaQ 2.0 and RaQ 3i does not properly identify the user for running certain scripts, which allows a malicious site administrator to view or modify data located at another virtual site on the same system.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1531",
        "Description": "Buffer overflow in IBM HomePagePrint 1.0.7 for Windows98J allows a malicious Web site to execute arbitrary code on a viewer's system via a long IMG_SRC HTML tag.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1532",
        "Description": "Netscape Messaging Server 3.54, 3.55, and 3.6 allows a remote attacker to cause a denial of service (memory exhaustion) via a series of long RCPT TO commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1533",
        "Description": "Eicon Technology Diva LAN ISDN modem allows a remote attacker to cause a denial of service (hang) via a long password argument to the login.htm file in its HTTP service.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1534",
        "Description": "Buffer overflow in (1) nlservd and (2) rnavc in Knox Software Arkeia backup product allows local users to obtain root access via a long HOME environmental variable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1535",
        "Description": "Buffer overflow in AspUpload.dll in Persits Software AspUpload before 1.4.0.2 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long argument in the HTTP request.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1536",
        "Description": ".sbstart startup script in AcuShop Salesbuilder is world writable, which allows local users to gain privileges by appending commands to the file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1537",
        "Description": "IIS 3.x and 4.x does not distinguish between pages requiring encryption and those that do not, which allows remote attackers to cause a denial of service (resource exhaustion) via SSL requests to the HTTPS port for normally unencrypted files, which will cause IIS to perform extra work to send the files over SSL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1538",
        "Description": "When IIS 2 or 3 is upgraded to IIS 4, ism.dll is inadvertently left in /scripts/iisadmin, which does not restrict access to the local machine and allows an unauthorized user to gain access to sensitive server information, including the Administrator's password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1539",
        "Description": "Buffer overflow in FTP server in QPC Software's QVT/Term Plus versions 4.2d and 4.3 and QVT/Net 4.3 allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, via a long (1) user name or (2) password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1540",
        "Description": "shell-lock in Cactus Software Shell Lock uses weak encryption (trivial encoding) which allows attackers to easily decrypt and obtain the source code.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1541",
        "Description": "shell-lock in Cactus Software Shell Lock allows local users to read or modify decoded shell files before they are executed, via a symlink attack on a temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1542",
        "Description": "RPMMail before 1.4 allows remote attackers to execute commands via an e-mail message with shell metacharacters in the \"MAIL FROM\" command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1543",
        "Description": "MacOS uses weak encryption for passwords that are stored in the Users & Groups Data File.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1544",
        "Description": "Buffer overflow in FTP server in Microsoft IIS 3.0 and 4.0 allows local and sometimes remote attackers to cause a denial of service via a long NLST (ls) command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1545",
        "Description": "Joe's Own Editor (joe) 2.8 sets the world-readable permission on its crash-save file, DEADJOE, which could allow local users to read files that were being edited by other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1546",
        "Description": "netstation.navio-com.rte 1.1.0.1 configuration script for Navio NC on IBM AIX exports /tmp over NFS as world-readable and world-writable.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1547",
        "Description": "Oracle Web Listener 2.1 allows remote attackers to bypass access restrictions by replacing a character in the URL with its HTTP-encoded (hex) equivalent.",
        "CWE": [
            {
                "CWE": "CWE-20",
                "CWE Description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "CWE Techniques": [
                    {
                        "ID": "1562.003",
                        "Name": "Impair Defenses",
                        "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.006",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.007",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1539",
                        "Name": "Steal Web Session Cookie",
                        "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                        "Tactics": {
                            "credential-access": "The adversary is trying to steal account names and passwords."
                        }
                    },
                    {
                        "ID": "1036.001",
                        "Name": "Masquerading",
                        "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1553.002",
                        "Name": "Subvert Trust Controls",
                        "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1548",
        "Description": "Cabletron SmartSwitch Router (SSR) 8000 firmware 2.x can only handle 200 ARP requests per second allowing a denial of service attack to succeed with a flood of ARP requests exceeding that limit.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1549",
        "Description": "Lynx 2.x does not properly distinguish between internal and external HTML, which may allow a local attacker to read a \"secure\" hidden form value from a temporary file and craft a LYNXOPTIONS: URL that causes Lynx to modify the user's configuration file and execute commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1550",
        "Description": "bigconf.conf in F5 BIG/ip 2.1.2 and earlier allows remote attackers to read arbitrary files by specifying the target file in the \"file\" parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1551",
        "Description": "Buffer overflow in Ipswitch IMail Service 5.0 allows an attacker to cause a denial of service (crash) and possibly execute arbitrary commands via a long URL.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1552",
        "Description": "dpsexec (DPS Server) when running under XDM in IBM AIX 3.2.5 and earlier does not properly check privileges, which allows local users to overwrite arbitrary files and gain privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1553",
        "Description": "Buffer overflow in XCmail 0.99.6 with autoquote enabled allows remote attackers to execute arbitrary commands via a long subject line.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1554",
        "Description": "/usr/sbin/Mail on SGI IRIX 3.3 and 3.3.1 does not properly set the group ID to the group ID of the user who started Mail, which allows local users to read the mail of other users.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1555",
        "Description": "Cheyenne InocuLAN Anti-Virus Server in Inoculan 4.0 before Service Pack 2 creates an update directory with \"EVERYONE FULL CONTROL\" permissions, which allows local users to cause Inoculan's antivirus update feature to install a Trojan horse dll.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1556",
        "Description": "Microsoft SQL Server 6.5 uses weak encryption for the password for the SQLExecutiveCmdExec account and stores it in an accessible portion of the registry, which could allow local users to gain privileges by reading and decrypting the CmdExecAccount value.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1557",
        "Description": "Buffer overflow in the login functions in IMAP server (imapd) in Ipswitch IMail 5.0 and earlier allows remote attackers to cause a denial of service and possibly execute arbitrary code via (1) a long user name or (2) a long password.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1558",
        "Description": "Vulnerability in loginout in Digital OpenVMS 7.1 and earlier allows unauthorized access when external authentication is enabled.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1559",
        "Description": "Xylan OmniSwitch before 3.2.6 allows remote attackers to bypass the login prompt via a CTRL-D (control d) character, which locks other users out of the switch because it only supports one session at a time.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1560",
        "Description": "Vulnerability in a script in Texas A&M University (TAMU) Tiger allows local users to execute arbitrary commands as the Tiger user, usually root.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1561",
        "Description": "Nullsoft SHOUTcast server stores the administrative password in plaintext in a configuration file (sc_serv.conf), which could allow a local user to gain administrative privileges on the server.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1562",
        "Description": "gFTP FTP client 1.13, and other versions before 2.0.0, records a password in plaintext in (1) the log window, or (2) in a log file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1563",
        "Description": "Nachuatec D435 and D445 printer allows remote attackers to cause a denial of service via ICMP redirect storm.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1564",
        "Description": "FreeBSD 3.2 and possibly other versions allows a local user to cause a denial of service (panic) with a large number accesses of an NFS v3 mounted directory from a large number of processes.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1565",
        "Description": "Man2html 2.1 and earlier allows local users to overwrite arbitrary files via a symlink attack on a temporary file.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1566",
        "Description": "Buffer overflow in iParty server 1.2 and earlier allows remote attackers to cause a denial of service (crash) by connecting to default port 6004 and sending repeated extended characters.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1567",
        "Description": "Seapine Software TestTrack server allows a remote attacker to cause a denial of service (high CPU) via (1) TestTrackWeb.exe and (2) ttcgi.exe by connecting to port 99 and disconnecting without sending any data.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1568",
        "Description": "Off-by-one error in NcFTPd FTP server before 2.4.1 allows a remote attacker to cause a denial of service (crash) via a long PORT command.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1569",
        "Description": "Quake 1 and NetQuake servers allow remote attackers to cause a denial of service (resource exhaustion or forced disconnection) via a flood of spoofed UDP connection packets, which exceeds the server's player limit.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1570",
        "Description": "Buffer overflow in sar for OpenServer 5.0.5 allows local users to gain root privileges via a long -o parameter.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1571",
        "Description": "Buffer overflow in sar for SCO OpenServer 5.0.0 through 5.0.5 may allow local users to gain root privileges via a long -f parameter, a different vulnerability than CVE-1999-1570.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1572",
        "Description": "cpio on FreeBSD 2.1.0, Debian GNU/Linux 3.0, and possibly other operating systems, uses a 0 umask when creating files using the -O (archive) or -F options, which creates the files with mode 0666 and allows local users to read or overwrite those files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1573",
        "Description": "Multiple unknown vulnerabilities in the \"r-cmnds\" (1) remshd, (2) rexecd, (3) rlogind, (4) rlogin, (5) remsh, (6) rcp, (7) rexec, and (8) rdist for HP-UX 10.00 through 11.00 allow attackers to gain privileges or access files.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1574",
        "Description": "Buffer overflow in the lex routines of nslookup for AIX 4.3 may allow attackers to cause a core dump and possibly execute arbitrary code via \"long input strings.\"",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1575",
        "Description": "The Kodak/Wang (1) Image Edit (imgedit.ocx), (2) Image Annotation (imgedit.ocx), (3) Image Scan (imgscan.ocx), (4) Thumbnail Image (imgthumb.ocx), (5) Image Admin (imgadmin.ocx), (6) HHOpen (hhopen.ocx), (7) Registration Wizard (regwizc.dll), and (8) IE Active Setup (setupctl.dll) ActiveX controls for Internet Explorer (IE) 4.01 and 5.0 are marked as \"Safe for Scripting,\" which allows remote attackers to create and modify files and execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1576",
        "Description": "Buffer overflow in Adobe Acrobat ActiveX control (pdf.ocx, PDF.PdfCtrl.1) 1.3.188 for Acrobat Reader 4.0 allows remote attackers to execute arbitrary code via the pdf.setview method.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1577",
        "Description": "Buffer overflow in HHOpen ActiveX control (hhopen.ocx) 1.0.0.1 for Internet Explorer 4.01 and 5 allows remote attackers to execute arbitrary commands via long arguments to the OpenHelp method.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1578",
        "Description": "Buffer overflow in Registration Wizard ActiveX control (regwizc.dll, InvokeRegWizard) 3.0.0.0 for Internet Explorer 4.01 and 5 allows remote attackers to execute arbitrary commands.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1579",
        "Description": "The Cenroll ActiveX control (xenroll.dll) for Terminal Server Editions of Windows NT 4.0 and Windows NT Server 4.0 before SP6 allows remote attackers to cause a denial of service (resource consumption) by creating a large number of arbitrary files on the target machine.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1580",
        "Description": "SunOS sendmail 5.59 through 5.65 uses popen to process a forwarding host argument, which allows local users to gain root privileges by modifying the IFS (Internal Field Separator) variable and passing crafted values to the -oR option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1581",
        "Description": "Memory leak in Simple Network Management Protocol (SNMP) agent (snmp.exe) for Windows NT 4.0 before Service Pack 4 allows remote attackers to cause a denial of service (memory consumption) via a large number of SNMP packets with Object Identifiers (OIDs) that cannot be decoded.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1582",
        "Description": "By design, the \"established\" command on the Cisco PIX firewall allows connections from one host to arbitrary ports of a target host if an alternative conduit has already been allowed, which can cause administrators to configure less restrictive access controls than intended if they do not understand this functionality.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1583",
        "Description": "Buffer overflow in nslookup for AIX 4.3 allows local users to execute arbitrary code via a long hostname command line argument.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1584",
        "Description": "Unknown vulnerability in (1) loadmodule, and (2) modload if modload is installed with setuid/setgid privileges, in SunOS 4.1.1 through 4.1.3c, and Open Windows 3.0, allows local users to gain root privileges via environment variables, a different vulnerability than CVE-1999-1586.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1585",
        "Description": "The (1) rcS and (2) mountall programs in Sun Solaris 2.x, possibly before 2.4, start a privileged shell on the system console if fsck fails while the system is booting, which allows attackers with physical access to gain root privileges.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1586",
        "Description": "loadmodule in SunOS 4.1.x, as used by xnews, does not properly sanitize its environment, which allows local users to gain privileges, a different vulnerability than CVE-1999-1584.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1587",
        "Description": "/usr/ucb/ps in Sun Microsystems Solaris 8 and 9, and certain earlier releases, allows local users to view the environment variables and values of arbitrary processes via the -e option.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1588",
        "Description": "Buffer overflow in nlps_server in Sun Solaris x86 2.4, 2.5, and 2.5.1 allows remote attackers to execute arbitrary code as root via a long string beginning with \"NLPS:002:002:\" to the listen (aka System V listener) port, TCP port 2766.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1589",
        "Description": "Unspecified vulnerability in crontab in IBM AIX 3.2 allows local users to gain root privileges via unknown attack vectors.",
        "CWE": [
            {
                "CWE": "NVD-CWE-noinfo",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1590",
        "Description": "Directory traversal vulnerability in Muhammad A. Muquit wwwcount (Count.cgi) 2.3 allows remote attackers to read arbitrary GIF files via \"..\" sequences in the image parameter, a different vulnerability than CVE-1999-0021.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1591",
        "Description": "Microsoft Internet Information Services (IIS) server 4.0 SP4, without certain hotfixes released for SP4, does not require authentication credentials under certain conditions, which allows remote attackers to bypass authentication requirements, as demonstrated by connecting via Microsoft Visual InterDev 6.0.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1592",
        "Description": "Multiple unspecified vulnerabilities in sendmail 5, as installed on Sun SunOS 4.1.3_U1 and 4.1.4, have unspecified attack vectors and impact.  NOTE: this might overlap CVE-1999-0129.",
        "CWE": [
            {
                "CWE": "NVD-CWE-Other",
                "CWE Description": "Unknown CWE"
            }
        ]
    },
    {
        "CVE ID": "CVE-1999-1593",
        "Description": "Windows Internet Naming Service (WINS) allows remote attackers to cause a denial of service (connectivity loss) or steal credentials via a 1Ch registration that causes WINS to change the domain controller to point to a malicious server.  NOTE: this problem may be limited when Windows 95/98 clients are used, or if the primary domain controller becomes unavailable.",
        "CWE": [
            {
                "CWE": "CWE-59",
                "CWE Description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
                "CWE Techniques": [
                    {
                        "ID": "1547.009",
                        "Name": "Boot or Logon Autostart Execution",
                        "Description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions."
                        }
                    },
                    {
                        "ID": "1574.005",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1574.010",
                        "Name": "Hijack Execution Flow",
                        "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                        "Tactics": {
                            "persistence": "The adversary is trying to maintain their foothold.",
                            "privilege-escalation": "The adversary is trying to gain higher-level permissions.",
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.006",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1027.009",
                        "Name": "Obfuscated Files or Information",
                        "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    },
                    {
                        "ID": "1564.009",
                        "Name": "Hide Artifacts",
                        "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
                        "Tactics": {
                            "defense-evasion": "The adversary is trying to avoid being detected."
                        }
                    }
                ]
            }
        ]
    }
]